{
  "openapi": "3.0.2",
  "info": {
    "version": "0.0.1",
    "title": "Increase API"
  },
  "paths": {
    "/accounts": {
      "post": {
        "summary": "Create an Account",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_account_parameters"
              }
            }
          }
        },
        "operationId": "create_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Accounts"
      },
      "get": {
        "summary": "List Accounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Accounts for those belonging to the specified Entity."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ],
              "description": "Filter Accounts for those with the specified status.",
              "x-enum-descriptions": [
                "Open Accounts that are ready to use.",
                "Closed Accounts on which no new activity can occur."
              ]
            }
          }
        ],
        "operationId": "list_accounts",
        "responses": {
          "200": {
            "description": "Account List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/accounts/{account_id}": {
      "patch": {
        "summary": "Update an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account to update."
            },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_an_account_parameters"
              }
            }
          }
        },
        "operationId": "update_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Accounts"
      },
      "get": {
        "summary": "Retrieve an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account to retrieve."
            },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "operationId": "retrieve_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/accounts/{account_id}/close": {
      "post": {
        "summary": "Close an Account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account to close."
            },
            "example": "account_in71c4amph0vgo2qllky"
          }
        ],
        "operationId": "close_an_account",
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Accounts"
      }
    },
    "/account_numbers": {
      "post": {
        "summary": "Create an Account Number",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_account_number_parameters"
              }
            }
          }
        },
        "operationId": "create_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_number"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Numbers"
      },
      "get": {
        "summary": "List Account Numbers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "disabled",
                "canceled"
              ],
              "description": "The status to retrieve Account Numbers for.",
              "x-enum-descriptions": [
                "The account number is active.",
                "The account number is temporarily disabled.",
                "The account number is permanently disabled."
              ]
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Numbers to those belonging to the specified Account."
            }
          }
        ],
        "operationId": "list_account_numbers",
        "responses": {
          "200": {
            "description": "Account Number List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_number_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Numbers"
      }
    },
    "/account_numbers/{account_number_id}": {
      "patch": {
        "summary": "Update an Account Number",
        "parameters": [
          {
            "name": "account_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Number."
            },
            "example": "account_number_v18nkfqm6afpsrvy82b2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_an_account_number_parameters"
              }
            }
          }
        },
        "operationId": "update_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_number"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Numbers"
      },
      "get": {
        "summary": "Retrieve an Account Number",
        "parameters": [
          {
            "name": "account_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Number to retrieve."
            },
            "example": "account_number_v18nkfqm6afpsrvy82b2"
          }
        ],
        "operationId": "retrieve_an_account_number",
        "responses": {
          "200": {
            "description": "Account Number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_number"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Numbers"
      }
    },
    "/cards": {
      "post": {
        "summary": "Create a Card",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_card_parameters"
              }
            }
          }
        },
        "operationId": "create_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Cards"
      },
      "get": {
        "summary": "List Cards",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Cards to ones belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_cards",
        "responses": {
          "200": {
            "description": "Card List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/cards/{card_id}/details": {
      "get": {
        "summary": "Retrieve sensitive details for a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Card to retrieve details for."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "operationId": "retrieve_sensitive_details_for_a_card",
        "responses": {
          "200": {
            "description": "Card Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_details"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/cards/{card_id}": {
      "patch": {
        "summary": "Update a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The card identifier."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_a_card_parameters"
              }
            }
          }
        },
        "operationId": "update_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Cards"
      },
      "get": {
        "summary": "Retrieve a Card",
        "parameters": [
          {
            "name": "card_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Card."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          }
        ],
        "operationId": "retrieve_a_card",
        "responses": {
          "200": {
            "description": "Card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Cards"
      }
    },
    "/card_disputes": {
      "post": {
        "summary": "Create a Card Dispute",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_card_dispute_parameters"
              }
            }
          }
        },
        "operationId": "create_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_dispute"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Disputes"
      },
      "get": {
        "summary": "List Card Disputes",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending_reviewing",
                  "accepted",
                  "rejected"
                ],
                "x-enum-descriptions": [
                  "The Card Dispute is pending review.",
                  "The Card Dispute has been accepted and your funds have been returned.",
                  "The Card Dispute has been rejected."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          }
        ],
        "operationId": "list_card_disputes",
        "responses": {
          "200": {
            "description": "Card Dispute List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_dispute_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Disputes"
      }
    },
    "/card_disputes/{card_dispute_id}": {
      "get": {
        "summary": "Retrieve a Card Dispute",
        "parameters": [
          {
            "name": "card_dispute_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Card Dispute."
            },
            "example": "card_dispute_h9sc95nbl1cgltpp7men"
          }
        ],
        "operationId": "retrieve_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_dispute"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Disputes"
      }
    },
    "/card_profiles": {
      "post": {
        "summary": "Create a Card Profile",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_card_profile_parameters"
              }
            }
          }
        },
        "operationId": "create_a_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_profile"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Profiles"
      },
      "get": {
        "summary": "List Card Profiles",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "rejected",
                  "active",
                  "archived"
                ],
                "x-enum-descriptions": [
                  "The Card Profile is awaiting review from Increase and/or processing by card networks.",
                  "There is an issue with the Card Profile preventing it from use.",
                  "The Card Profile can be assigned to Cards.",
                  "The Card Profile is no longer in use."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          }
        ],
        "operationId": "list_card_profiles",
        "responses": {
          "200": {
            "description": "Card Profile List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_profile_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Profiles"
      }
    },
    "/card_profiles/{card_profile_id}": {
      "get": {
        "summary": "Retrieve a Card Profile",
        "parameters": [
          {
            "name": "card_profile_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Card Profile."
            },
            "example": "card_profile_cox5y73lob2eqly18piy"
          }
        ],
        "operationId": "retrieve_a_card_profile",
        "responses": {
          "200": {
            "description": "Card Profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_profile"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Card Profiles"
      }
    },
    "/digital_wallet_tokens": {
      "get": {
        "summary": "List Digital Wallet Tokens",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "card_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Digital Wallet Tokens to ones belonging to the specified Card."
            },
            "example": "card_oubs0hwk5rn6knuecxg2"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_digital_wallet_tokens",
        "responses": {
          "200": {
            "description": "Digital Wallet Token List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/digital_wallet_token_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Digital Wallet Tokens"
      }
    },
    "/digital_wallet_tokens/{digital_wallet_token_id}": {
      "get": {
        "summary": "Retrieve a Digital Wallet Token",
        "parameters": [
          {
            "name": "digital_wallet_token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Digital Wallet Token."
            },
            "example": "digital_wallet_token_izi62go3h51p369jrie0"
          }
        ],
        "operationId": "retrieve_a_digital_wallet_token",
        "responses": {
          "200": {
            "description": "Digital Wallet Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/digital_wallet_token"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Digital Wallet Tokens"
      }
    },
    "/transactions": {
      "get": {
        "summary": "List Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Transactions for those belonging to the specified Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "account_transfer_intention",
                  "ach_check_conversion_return",
                  "ach_check_conversion",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_intention",
                  "check_transfer_return",
                  "check_transfer_rejection",
                  "check_transfer_stop_payment_request",
                  "dispute_resolution",
                  "empyreal_cash_deposit",
                  "inbound_ach_transfer",
                  "inbound_ach_transfer_return_intention",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_general_ledger_transaction",
                  "internal_source",
                  "card_route_refund",
                  "card_route_settlement",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_drawdown_payment_intention",
                  "wire_drawdown_payment_rejection",
                  "wire_transfer_intention",
                  "wire_transfer_rejection",
                  "other"
                ],
                "x-enum-descriptions": [
                  "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.",
                  "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.",
                  "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.",
                  "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.",
                  "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.",
                  "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.",
                  "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.",
                  "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.",
                  "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.",
                  "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.",
                  "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.",
                  "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.",
                  "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.",
                  "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.",
                  "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.",
                  "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.",
                  "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.",
                  "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.",
                  "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.",
                  "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.",
                  "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.",
                  "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                  "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                  "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.",
                  "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.",
                  "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.",
                  "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.",
                  "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.",
                  "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.",
                  "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.",
                  "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.",
                  "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.",
                  "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.",
                  "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.",
                  "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.",
                  "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.",
                  "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.",
                  "The Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Transactions for those belonging to the specified route."
            }
          }
        ],
        "operationId": "list_transactions",
        "responses": {
          "200": {
            "description": "Transaction List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Transactions"
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "summary": "Retrieve a Transaction",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Transaction to retrieve."
            },
            "example": "transaction_uyrp7fld2ium70oa7oi"
          }
        ],
        "operationId": "retrieve_a_transaction",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Transactions"
      }
    },
    "/pending_transactions": {
      "get": {
        "summary": "List Pending Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those belonging to the specified Account."
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those belonging to the specified Route."
            }
          },
          {
            "name": "source_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter pending transactions to those caused by the specified source."
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "complete"
                ],
                "x-enum-descriptions": [
                  "The Pending Transaction is still awaiting confirmation.",
                  "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          }
        ],
        "operationId": "list_pending_transactions",
        "responses": {
          "200": {
            "description": "Pending Transaction List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pending_transaction_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Pending Transactions"
      }
    },
    "/pending_transactions/{pending_transaction_id}": {
      "get": {
        "summary": "Retrieve a Pending Transaction",
        "parameters": [
          {
            "name": "pending_transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Pending Transaction."
            },
            "example": "pending_transaction_k1sfetcau2qbvjbzgju4"
          }
        ],
        "operationId": "retrieve_a_pending_transaction",
        "responses": {
          "200": {
            "description": "Pending Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pending_transaction"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Pending Transactions"
      }
    },
    "/declined_transactions": {
      "get": {
        "summary": "List Declined Transactions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Declined Transactions to ones belonging to the specified Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "route_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Declined Transactions to those belonging to the specified route."
            }
          }
        ],
        "operationId": "list_declined_transactions",
        "responses": {
          "200": {
            "description": "Declined Transaction List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/declined_transaction_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Declined Transactions"
      }
    },
    "/declined_transactions/{declined_transaction_id}": {
      "get": {
        "summary": "Retrieve a Declined Transaction",
        "parameters": [
          {
            "name": "declined_transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Declined Transaction."
            },
            "example": "declined_transaction_17jbn0yyhvkt4v4ooym8"
          }
        ],
        "operationId": "retrieve_a_declined_transaction",
        "responses": {
          "200": {
            "description": "Declined Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/declined_transaction"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Declined Transactions"
      }
    },
    "/limits": {
      "post": {
        "summary": "Create a Limit",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_limit_parameters"
              }
            }
          }
        },
        "operationId": "create_a_limit",
        "responses": {
          "200": {
            "description": "Limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/limit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Limits"
      },
      "get": {
        "summary": "List Limits",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "model_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "The model to retrieve limits for."
            },
            "example": "account_number_v18nkfqm6afpsrvy82b2"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 200,
              "description": "The status to retrieve limits for."
            },
            "example": "active"
          }
        ],
        "operationId": "list_limits",
        "responses": {
          "200": {
            "description": "Limit List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/limit_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Limits"
      }
    },
    "/limits/{limit_id}": {
      "patch": {
        "summary": "Update a Limit",
        "parameters": [
          {
            "name": "limit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The limit to update."
            },
            "example": "limit_fku42k0qtc8ulsuas38q"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_a_limit_parameters"
              }
            }
          }
        },
        "operationId": "update_a_limit",
        "responses": {
          "200": {
            "description": "Limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/limit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Limits"
      },
      "get": {
        "summary": "Retrieve a Limit",
        "parameters": [
          {
            "name": "limit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Limit to retrieve."
            },
            "example": "limit_fku42k0qtc8ulsuas38q"
          }
        ],
        "operationId": "retrieve_a_limit",
        "responses": {
          "200": {
            "description": "Limit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/limit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Limits"
      }
    },
    "/account_transfers": {
      "post": {
        "summary": "Create an Account Transfer",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_account_transfer_parameters"
              }
            }
          }
        },
        "operationId": "create_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Transfers"
      },
      "get": {
        "summary": "List Account Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_account_transfers",
        "responses": {
          "200": {
            "description": "Account Transfer List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}": {
      "get": {
        "summary": "Retrieve an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Transfer."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "retrieve_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}/approve": {
      "post": {
        "summary": "Approve an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Transfer to approve."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "approve_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/account_transfers/{account_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel an Account Transfer",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Account Transfer to cancel."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "cancel_an_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Transfers"
      }
    },
    "/ach_transfers": {
      "post": {
        "summary": "Create an ACH Transfer",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_ach_transfer_parameters"
              }
            }
          }
        },
        "operationId": "create_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Transfers"
      },
      "get": {
        "summary": "List ACH Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter ACH Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "external_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter ACH Transfers to those made to the specified External Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_ach_transfers",
        "responses": {
          "200": {
            "description": "ACH Transfer List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}": {
      "get": {
        "summary": "Retrieve an ACH Transfer",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "retrieve_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}/approve": {
      "post": {
        "summary": "Approve an ACH Transfer",
        "description": "Approves an ACH Transfer in a pending_approval state.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer to approve."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "approve_an_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_transfers/{ach_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending ACH Transfer",
        "description": "Cancels an ACH Transfer in a pending_approval state.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending ACH Transfer to cancel."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "cancel_a_pending_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Transfers"
      }
    },
    "/ach_prenotifications": {
      "post": {
        "summary": "Create an ACH Prenotification",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_ach_prenotification_parameters"
              }
            }
          }
        },
        "operationId": "create_an_ach_prenotification",
        "responses": {
          "200": {
            "description": "ACH Prenotification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_prenotification"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Prenotifications"
      },
      "get": {
        "summary": "List ACH Prenotifications",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_ach_prenotifications",
        "responses": {
          "200": {
            "description": "ACH Prenotification List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_prenotification_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Prenotifications"
      }
    },
    "/ach_prenotifications/{ach_prenotification_id}": {
      "get": {
        "summary": "Retrieve an ACH Prenotification",
        "parameters": [
          {
            "name": "ach_prenotification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Prenotification to retrieve."
            },
            "example": "ach_prenotification_ubjf9qqsxl3obbcn1u34"
          }
        ],
        "operationId": "retrieve_an_ach_prenotification",
        "responses": {
          "200": {
            "description": "ACH Prenotification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_prenotification"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "ACH Prenotifications"
      }
    },
    "/inbound_ach_transfer_returns": {
      "post": {
        "summary": "Create an ACH Return",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_ach_return_parameters"
              }
            }
          }
        },
        "operationId": "create_an_ach_return",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer Return",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_ach_transfer_return"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Inbound ACH Transfer Returns"
      },
      "get": {
        "summary": "List Inbound ACH Transfer Returns",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_inbound_ach_transfer_returns",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer Return List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_ach_transfer_return_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Inbound ACH Transfer Returns"
      }
    },
    "/inbound_ach_transfer_returns/{inbound_ach_transfer_return_id}": {
      "get": {
        "summary": "Retrieve an Inbound ACH Transfer Return",
        "parameters": [
          {
            "name": "inbound_ach_transfer_return_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound ACH Transfer Return to retrieve."
            },
            "example": "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk"
          }
        ],
        "operationId": "retrieve_an_inbound_ach_transfer_return",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer Return",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_ach_transfer_return"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Inbound ACH Transfer Returns"
      }
    },
    "/wire_transfers": {
      "post": {
        "summary": "Create a Wire Transfer",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_wire_transfer_parameters"
              }
            }
          }
        },
        "operationId": "create_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Transfers"
      },
      "get": {
        "summary": "List Wire Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Wire Transfers to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "external_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Wire Transfers to those made to the specified External Account."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_wire_transfers",
        "responses": {
          "200": {
            "description": "Wire Transfer List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}": {
      "get": {
        "summary": "Retrieve a Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "retrieve_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}/approve": {
      "post": {
        "summary": "Approve a Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer to approve."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "approve_a_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_transfers/{wire_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending Wire Transfer",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Wire Transfer to cancel."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "cancel_a_pending_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Transfers"
      }
    },
    "/wire_drawdown_requests": {
      "post": {
        "summary": "Create a Wire Drawdown Request",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_wire_drawdown_request_parameters"
              }
            }
          }
        },
        "operationId": "create_a_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_drawdown_request"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      },
      "get": {
        "summary": "List Wire Drawdown Requests",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_wire_drawdown_requests",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_drawdown_request_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      }
    },
    "/wire_drawdown_requests/{wire_drawdown_request_id}": {
      "get": {
        "summary": "Retrieve a Wire Drawdown Request",
        "parameters": [
          {
            "name": "wire_drawdown_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Drawdown Request to retrieve."
            },
            "example": "wire_drawdown_request_q6lmocus3glo0lr2bfv3"
          }
        ],
        "operationId": "retrieve_a_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_drawdown_request"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Wire Drawdown Requests"
      }
    },
    "/inbound_wire_drawdown_requests": {
      "get": {
        "summary": "List Inbound Wire Drawdown Requests",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_inbound_wire_drawdown_requests",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_wire_drawdown_request_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Inbound Wire Drawdown Requests"
      }
    },
    "/inbound_wire_drawdown_requests/{inbound_wire_drawdown_request_id}": {
      "get": {
        "summary": "Retrieve an Inbound Wire Drawdown Request",
        "parameters": [
          {
            "name": "inbound_wire_drawdown_request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Inbound Wire Drawdown Request to retrieve."
            },
            "example": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e"
          }
        ],
        "operationId": "retrieve_an_inbound_wire_drawdown_request",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_wire_drawdown_request"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Inbound Wire Drawdown Requests"
      }
    },
    "/check_transfers": {
      "post": {
        "summary": "Create a Check Transfer",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_check_transfer_parameters"
              }
            }
          }
        },
        "operationId": "create_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      },
      "get": {
        "summary": "List Check Transfers",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Check Transfers to those that originated from the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_check_transfers",
        "responses": {
          "200": {
            "description": "Check Transfer List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}": {
      "get": {
        "summary": "Retrieve a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "retrieve_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/approve": {
      "post": {
        "summary": "Approve a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer to approve."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "approve_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/cancel": {
      "post": {
        "summary": "Cancel a pending Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the pending Check Transfer to cancel."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "cancel_a_pending_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_transfers/{check_transfer_id}/stop_payment": {
      "post": {
        "summary": "Request a stop payment on a Check Transfer",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "request_a_stop_payment_on_a_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Transfers"
      }
    },
    "/check_deposits": {
      "post": {
        "summary": "Create a Check Deposit",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_check_deposit_parameters"
              }
            }
          }
        },
        "operationId": "create_a_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Deposits"
      },
      "get": {
        "summary": "List Check Deposits",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Check Deposits to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_check_deposits",
        "responses": {
          "200": {
            "description": "Check Deposit List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Deposits"
      }
    },
    "/check_deposits/{check_deposit_id}": {
      "get": {
        "summary": "Retrieve a Check Deposit",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit to retrieve."
            },
            "example": "check_deposit_instruction_q2shv7x9qhevfm71kor8"
          }
        ],
        "operationId": "retrieve_a_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Check Deposits"
      }
    },
    "/routing_numbers": {
      "get": {
        "summary": "List Routing Numbers",
        "description": "You can use this API to confirm if a routing number is valid, such as when a user is providing you with bank account details. Since routing numbers uniquely identify a bank, this will always return 0 or 1 entry. In Sandbox, the only valid routing number for this method is 110000000.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "routing_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 9,
              "description": "Filter financial institutions by routing number."
            },
            "example": "021000021"
          }
        ],
        "operationId": "list_routing_numbers",
        "responses": {
          "200": {
            "description": "Routing Number List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/routing_number_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Routing Numbers"
      }
    },
    "/external_accounts": {
      "post": {
        "summary": "Create an External Account",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_external_account_parameters"
              }
            }
          }
        },
        "operationId": "create_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "External Accounts"
      },
      "get": {
        "summary": "List External Accounts",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "status.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "active",
                  "archived"
                ],
                "x-enum-descriptions": [
                  "The External Acccount is active.",
                  "The External Account is archived and won't appear in the dashboard."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          }
        ],
        "operationId": "list_external_accounts",
        "responses": {
          "200": {
            "description": "External Account List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "External Accounts"
      }
    },
    "/external_accounts/{external_account_id}": {
      "patch": {
        "summary": "Update an External Account",
        "parameters": [
          {
            "name": "external_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The external account identifier."
            },
            "example": "external_account_ukk55lr923a3ac0pp7iv"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_an_external_account_parameters"
              }
            }
          }
        },
        "operationId": "update_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "External Accounts"
      },
      "get": {
        "summary": "Retrieve an External Account",
        "parameters": [
          {
            "name": "external_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the External Account."
            },
            "example": "external_account_ukk55lr923a3ac0pp7iv"
          }
        ],
        "operationId": "retrieve_an_external_account",
        "responses": {
          "200": {
            "description": "External Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/external_account"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "External Accounts"
      }
    },
    "/entities": {
      "post": {
        "summary": "Create an Entity",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_entity_parameters"
              }
            }
          }
        },
        "operationId": "create_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Entities"
      },
      "get": {
        "summary": "List Entities",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_entities",
        "responses": {
          "200": {
            "description": "Entity List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}": {
      "get": {
        "summary": "Retrieve an Entity",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Entity to retrieve."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "operationId": "retrieve_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/entities/{entity_id}/supplemental_documents": {
      "post": {
        "summary": "Create a supplemental document for an Entity",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Entity to retrieve."
            },
            "example": "entity_n8y8tnk2p9339ti393yi"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_a_supplemental_document_for_an_entity_parameters"
              }
            }
          }
        },
        "operationId": "create_a_supplemental_document_for_an_entity",
        "responses": {
          "200": {
            "description": "Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Entities"
      }
    },
    "/account_statements": {
      "get": {
        "summary": "List Account Statements",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Account Statements to those belonging to the specified Account."
            },
            "example": "account_in71c4amph0vgo2qllky"
          },
          {
            "name": "statement_period_start.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "statement_period_start.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_account_statements",
        "responses": {
          "200": {
            "description": "Account Statement List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_statement_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Statements"
      }
    },
    "/account_statements/{account_statement_id}": {
      "get": {
        "summary": "Retrieve an Account Statement",
        "parameters": [
          {
            "name": "account_statement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Statement to retrieve."
            },
            "example": "account_statement_lkc03a4skm2k7f38vj15"
          }
        ],
        "operationId": "retrieve_an_account_statement",
        "responses": {
          "200": {
            "description": "Account Statement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_statement"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Account Statements"
      }
    },
    "/files": {
      "post": {
        "summary": "Create a File",
        "description": "To upload a file to Increase, you'll need to send a request of Content-Type `multipart/form-data`. The request should contain the file you would like to upload, as well as the parameters for creating a file.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/create_a_file_parameters"
              }
            }
          }
        },
        "operationId": "create_a_file",
        "responses": {
          "200": {
            "description": "File",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Files"
      },
      "get": {
        "summary": "List Files",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "purpose.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "check_image_front",
                  "check_image_back",
                  "form_1099_int",
                  "form_ss_4",
                  "identity_document",
                  "increase_statement",
                  "other",
                  "trust_formation_document",
                  "digital_wallet_artwork",
                  "digital_wallet_app_icon",
                  "entity_supplemental_document"
                ],
                "x-enum-descriptions": [
                  "An image of the front of a check, used for check deposits.",
                  "An image of the back of a check, used for check deposits.",
                  "IRS Form 1099-INT.",
                  "IRS Form SS-4.",
                  "An image of a government-issued ID.",
                  "A statement generated by Increase.",
                  "A file purpose not covered by any of the other cases.",
                  "A legal document forming a trust.",
                  "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
                  "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
                  "A supplemental document associated an an Entity."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          }
        ],
        "operationId": "list_files",
        "responses": {
          "200": {
            "description": "File List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Files"
      }
    },
    "/files/{file_id}": {
      "get": {
        "summary": "Retrieve a File",
        "parameters": [
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the File."
            },
            "example": "file_makxrc67oh9l6sg7w9yc"
          }
        ],
        "operationId": "retrieve_a_file",
        "responses": {
          "200": {
            "description": "File",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/file"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Files"
      }
    },
    "/documents": {
      "get": {
        "summary": "List Documents",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "entity_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Documents to ones belonging to the specified Entity."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "form_1099_int"
                ],
                "x-enum-descriptions": [
                  "Internal Revenue Service Form 1099-INT."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          }
        ],
        "operationId": "list_documents",
        "responses": {
          "200": {
            "description": "Document List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Documents"
      }
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "Retrieve a Document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Document to retrieve."
            },
            "example": "document_qjtqc6s4c14ve2q89izm"
          }
        ],
        "operationId": "retrieve_a_document",
        "responses": {
          "200": {
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Documents"
      }
    },
    "/events": {
      "get": {
        "summary": "List Events",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          },
          {
            "name": "created_at.after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_after",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "created_at.on_or_before",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Return results on or before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp."
            }
          },
          {
            "name": "category.in",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "account.created",
                  "account.updated",
                  "account_number.created",
                  "account_number.updated",
                  "account_statement.created",
                  "account_transfer.created",
                  "account_transfer.updated",
                  "ach_prenotification.created",
                  "ach_prenotification.updated",
                  "ach_transfer.created",
                  "ach_transfer.updated",
                  "card.created",
                  "card.updated",
                  "card_dispute.created",
                  "card_dispute.updated",
                  "check_deposit.created",
                  "check_deposit.updated",
                  "check_transfer.created",
                  "check_transfer.updated",
                  "declined_transaction.created",
                  "digital_wallet_token.created",
                  "digital_wallet_token.updated",
                  "document.created",
                  "entity.created",
                  "entity.updated",
                  "external_account.created",
                  "file.created",
                  "group.updated",
                  "group.heartbeat",
                  "inbound_ach_transfer_return.created",
                  "inbound_ach_transfer_return.updated",
                  "inbound_wire_drawdown_request.created",
                  "oauth_connection.created",
                  "oauth_connection.deactivated",
                  "pending_transaction.created",
                  "pending_transaction.updated",
                  "real_time_decision.card_authorization_requested",
                  "real_time_decision.digital_wallet_token_requested",
                  "real_time_decision.digital_wallet_authentication_requested",
                  "real_time_payments_transfer.created",
                  "real_time_payments_transfer.updated",
                  "real_time_payments_request_for_payment.created",
                  "real_time_payments_request_for_payment.updated",
                  "transaction.created",
                  "wire_drawdown_request.created",
                  "wire_drawdown_request.updated",
                  "wire_transfer.created",
                  "wire_transfer.updated"
                ],
                "x-enum-descriptions": [
                  "Occurs whenever an Account is created.",
                  "Occurs whenever an Account is updated.",
                  "Occurs whenever an Account Number is created.",
                  "Occurs whenever an Account Number is updated.",
                  "Occurs whenever an Account Statement is created.",
                  "Occurs whenever an Account Transfer is created.",
                  "Occurs whenever an Account Transfer is updated.",
                  "Occurs whenever an ACH Prenotification is created.",
                  "Occurs whenever an ACH Prenotification is updated.",
                  "Occurs whenever an ACH Transfer is created.",
                  "Occurs whenever an ACH Transfer is updated.",
                  "Occurs whenever a Card is created.",
                  "Occurs whenever a Card is updated.",
                  "Occurs whenever a Card Dispute is created.",
                  "Occurs whenever a Card Dispute is updated.",
                  "Occurs whenever a Check Deposit is created.",
                  "Occurs whenever a Check Deposit is updated.",
                  "Occurs whenever a Check Transfer is created.",
                  "Occurs whenever a Check Transfer is updated.",
                  "Occurs whenever a Declined Transaction is created.",
                  "Occurs whenever a Digital Wallet Token is created.",
                  "Occurs whenever a Digital Wallet Token is updated.",
                  "Occurs whenever a Document is created.",
                  "Occurs whenever an Entity is created.",
                  "Occurs whenever an Entity is updated.",
                  "Occurs whenever an External Account is created.",
                  "Occurs whenever a File is created.",
                  "Occurs whenever a Group is updated.",
                  "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
                  "Occurs whenever an Inbound ACH Transfer Return is created.",
                  "Occurs whenever an Inbound ACH Transfer Return is updated.",
                  "Occurs whenever an Inbound Wire Drawdown Request is created.",
                  "Occurs whenever an OAuth Connection is created.",
                  "Occurs whenever an OAuth Connection is deactivated.",
                  "Occurs whenever a Pending Transaction is created.",
                  "Occurs whenever a Pending Transaction is updated.",
                  "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
                  "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
                  "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
                  "Occurs whenever a Real Time Payments Transfer is created.",
                  "Occurs whenever a Real Time Payments Transfer is updated.",
                  "Occurs whenever a Real Time Payments Request for Payment is created.",
                  "Occurs whenever a Real Time Payments Request for Payment is updated.",
                  "Occurs whenever a Transaction is updated.",
                  "Occurs whenever a Wire Drawdown Request is created.",
                  "Occurs whenever a Wire Drawdown Request is updated.",
                  "Occurs whenever a Wire Transfer is created.",
                  "Occurs whenever a Wire Transfer is updated."
                ]
              },
              "description": "Return results whose value is in the provided list. For GET requests, this should be encoded as a comma-delimited string, such as `?in=one,two,three`."
            }
          },
          {
            "name": "associated_object_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter Events to those belonging to the object with the provided identifier."
            }
          }
        ],
        "operationId": "list_events",
        "responses": {
          "200": {
            "description": "Event List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Events"
      }
    },
    "/events/{event_id}": {
      "get": {
        "summary": "Retrieve an Event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Event."
            },
            "example": "event_001dzz0r20rzr4zrhrr1364hy80"
          }
        ],
        "operationId": "retrieve_an_event",
        "responses": {
          "200": {
            "description": "Event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Events"
      }
    },
    "/event_subscriptions": {
      "post": {
        "summary": "Create an Event Subscription",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_an_event_subscription_parameters"
              }
            }
          }
        },
        "operationId": "create_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event_subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Event Subscriptions"
      },
      "get": {
        "summary": "List Event Subscriptions",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_event_subscriptions",
        "responses": {
          "200": {
            "description": "Event Subscription List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event_subscription_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Event Subscriptions"
      }
    },
    "/event_subscriptions/{event_subscription_id}": {
      "patch": {
        "summary": "Update an Event Subscription",
        "parameters": [
          {
            "name": "event_subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Event Subscription."
            },
            "example": "event_subscription_001dzz0r20rcdxgb013zqb8m04g"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_an_event_subscription_parameters"
              }
            }
          }
        },
        "operationId": "update_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event_subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Event Subscriptions"
      },
      "get": {
        "summary": "Retrieve an Event Subscription",
        "parameters": [
          {
            "name": "event_subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Event Subscription."
            },
            "example": "event_subscription_001dzz0r20rcdxgb013zqb8m04g"
          }
        ],
        "operationId": "retrieve_an_event_subscription",
        "responses": {
          "200": {
            "description": "Event Subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/event_subscription"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Event Subscriptions"
      }
    },
    "/real_time_decisions/{real_time_decision_id}/action": {
      "post": {
        "summary": "Action a Real-Time Decision",
        "parameters": [
          {
            "name": "real_time_decision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Real-Time Decision."
            },
            "example": "real_time_decision_j76n2e810ezcg3zh5qtn"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/action_a_real_time_decision_parameters"
              }
            }
          }
        },
        "operationId": "action_a_real_time_decision",
        "responses": {
          "200": {
            "description": "Real-Time Decision",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/real_time_decision"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Real-Time Decisions"
      }
    },
    "/real_time_decisions/{real_time_decision_id}": {
      "get": {
        "summary": "Retrieve a Real-Time Decision",
        "parameters": [
          {
            "name": "real_time_decision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Real-Time Decision."
            },
            "example": "real_time_decision_j76n2e810ezcg3zh5qtn"
          }
        ],
        "operationId": "retrieve_a_real_time_decision",
        "responses": {
          "200": {
            "description": "Real-Time Decision",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/real_time_decision"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Real-Time Decisions"
      }
    },
    "/groups/current": {
      "get": {
        "summary": "Retrieve Group details",
        "description": "Returns details for the currently authenticated Group.",
        "parameters": [

        ],
        "operationId": "retrieve_group_details",
        "responses": {
          "200": {
            "description": "Group",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/group"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Groups"
      }
    },
    "/oauth_connections": {
      "get": {
        "summary": "List OAuth Connections",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Return the page of entries after this one."
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Limit the size of the list that is returned. The default (and maximum) is 100 objects.",
              "minimum": 0
            }
          }
        ],
        "operationId": "list_oauth_connections",
        "responses": {
          "200": {
            "description": "OAuth Connection List",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oauth_connection_list"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "OAuth Connections"
      }
    },
    "/oauth_connections/{oauth_connection_id}": {
      "get": {
        "summary": "Retrieve an OAuth Connection",
        "parameters": [
          {
            "name": "oauth_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the OAuth Connection."
            },
            "example": "connection_dauknoksyr4wilz4e6my"
          }
        ],
        "operationId": "retrieve_an_oauth_connection",
        "responses": {
          "200": {
            "description": "OAuth Connection",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oauth_connection"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "OAuth Connections"
      }
    },
    "/simulations/inbound_ach_transfers": {
      "post": {
        "summary": "Simulate an ACH Transfer to your account",
        "description": "Simulates an inbound ACH transfer to your account. This imitates initiating a transaction to an Increase account from a different financial institution. The transfer may be either a credit or a debit depending on if the `amount` is positive or negative. The result of calling this API will be either a [Transaction](#transactions) or a [Declined Transaction](#declined-transactions) depending on whether or not the transfer is allowed.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_ach_transfer_to_your_account_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_ach_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound ACH Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_ach_transfer_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/ach_transfers/{ach_transfer_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox ACH Transfer",
        "description": "Simulates the submission of an [ACH Transfer](#ach-transfers) to the Federal Reserve. This transfer must first have a `status` of `pending_approval` or `pending_submission`. In production, Increase submits ACH Transfers to the Federal Reserve three times per day on weekdays. Since sandbox ACH Transfers are not submitted to the Federal Reserve, this endpoint allows you to skip that delay and transition the ACH Transfer to a status of `submitted`.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer you wish to submit."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "operationId": "submit_a_sandbox_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/ach_transfers/{ach_transfer_id}/return": {
      "post": {
        "summary": "Return a Sandbox ACH Transfer",
        "description": "Simulates the return of an [ACH Transfer](#ach-transfers) by the Federal Reserve due to an error condition. This will also create a Transaction to account for the returned funds. This transfer must first have a `status` of `submitted`.",
        "parameters": [
          {
            "name": "ach_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the ACH Transfer you wish to return."
            },
            "example": "ach_transfer_uoxatyh3lt5evrsdvo7q"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/return_a_sandbox_ach_transfer_parameters"
              }
            }
          }
        },
        "operationId": "return_a_sandbox_ach_transfer",
        "responses": {
          "200": {
            "description": "ACH Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ach_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/account_transfers/{account_transfer_id}/complete": {
      "post": {
        "summary": "Complete a Sandbox Account Transfer",
        "description": "If your account is configured to require approval for each transfer, this endpoint simulates the approval of an [Account Transfer](#account-transfers). You can also approve sandbox Account Transfers in the dashboard. This transfer must first have a `status` of `pending_approval`.",
        "parameters": [
          {
            "name": "account_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Account Transfer you wish to complete."
            },
            "example": "account_transfer_7k9qe1ysdgqztnt63l7n"
          }
        ],
        "operationId": "complete_a_sandbox_account_transfer",
        "responses": {
          "200": {
            "description": "Account Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_transfers/{check_transfer_id}/mail": {
      "post": {
        "summary": "Mail a Sandbox Check Transfer",
        "description": "Simulates the mailing of a [Check Transfer](#check-transfers), which happens once per weekday in production but can be sped up in sandbox. This transfer must first have a `status` of `pending_approval` or `pending_submission`.",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer you wish to mail."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "mail_a_sandbox_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_transfers/{check_transfer_id}/deposit": {
      "post": {
        "summary": "Deposit a Sandbox Check Transfer",
        "description": "Simulates a [Check Transfer](#check-transfers) being deposited at a bank. This transfer must first have a `status` of `mailed`.",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer you wish to mark deposited."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "operationId": "deposit_a_sandbox_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_transfers/{check_transfer_id}/return": {
      "post": {
        "summary": "Return a Sandbox Check Transfer",
        "description": "Simulates a [Check Transfer](#check-transfers) being returned via USPS to Increase. This transfer must first have a `status` of `mailed`.",
        "parameters": [
          {
            "name": "check_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Transfer you wish to mark returned."
            },
            "example": "check_transfer_30b43acfu9vw8fyc4f5"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/return_a_sandbox_check_transfer_parameters"
              }
            }
          }
        },
        "operationId": "return_a_sandbox_check_transfer",
        "responses": {
          "200": {
            "description": "Check Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox Check Deposit",
        "description": "Simulates the submission of a [Check Deposit](#check-deposits) to the Federal Reserve. This Check Deposit must first have a `status` of `pending`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to submit."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "submit_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/reject": {
      "post": {
        "summary": "Reject a Sandbox Check Deposit",
        "description": "Simulates the rejection of a [Check Deposit](#check-deposits) by Increase due to factors like poor image quality. This Check Deposit must first have a `status` of `pending`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to reject."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "reject_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/check_deposits/{check_deposit_id}/return": {
      "post": {
        "summary": "Return a Sandbox Check Deposit",
        "description": "Simulates the return of a [Check Deposit](#check-deposits). This Check Deposit must first have a `status` of `submitted`.",
        "parameters": [
          {
            "name": "check_deposit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Check Deposit you wish to return."
            },
            "example": "check_deposit_f06n9gpg7sxn8t19lfc1"
          }
        ],
        "operationId": "return_a_sandbox_check_deposit",
        "responses": {
          "200": {
            "description": "Check Deposit",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check_deposit"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_wire_transfers": {
      "post": {
        "summary": "Simulate a Wire Transfer to your account",
        "description": "Simulates an inbound Wire Transfer to your account.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_a_wire_transfer_to_your_account_parameters"
              }
            }
          }
        },
        "operationId": "simulate_a_wire_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound Wire Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_wire_transfer_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/wire_transfers/{wire_transfer_id}/submit": {
      "post": {
        "summary": "Submit a Sandbox Wire Transfer",
        "description": "Simulates the submission of a [Wire Transfer](#wire-transfers) to the Federal Reserve. This transfer must first have a `status` of `pending_approval` or `pending_creating`.",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer you wish to submit."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "submit_a_sandbox_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/wire_transfers/{wire_transfer_id}/reverse": {
      "post": {
        "summary": "Reverse a Sandbox Wire Transfer",
        "description": "Simulates the reversal of a [Wire Transfer](#wire-transfers) by the Federal Reserve due to error conditions. This will also create a [Transaction](#transaction) to account for the returned funds. This Wire Transfer must first have a `status` of `complete`.'",
        "parameters": [
          {
            "name": "wire_transfer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The identifier of the Wire Transfer you wish to reverse."
            },
            "example": "wire_transfer_5akynk7dqsq25qwk9q2u"
          }
        ],
        "operationId": "reverse_a_sandbox_wire_transfer",
        "responses": {
          "200": {
            "description": "Wire Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wire_transfer"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_wire_drawdown_requests": {
      "post": {
        "summary": "Simulate an Inbound Wire Drawdown request being created",
        "description": "Simulates the receival of an [Inbound Wire Drawdown Request](#inbound-wire-drawdown-requests).",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_inbound_wire_drawdown_request_being_created_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_inbound_wire_drawdown_request_being_created",
        "responses": {
          "200": {
            "description": "Inbound Wire Drawdown Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_wire_drawdown_request"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_authorizations": {
      "post": {
        "summary": "Simulate an authorization on a Card",
        "description": "Simulates a purchase authorization on a [Card](#cards). Depending on the balance available to the card and the `amount` submitted, the authorization activity will result in a [Pending Transaction](#pending-transactions) of type `card_authorization` or a [Declined Transaction](#declined-transactions) of type `card_decline`. You can pass either a Card id or a [Digital Wallet Token](#digital-wallet-tokens) id to simulate the two different ways purchases can be made.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_authorization_on_a_card_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_authorization_on_a_card",
        "responses": {
          "200": {
            "description": "Inbound Card Authorization Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_card_authorization_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_settlements": {
      "post": {
        "summary": "Simulate settling a card authorization",
        "description": "Simulates the settlement of an authorization by a card acquirer. After a card authorization is created, the merchant will eventually send a settlement. This simulates that event, which may occur many days after the purchase in production. The amount settled can be different from the amount originally authorized, for example, when adding a tip to a restaurant bill.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_settling_a_card_authorization_parameters"
              }
            }
          }
        },
        "operationId": "simulate_settling_a_card_authorization",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_refunds": {
      "post": {
        "summary": "Simulate a refund on a card",
        "description": "Simulates refunding a card transaction. The full value of the original sandbox transaction is refunded.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_a_refund_on_a_card_parameters"
              }
            }
          }
        },
        "operationId": "simulate_a_refund_on_a_card",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transaction"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/card_disputes/{card_dispute_id}/action": {
      "post": {
        "summary": "Simulates advancing the state of a card dispute",
        "description": "After a [Card Dispute](#card-disputes) is created in production, the dispute will be reviewed. Since no review happens in sandbox, this endpoint simulates moving a Card Dispute into a rejected or accepted state. A Card Dispute can only be actioned one time and must have a status of `pending_reviewing`.",
        "parameters": [
          {
            "name": "card_dispute_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The dispute you would like to action."
            },
            "example": "card_dispute_h9sc95nbl1cgltpp7men"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulates_advancing_the_state_of_a_card_dispute_parameters"
              }
            }
          }
        },
        "operationId": "simulates_advancing_the_state_of_a_card_dispute",
        "responses": {
          "200": {
            "description": "Card Dispute",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/card_dispute"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/digital_wallet_token_requests": {
      "post": {
        "summary": "Simulate digital wallet provisioning for a card",
        "description": "Simulates a user attempting add a [Card](#cards) to a digital wallet such as Apple Pay.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_digital_wallet_provisioning_for_a_card_parameters"
              }
            }
          }
        },
        "operationId": "simulate_digital_wallet_provisioning_for_a_card",
        "responses": {
          "200": {
            "description": "Inbound Digital Wallet Token Request Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_digital_wallet_token_request_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/inbound_real_time_payments_transfers": {
      "post": {
        "summary": "Simulate a Real Time Payments Transfer to your account",
        "description": "Simulates an inbound Real Time Payments transfer to your account. Real Time Payments are a beta feature.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_a_real_time_payments_transfer_to_your_account_parameters"
              }
            }
          }
        },
        "operationId": "simulate_a_real_time_payments_transfer_to_your_account",
        "responses": {
          "200": {
            "description": "Inbound Real Time Payments Transfer Simulation Result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inbound_real_time_payments_transfer_simulation_result"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/account_statements": {
      "post": {
        "summary": "Simulate an Account Statement being created",
        "description": "Simulates an [Account Statement](#account-statements) being created for an account. In production, Account Statements are generated once per month.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_an_account_statement_being_created_parameters"
              }
            }
          }
        },
        "operationId": "simulate_an_account_statement_being_created",
        "responses": {
          "200": {
            "description": "Account Statement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_statement"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    },
    "/simulations/documents": {
      "post": {
        "summary": "Simulate a tax document being created",
        "description": "Simulates an tax document being created for an account.",
        "parameters": [

        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/simulate_a_tax_document_being_created_parameters"
              }
            }
          }
        },
        "operationId": "simulate_a_tax_document_being_created",
        "responses": {
          "200": {
            "description": "Document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "x-tag": "Simulations"
      }
    }
  },
  "security": [
    {
      "bearerAuth": [

      ]
    }
  ],
  "servers": [
    {
      "url": "https://api.increase.com"
    },
    {
      "url": "https://sandbox.increase.com"
    }
  ],
  "tags": [
    {
      "name": "Accounts",
      "description": "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance."
    },
    {
      "name": "Account Numbers",
      "description": "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment."
    },
    {
      "name": "Cards",
      "description": "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement."
    },
    {
      "name": "Card Disputes",
      "description": "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate."
    },
    {
      "name": "Card Profiles",
      "description": "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)"
    },
    {
      "name": "Digital Wallet Tokens",
      "description": "A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card."
    },
    {
      "name": "Transactions",
      "description": "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement."
    },
    {
      "name": "Pending Transactions",
      "description": "Pending Transactions are potential future additions and removals of money from your bank account."
    },
    {
      "name": "Declined Transactions",
      "description": "Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered."
    },
    {
      "name": "Limits",
      "description": "You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits."
    },
    {
      "name": "Account Transfers",
      "description": "Account transfers move funds between your own accounts at Increase."
    },
    {
      "name": "ACH Transfers",
      "description": "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH)."
    },
    {
      "name": "ACH Prenotifications",
      "description": "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH)."
    },
    {
      "name": "Inbound ACH Transfer Returns",
      "description": "If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer."
    },
    {
      "name": "Wire Transfers",
      "description": "Wire transfers move funds between your Increase account and any other account accessible by Fedwire."
    },
    {
      "name": "Wire Drawdown Requests",
      "description": "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more."
    },
    {
      "name": "Inbound Wire Drawdown Requests",
      "description": "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more."
    },
    {
      "name": "Check Transfers",
      "description": "Check Transfers move funds from your Increase account by mailing a physical check."
    },
    {
      "name": "Check Deposits",
      "description": "Check Deposits allow you to deposit images of paper checks into your account."
    },
    {
      "name": "Routing Numbers",
      "description": "Routing numbers are used to identify your bank in a financial transaction."
    },
    {
      "name": "External Accounts",
      "description": "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse."
    },
    {
      "name": "Entities",
      "description": "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts."
    },
    {
      "name": "Account Statements",
      "description": "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File."
    },
    {
      "name": "Files",
      "description": "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF)."
    },
    {
      "name": "Documents",
      "description": "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT."
    },
    {
      "name": "Events",
      "description": "Events are records of things that happened to objects in the API. They also result in webhooks being generated."
    },
    {
      "name": "Event Subscriptions",
      "description": "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks)."
    },
    {
      "name": "Real-Time Decisions",
      "description": "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!"
    },
    {
      "name": "Groups",
      "description": "Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access."
    },
    {
      "name": "OAuth Connections",
      "description": "When a user authorizes your OAuth application, an OAuth Connection object is created."
    },
    {
      "name": "Simulations",
      "description": "When building your application, you can use these APIs to simulate external effects. They can be helpful to quickly test events that might take several hours in the real world (like receiving a wire or ACH). *These APIs will only work in the sandbox.* If you have a sandbox [Event Subscription](#event-subscriptions) configured, calling these APIs will also result in the appropriate webhooks being sent to your endpoint."
    }
  ],
  "components": {
    "schemas": {
      "create_an_account_parameters": {
        "type": "object",
        "example": {
          "name": "New Account!"
        },
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The identifier for the Entity that will own the Account."
          },
          "informational_entity_id": {
            "type": "string",
            "description": "The identifier of an Entity that, while not owning the Account, is associated with its activity. Its relationship to your group must be `informational`."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account."
          }
        },
        "required": [
          "name"
        ]
      },
      "update_an_account_parameters": {
        "type": "object",
        "example": {
          "name": "My renamed account"
        },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The new name of the Account."
          }
        },
        "required": [

        ]
      },
      "create_an_account_number_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "name": "Rent payments"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Account the Account Number should belong to."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account Number."
          }
        },
        "required": [
          "account_id",
          "name"
        ]
      },
      "update_an_account_number_parameters": {
        "type": "object",
        "example": {
          "status": "disabled"
        },
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account Number."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "canceled"
            ],
            "description": "This indicates if transfers can be made to the Account Number.",
            "x-enum-descriptions": [
              "The account number is active.",
              "The account number is temporarily disabled.",
              "The account number is permanently disabled."
            ]
          }
        },
        "required": [

        ]
      },
      "create_a_card_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "description": "Card for Ian Crease"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Account the card should belong to."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the card."
          },
          "billing_address": {
            "type": "object",
            "description": "The card's billing address.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the billing address."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the billing address."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the billing address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The US state of the billing address."
              },
              "postal_code": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The postal code of the billing address."
              }
            },
            "required": [
              "line1",
              "city",
              "state",
              "postal_code"
            ]
          },
          "digital_wallet": {
            "type": "object",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email."
              },
              "phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this digital card. Card profiles may also be assigned at the program level."
              }
            },
            "required": [

            ]
          }
        },
        "required": [
          "account_id"
        ]
      },
      "update_a_card_parameters": {
        "type": "object",
        "example": {
          "description": "New description"
        },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the card."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "canceled"
            ],
            "description": "The status to update the Card with.",
            "x-enum-descriptions": [
              "The card is active.",
              "The card is temporarily disabled.",
              "The card is temporarily canceled."
            ]
          },
          "billing_address": {
            "type": "object",
            "description": "The card's updated billing address.",
            "properties": {
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the billing address."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the billing address."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the billing address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The US state of the billing address."
              },
              "postal_code": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The postal code of the billing address."
              }
            },
            "required": [
              "line1",
              "city",
              "state",
              "postal_code"
            ]
          },
          "digital_wallet": {
            "type": "object",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email."
              },
              "phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this digital card. Card profiles may also be assigned at the program level."
              }
            },
            "required": [

            ]
          }
        },
        "required": [

        ]
      },
      "create_a_card_dispute_parameters": {
        "type": "object",
        "example": {
          "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "explanation": "Unauthorized recurring transaction."
        },
        "properties": {
          "disputed_transaction_id": {
            "type": "string",
            "description": "The Transaction you wish to dispute. This Transaction must have a `source_type` of `card_settlement`."
          },
          "explanation": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Why you are disputing this Transaction."
          }
        },
        "required": [
          "disputed_transaction_id",
          "explanation"
        ]
      },
      "create_a_card_profile_parameters": {
        "type": "object",
        "example": {
          "description": "My Card Profile",
          "digital_wallets": {
            "text_color": {
              "red": 26,
              "green": 43,
              "blue": 59
            },
            "issuer_name": "MyBank",
            "card_description": "MyBank Signature Card",
            "contact_website": "https://example.com",
            "contact_email": "user@example.com",
            "contact_phone": "+18885551212",
            "background_image_file_id": "file_1ai913suu1zfn1pdetru",
            "app_icon_file_id": "file_8zxqkwlh43wo144u8yec"
          }
        },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A description you can use to identify the Card Profile."
          },
          "digital_wallets": {
            "type": "object",
            "description": "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
            "properties": {
              "text_color": {
                "type": "object",
                "description": "The Card's text color, specified as an RGB triple. The default is white.",
                "properties": {
                  "red": {
                    "type": "integer",
                    "description": "The value of the red channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "green": {
                    "type": "integer",
                    "description": "The value of the green channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  },
                  "blue": {
                    "type": "integer",
                    "description": "The value of the blue channel in the RGB color.",
                    "minimum": 0,
                    "maximum": 255
                  }
                },
                "required": [
                  "red",
                  "green",
                  "blue"
                ]
              },
              "issuer_name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A user-facing description for whoever is issuing the card."
              },
              "card_description": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A user-facing description for the card itself."
              },
              "contact_website": {
                "type": "string",
                "description": "A website the user can visit to view and receive support for their card."
              },
              "contact_email": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "An email address the user can contact to receive support for their card."
              },
              "contact_phone": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32,
                "description": "A phone number the user can contact to receive support for their card."
              },
              "background_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's front image."
              },
              "app_icon_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's icon image."
              }
            },
            "required": [
              "issuer_name",
              "card_description",
              "background_image_file_id",
              "app_icon_file_id"
            ]
          }
        },
        "required": [
          "description",
          "digital_wallets"
        ]
      },
      "create_a_limit_parameters": {
        "type": "object",
        "example": {
          "interval": "month",
          "metric": "volume",
          "model_id": "account_in71c4amph0vgo2qllky",
          "value": 1234
        },
        "properties": {
          "metric": {
            "type": "string",
            "enum": [
              "count",
              "volume"
            ],
            "description": "The metric for the limit.",
            "x-enum-descriptions": [
              "The maximum number of debits allowed.",
              "The maximum volume of debits allowed in the minor unit of the model's currency."
            ]
          },
          "interval": {
            "type": "string",
            "enum": [
              "transaction",
              "day",
              "week",
              "month",
              "year",
              "all_time"
            ],
            "description": "The interval for the metric. Required if `metric` is `count` or `volume`.",
            "x-enum-descriptions": [
              "Enforce the limit per-transaction.",
              "Enforce the limit based on the previous 24 hour period.",
              "Enforce the limit based on the previous seven days.",
              "Enforce the limit based on the previous month, going back to the current day in the previous month, or as close as possible given month length differences.",
              "Enforce the limit based on the previous year.",
              "Enforce the limit for all time."
            ]
          },
          "model_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The identifier of the Account or Account Number you wish to associate the limit with."
          },
          "value": {
            "type": "integer",
            "description": "The value to test the limit against.",
            "minimum": 0
          }
        },
        "required": [
          "metric",
          "model_id",
          "value"
        ]
      },
      "update_a_limit_parameters": {
        "type": "object",
        "example": {
          "status": "inactive"
        },
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "inactive",
              "active"
            ],
            "description": "The status to update the limit with.",
            "x-enum-descriptions": [
              "Disable the limit temporarily.",
              "Activate the limit."
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "create_an_account_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 100,
          "description": "Creating liquidity",
          "destination_account_id": "account_uf16sut2ct5bevmq3eh"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in the minor unit of the account currency. For dollars, for example, this is cents.",
            "minimum": 1
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the transfer."
          },
          "destination_account_id": {
            "type": "string",
            "description": "The identifier for the account that will receive the transfer."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          }
        },
        "required": [
          "account_id",
          "amount",
          "description",
          "destination_account_id"
        ]
      },
      "create_an_ach_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "amount": 100,
          "routing_number": "101050001",
          "statement_descriptor": "New ACH transfer"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Increase identifier for the account that will send the transfer."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 17,
            "description": "The account number for the destination account."
          },
          "addendum": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "description": "Additional information that will be sent to the recipient. This is included in the transfer data sent to the receiving bank."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer, usually in the format `YYYYMMDD`. This is included in the transfer data sent to the receiving bank."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "The data you choose to associate with the transfer. This is included in the transfer data sent to the receiving bank."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "A description of the transfer. This is included in the transfer data sent to the receiving bank."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name by which the recipient knows you. This is included in the transfer data sent to the receiving bank."
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "description": "The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."
          },
          "external_account_id": {
            "type": "string",
            "description": "The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number`, `routing_number`, and `funding` must be absent."
          },
          "funding": {
            "type": "string",
            "enum": [
              "checking",
              "savings"
            ],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account."
            ]
          },
          "individual_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "description": "Your identifer for the transfer recipient."
          },
          "individual_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "The name of the transfer recipient. This value is informational and not verified by the recipient's bank."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": [
              "corporate_credit_or_debit",
              "prearranged_payments_and_deposit",
              "internet_initiated"
            ],
            "description": "The Standard Entry Class (SEC) code to use for the transfer.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          },
          "statement_descriptor": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback."
          }
        },
        "required": [
          "account_id",
          "amount",
          "statement_descriptor"
        ]
      },
      "create_an_ach_prenotification_parameters": {
        "type": "object",
        "example": {
          "account_number": "987654321",
          "routing_number": "101050001"
        },
        "properties": {
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number for the destination account."
          },
          "addendum": {
            "type": "string",
            "minLength": 1,
            "maxLength": 80,
            "description": "Additional information that will be sent to the recipient."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "The data you choose to associate with the transfer."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "The description of the transfer you wish to be shown to the recipient."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name by which the recipient knows you."
          },
          "credit_debit_indicator": {
            "type": "string",
            "enum": [
              "credit",
              "debit"
            ],
            "description": "Whether the Prenotification is for a future debit or credit.",
            "x-enum-descriptions": [
              "The Prenotification is for an anticipated credit.",
              "The Prenotification is for an anticipated debit."
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date",
            "description": "The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."
          },
          "individual_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "Your identifer for the transfer recipient."
          },
          "individual_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 22,
            "description": "The name of the transfer recipient. This value is information and not verified by the recipient's bank."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": [
              "corporate_credit_or_debit",
              "prearranged_payments_and_deposit",
              "internet_initiated"
            ],
            "description": "The Standard Entry Class (SEC) code to use for the ACH Prenotification.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          }
        },
        "required": [
          "account_number",
          "routing_number"
        ]
      },
      "create_an_ach_return_parameters": {
        "type": "object",
        "example": {
          "reason": "payment_stopped",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
        },
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The transaction identifier of the Inbound ACH Transfer to return to the originating financial institution."
          },
          "reason": {
            "type": "string",
            "enum": [
              "authorization_revoked_by_customer",
              "payment_stopped",
              "customer_advised_unauthorized_improper_ineligible_or_incomplete",
              "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
              "beneficiary_or_account_holder_deceased",
              "credit_entry_refused_by_receiver",
              "duplicate_entry",
              "corporate_customer_advised_not_authorized"
            ],
            "description": "The reason why this transfer will be returned. The most usual return codes are `payment_stopped` for debits and `credit_entry_refused_by_receiver` for credits.",
            "x-enum-descriptions": [
              "The customer no longer authorizes this transaction. The Nacha return code is R07.",
              "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.",
              "The customer advises that the debit was unauthorized. The Nacha return code is R10.",
              "The payee is deceased. The Nacha return code is R14.",
              "The account holder is deceased. The Nacha return code is R15.",
              "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.",
              "The account holder identified this transaction as a duplicate. The Nacha return code is R24.",
              "The corporate customer no longer authorizes this transaction. The Nacha return code is R29."
            ]
          }
        },
        "required": [
          "transaction_id",
          "reason"
        ]
      },
      "create_a_wire_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "amount": 100,
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York",
          "beneficiary_address_line3": "NY 10045",
          "beneficiary_name": "Ian Crease",
          "message_to_recipient": "New account transfer",
          "routing_number": "101050001"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number for the destination account."
          },
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "external_account_id": {
            "type": "string",
            "description": "The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number` and `routing_number` must be absent."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents.",
            "minimum": 1
          },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The message that will show on the recipient's bank statement."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's name."
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 1."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 2."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The beneficiary's address line 3."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          }
        },
        "required": [
          "account_id",
          "amount",
          "message_to_recipient",
          "beneficiary_name"
        ]
      },
      "create_a_wire_drawdown_request_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 10000,
          "message_to_recipient": "Invoice 29582",
          "recipient_account_number": "987654321",
          "recipient_address_line1": "33 Liberty Street",
          "recipient_address_line2": "New York, NY, 10045",
          "recipient_name": "Ian Crease",
          "recipient_routing_number": "101050001"
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient should send funds."
          },
          "amount": {
            "type": "integer",
            "description": "The amount requested from the recipient, in cents.",
            "minimum": 1
          },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "A message the recipient will see as part of the request."
          },
          "recipient_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's recipient's account number."
          },
          "recipient_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's recipient's routing number."
          },
          "recipient_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's recipient's name."
          },
          "recipient_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's recipient's address."
          },
          "recipient_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's recipient's address."
          },
          "recipient_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's recipient's address."
          }
        },
        "required": [
          "account_number_id",
          "amount",
          "message_to_recipient",
          "recipient_account_number",
          "recipient_routing_number",
          "recipient_name"
        ]
      },
      "create_a_check_transfer_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "address_city": "New York",
          "address_line1": "33 Liberty Street",
          "address_state": "NY",
          "address_zip": "10045",
          "amount": 1000,
          "currency": "USD",
          "message": "Check payment",
          "recipient_name": "Ian Crease"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account that will send the transfer."
          },
          "address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250,
            "description": "The street address of the check's destination."
          },
          "address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250,
            "description": "The second line of the address of the check's destination."
          },
          "address_city": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250,
            "description": "The city of the check's destination."
          },
          "address_state": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The state of the check's destination."
          },
          "address_zip": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250,
            "description": "The postal code of the check's destination."
          },
          "return_address": {
            "type": "object",
            "description": "The return address to be printed on the check. If omitted this will default to the address of the Entity of the Account used to make the Check Transfer.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The name of the return address."
              },
              "line1": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The first line of the return address."
              },
              "line2": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The second line of the return address."
              },
              "city": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The city of the return address."
              },
              "state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The US state of the return address."
              },
              "zip": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The postal code of the return address."
              }
            },
            "required": [
              "name",
              "line1",
              "city",
              "state",
              "zip"
            ]
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents.",
            "minimum": 1
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 73,
            "description": "The descriptor that will be printed on the memo field on the check."
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The descriptor that will be printed on the letter included with the check."
          },
          "recipient_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 250,
            "description": "The name that will be printed on the check."
          },
          "require_approval": {
            "type": "boolean",
            "description": "Whether the transfer requires explicit approval via the dashboard or API."
          }
        },
        "required": [
          "account_id",
          "address_line1",
          "address_city",
          "address_state",
          "address_zip",
          "amount",
          "message",
          "recipient_name"
        ]
      },
      "create_a_check_deposit_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 1000,
          "back_image_file_id": "file_26khfk98mzfz90a11oqx",
          "currency": "USD",
          "front_image_file_id": "file_hkv175ovmc2tb2v2zbrm"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account to deposit the check in."
          },
          "amount": {
            "type": "integer",
            "description": "The deposit amount in the minor unit of the account currency. For dollars, for example, this is cents.",
            "minimum": 0
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The currency to use for the deposit."
          },
          "front_image_file_id": {
            "type": "string",
            "description": "The File containing the check's front image."
          },
          "back_image_file_id": {
            "type": "string",
            "description": "The File containing the check's back image."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "front_image_file_id",
          "back_image_file_id"
        ]
      },
      "create_an_external_account_parameters": {
        "type": "object",
        "example": {
          "account_number": "987654321",
          "description": "Landlord",
          "routing_number": "101050001"
        },
        "properties": {
          "routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."
          },
          "account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 17,
            "description": "The account number for the destination account."
          },
          "funding": {
            "type": "string",
            "enum": [
              "checking",
              "savings",
              "other"
            ],
            "description": "The type of the destination account. Defaults to `checking`.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account.",
              "A different type of account."
            ]
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name you choose for the Account."
          }
        },
        "required": [
          "routing_number",
          "account_number",
          "description"
        ]
      },
      "update_an_external_account_parameters": {
        "type": "object",
        "example": {
          "description": "New description"
        },
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the external account."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "archived"
            ],
            "description": "The status of the External Account.",
            "x-enum-descriptions": [
              "The External Acccount is active.",
              "The External Account is archived and won't appear in the dashboard."
            ]
          }
        },
        "required": [

        ]
      },
      "create_an_entity_parameters": {
        "type": "object",
        "example": {
          "corporation": {
            "name": "National Phonograph Company",
            "website": "https://example.com",
            "tax_identifier": "602214076",
            "incorporation_state": "NY",
            "address": {
              "line1": "33 Liberty Street",
              "city": "New York",
              "state": "NY",
              "zip": "10045"
            },
            "beneficial_owners": [
              {
                "individual": {
                  "name": "Ian Crease",
                  "date_of_birth": "1970-01-31",
                  "address": {
                    "line1": "33 Liberty Street",
                    "city": "New York",
                    "state": "NY",
                    "zip": "10045"
                  },
                  "identification": {
                    "method": "social_security_number",
                    "number": "078051120"
                  }
                },
                "prong": "control",
                "company_title": "CEO"
              }
            ]
          },
          "relationship": "informational",
          "structure": "corporation",
          "supplemental_documents": [
            {
              "file_id": "file_makxrc67oh9l6sg7w9yc"
            }
          ]
        },
        "properties": {
          "structure": {
            "type": "string",
            "enum": [
              "corporation",
              "natural_person",
              "joint",
              "trust"
            ],
            "description": "The type of Entity to create.",
            "x-enum-descriptions": [
              "A corporation.",
              "An individual person.",
              "Multiple individual people.",
              "A trust."
            ]
          },
          "corporation": {
            "type": "object",
            "description": "Details of the corporation entity to create. Required if `structure` is equal to `corporation`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The legal name of the corporation."
              },
              "website": {
                "type": "string",
                "description": "The website of the corporation."
              },
              "tax_identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The Employer Identification Number (EIN) for the corporation."
              },
              "incorporation_state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation."
              },
              "address": {
                "type": "object",
                "description": "The corporation's address.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "state",
                  "zip"
                ]
              },
              "beneficial_owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "description": "Personal details for the beneficial owner.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "description": "The individual's address.",
                          "properties": {
                            "line1": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The first line of the address. This is usually the street number and street."
                            },
                            "line2": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The second line of the address. This might be the floor or room number."
                            },
                            "city": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": [
                            "line1",
                            "city",
                            "state",
                            "zip"
                          ]
                        },
                        "confirmed_no_us_tax_id": {
                          "type": "boolean",
                          "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                        },
                        "identification": {
                          "type": "object",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number": {
                              "type": "string",
                              "minLength": 4,
                              "maxLength": 200,
                              "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                            },
                            "passport": {
                              "type": "object",
                              "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the passport."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The passport's expiration date in YYYY-MM-DD format."
                                },
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The country that issued the passport."
                                }
                              },
                              "required": [
                                "file_id",
                                "expiration_date",
                                "country"
                              ]
                            },
                            "drivers_license": {
                              "type": "object",
                              "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the driver's license."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The driver's license's expiration date in YYYY-MM-DD format."
                                },
                                "state": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The state that issued the provided driver's license."
                                }
                              },
                              "required": [
                                "file_id",
                                "expiration_date",
                                "state"
                              ]
                            },
                            "other": {
                              "type": "object",
                              "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                              "properties": {
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                                },
                                "description": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "A description of the document submitted."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The document's expiration date in YYYY-MM-DD format."
                                },
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the document."
                                }
                              },
                              "required": [
                                "country",
                                "description",
                                "file_id"
                              ]
                            }
                          },
                          "required": [
                            "method",
                            "number"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "date_of_birth",
                        "address",
                        "identification"
                      ]
                    },
                    "company_title": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "description": "This person's role or title within the entity."
                    },
                    "prong": {
                      "type": "string",
                      "enum": [
                        "ownership",
                        "control"
                      ],
                      "description": "Why this person is considered a beneficial owner of the entity.",
                      "x-enum-descriptions": [
                        "A person with 25% or greater direct or indirect ownership of the entity.",
                        "A person who manages, directs, or has significant control of the entity."
                      ]
                    }
                  },
                  "required": [
                    "individual",
                    "prong"
                  ]
                },
                "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
              }
            },
            "required": [
              "name",
              "tax_identifier",
              "address",
              "beneficial_owners"
            ]
          },
          "natural_person": {
            "type": "object",
            "description": "Details of the natural person entity to create. Required if `structure` is equal to `natural_person`. Natural people entities should be submitted with `social_security_number` or `individual_taxpayer_identification_number` identification methods.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The person's legal name."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "The person's date of birth in YYYY-MM-DD format."
              },
              "address": {
                "type": "object",
                "description": "The individual's address.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "state",
                  "zip"
                ]
              },
              "confirmed_no_us_tax_id": {
                "type": "boolean",
                "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
              },
              "identification": {
                "type": "object",
                "description": "A means of verifying the person's identity.",
                "properties": {
                  "method": {
                    "type": "string",
                    "enum": [
                      "social_security_number",
                      "individual_taxpayer_identification_number",
                      "passport",
                      "drivers_license",
                      "other"
                    ],
                    "description": "A method that can be used to verify the individual's identity.",
                    "x-enum-descriptions": [
                      "A social security number.",
                      "An individual taxpayer identification number (ITIN).",
                      "A passport number.",
                      "A driver's license number.",
                      "Another identifying document."
                    ]
                  },
                  "number": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 200,
                    "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                  },
                  "passport": {
                    "type": "object",
                    "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                    "properties": {
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the passport."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The passport's expiration date in YYYY-MM-DD format."
                      },
                      "country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The country that issued the passport."
                      }
                    },
                    "required": [
                      "file_id",
                      "expiration_date",
                      "country"
                    ]
                  },
                  "drivers_license": {
                    "type": "object",
                    "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                    "properties": {
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the driver's license."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The driver's license's expiration date in YYYY-MM-DD format."
                      },
                      "state": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The state that issued the provided driver's license."
                      }
                    },
                    "required": [
                      "file_id",
                      "expiration_date",
                      "state"
                    ]
                  },
                  "other": {
                    "type": "object",
                    "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                    "properties": {
                      "country": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                      },
                      "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "A description of the document submitted."
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The document's expiration date in YYYY-MM-DD format."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the document."
                      }
                    },
                    "required": [
                      "country",
                      "description",
                      "file_id"
                    ]
                  }
                },
                "required": [
                  "method",
                  "number"
                ]
              }
            },
            "required": [
              "name",
              "date_of_birth",
              "address",
              "identification"
            ]
          },
          "joint": {
            "type": "object",
            "description": "Details of the joint entity to create. Required if `structure` is equal to `joint`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The name of the joint entity."
              },
              "individuals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 200,
                      "description": "The person's legal name."
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "description": "The person's date of birth in YYYY-MM-DD format."
                    },
                    "address": {
                      "type": "object",
                      "description": "The individual's address.",
                      "properties": {
                        "line1": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The first line of the address. This is usually the street number and street."
                        },
                        "line2": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The second line of the address. This might be the floor or room number."
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The city of the address."
                        },
                        "state": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                        },
                        "zip": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The ZIP code of the address."
                        }
                      },
                      "required": [
                        "line1",
                        "city",
                        "state",
                        "zip"
                      ]
                    },
                    "confirmed_no_us_tax_id": {
                      "type": "boolean",
                      "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                    },
                    "identification": {
                      "type": "object",
                      "description": "A means of verifying the person's identity.",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": [
                            "social_security_number",
                            "individual_taxpayer_identification_number",
                            "passport",
                            "drivers_license",
                            "other"
                          ],
                          "description": "A method that can be used to verify the individual's identity.",
                          "x-enum-descriptions": [
                            "A social security number.",
                            "An individual taxpayer identification number (ITIN).",
                            "A passport number.",
                            "A driver's license number.",
                            "Another identifying document."
                          ]
                        },
                        "number": {
                          "type": "string",
                          "minLength": 4,
                          "maxLength": 200,
                          "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                        },
                        "passport": {
                          "type": "object",
                          "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                          "properties": {
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the passport."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The passport's expiration date in YYYY-MM-DD format."
                            },
                            "country": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The country that issued the passport."
                            }
                          },
                          "required": [
                            "file_id",
                            "expiration_date",
                            "country"
                          ]
                        },
                        "drivers_license": {
                          "type": "object",
                          "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                          "properties": {
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the driver's license."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The driver's license's expiration date in YYYY-MM-DD format."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The state that issued the provided driver's license."
                            }
                          },
                          "required": [
                            "file_id",
                            "expiration_date",
                            "state"
                          ]
                        },
                        "other": {
                          "type": "object",
                          "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                          "properties": {
                            "country": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                            },
                            "description": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "A description of the document submitted."
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "The document's expiration date in YYYY-MM-DD format."
                            },
                            "file_id": {
                              "type": "string",
                              "description": "The identifier of the File containing the document."
                            }
                          },
                          "required": [
                            "country",
                            "description",
                            "file_id"
                          ]
                        }
                      },
                      "required": [
                        "method",
                        "number"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "date_of_birth",
                    "address",
                    "identification"
                  ]
                },
                "description": "The two individuals that share control of the entity."
              }
            },
            "required": [
              "individuals"
            ]
          },
          "trust": {
            "type": "object",
            "description": "Details of the trust entity to create. Required if `structure` is equal to `trust`.",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The legal name of the trust."
              },
              "category": {
                "type": "string",
                "enum": [
                  "revocable",
                  "irrevocable"
                ],
                "description": "Whether the trust is `revocable` or `irrevocable`. Irrevocable trusts require their own Employer Identification Number. Revocable trusts require information about the individual `grantor` who created the trust.",
                "x-enum-descriptions": [
                  "The trust is revocable by the grantor.",
                  "The trust cannot be revoked."
                ]
              },
              "tax_identifier": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The Employer Identification Number (EIN) for the trust. Required if `category` is equal to `irrevocable`."
              },
              "formation_state": {
                "type": "string",
                "minLength": 1,
                "maxLength": 200,
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed."
              },
              "address": {
                "type": "object",
                "description": "The trust's address.",
                "properties": {
                  "line1": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The first line of the address. This is usually the street number and street."
                  },
                  "line2": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The second line of the address. This might be the floor or room number."
                  },
                  "city": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "city",
                  "state",
                  "zip"
                ]
              },
              "formation_document_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the formation document of the trust."
              },
              "trustees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "structure": {
                      "type": "string",
                      "enum": [
                        "individual"
                      ],
                      "description": "The structure of the trustee.",
                      "x-enum-descriptions": [
                        "The trustee is an individual."
                      ]
                    },
                    "individual": {
                      "type": "object",
                      "description": "Details of the individual trustee. Required when the trustee `structure` is equal to `individual`.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 200,
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "description": "The individual's address.",
                          "properties": {
                            "line1": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The first line of the address. This is usually the street number and street."
                            },
                            "line2": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The second line of the address. This might be the floor or room number."
                            },
                            "city": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 200,
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": [
                            "line1",
                            "city",
                            "state",
                            "zip"
                          ]
                        },
                        "confirmed_no_us_tax_id": {
                          "type": "boolean",
                          "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                        },
                        "identification": {
                          "type": "object",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number": {
                              "type": "string",
                              "minLength": 4,
                              "maxLength": 200,
                              "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                            },
                            "passport": {
                              "type": "object",
                              "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the passport."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The passport's expiration date in YYYY-MM-DD format."
                                },
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The country that issued the passport."
                                }
                              },
                              "required": [
                                "file_id",
                                "expiration_date",
                                "country"
                              ]
                            },
                            "drivers_license": {
                              "type": "object",
                              "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                              "properties": {
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the driver's license."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The driver's license's expiration date in YYYY-MM-DD format."
                                },
                                "state": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The state that issued the provided driver's license."
                                }
                              },
                              "required": [
                                "file_id",
                                "expiration_date",
                                "state"
                              ]
                            },
                            "other": {
                              "type": "object",
                              "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                              "properties": {
                                "country": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                                },
                                "description": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 200,
                                  "description": "A description of the document submitted."
                                },
                                "expiration_date": {
                                  "type": "string",
                                  "format": "date",
                                  "description": "The document's expiration date in YYYY-MM-DD format."
                                },
                                "file_id": {
                                  "type": "string",
                                  "description": "The identifier of the File containing the document."
                                }
                              },
                              "required": [
                                "country",
                                "description",
                                "file_id"
                              ]
                            }
                          },
                          "required": [
                            "method",
                            "number"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "date_of_birth",
                        "address",
                        "identification"
                      ]
                    }
                  },
                  "required": [
                    "structure"
                  ]
                },
                "description": "The trustees of the trust."
              },
              "grantor": {
                "type": "object",
                "description": "The grantor of the trust. Required if `category` is equal to `revocable`.",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "The person's legal name."
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "The person's date of birth in YYYY-MM-DD format."
                  },
                  "address": {
                    "type": "object",
                    "description": "The individual's address.",
                    "properties": {
                      "line1": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The first line of the address. This is usually the street number and street."
                      },
                      "line2": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The second line of the address. This might be the floor or room number."
                      },
                      "city": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The city of the address."
                      },
                      "state": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                      },
                      "zip": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 200,
                        "description": "The ZIP code of the address."
                      }
                    },
                    "required": [
                      "line1",
                      "city",
                      "state",
                      "zip"
                    ]
                  },
                  "confirmed_no_us_tax_id": {
                    "type": "boolean",
                    "description": "The identification method for an individual can only be a passport, driver's license, or other document if you've confirmed the individual does not have a US tax id (either a Social Security Number or Individual Taxpayer Identification Number)."
                  },
                  "identification": {
                    "type": "object",
                    "description": "A means of verifying the person's identity.",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "social_security_number",
                          "individual_taxpayer_identification_number",
                          "passport",
                          "drivers_license",
                          "other"
                        ],
                        "description": "A method that can be used to verify the individual's identity.",
                        "x-enum-descriptions": [
                          "A social security number.",
                          "An individual taxpayer identification number (ITIN).",
                          "A passport number.",
                          "A driver's license number.",
                          "Another identifying document."
                        ]
                      },
                      "number": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 200,
                        "description": "An identification number that can be used to verify the individual's identity, such as a social security number."
                      },
                      "passport": {
                        "type": "object",
                        "description": "Information about the passport used for identification. Required if `method` is equal to `passport`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the passport."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The passport's expiration date in YYYY-MM-DD format."
                          },
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The country that issued the passport."
                          }
                        },
                        "required": [
                          "file_id",
                          "expiration_date",
                          "country"
                        ]
                      },
                      "drivers_license": {
                        "type": "object",
                        "description": "Information about the United States driver's license used for identification. Required if `method` is equal to `drivers_license`.",
                        "properties": {
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the driver's license."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The driver's license's expiration date in YYYY-MM-DD format."
                          },
                          "state": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The state that issued the provided driver's license."
                          }
                        },
                        "required": [
                          "file_id",
                          "expiration_date",
                          "state"
                        ]
                      },
                      "other": {
                        "type": "object",
                        "description": "Information about the identification document provided. Required if `method` is equal to `other`.",
                        "properties": {
                          "country": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "The two-character ISO 3166-1 code representing the country that issued the document."
                          },
                          "description": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 200,
                            "description": "A description of the document submitted."
                          },
                          "expiration_date": {
                            "type": "string",
                            "format": "date",
                            "description": "The document's expiration date in YYYY-MM-DD format."
                          },
                          "file_id": {
                            "type": "string",
                            "description": "The identifier of the File containing the document."
                          }
                        },
                        "required": [
                          "country",
                          "description",
                          "file_id"
                        ]
                      }
                    },
                    "required": [
                      "method",
                      "number"
                    ]
                  }
                },
                "required": [
                  "name",
                  "date_of_birth",
                  "address",
                  "identification"
                ]
              }
            },
            "required": [
              "name",
              "category",
              "address",
              "trustees"
            ]
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the entity."
          },
          "relationship": {
            "type": "string",
            "enum": [
              "affiliated",
              "informational",
              "unaffiliated"
            ],
            "description": "The relationship between your group and the entity.",
            "x-enum-descriptions": [
              "The entity is controlled by your group.",
              "The entity is for informational purposes only.",
              "The entity is not controlled by your group, but can still directly open accounts."
            ]
          },
          "supplemental_documents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_id": {
                  "type": "string",
                  "description": "The identifier of the File containing the document."
                }
              },
              "required": [
                "file_id"
              ]
            },
            "description": "Additional documentation associated with the entity."
          }
        },
        "required": [
          "structure",
          "relationship"
        ]
      },
      "create_a_supplemental_document_for_an_entity_parameters": {
        "type": "object",
        "example": {
          "file_id": "file_makxrc67oh9l6sg7w9yc"
        },
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing the document."
          }
        },
        "required": [
          "file_id"
        ]
      },
      "create_a_file_parameters": {
        "type": "object",
        "example": {
          "file": "\"@tax_form.pdf\"",
          "purpose": "check_image_front"
        },
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The file contents. This should follow the specifications of [RFC 7578](https://datatracker.ietf.org/doc/html/rfc7578) which defines file transfers for the multipart/form-data protocol."
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The description you choose to give the File."
          },
          "purpose": {
            "type": "string",
            "enum": [
              "check_image_front",
              "check_image_back",
              "form_ss_4",
              "identity_document",
              "other",
              "trust_formation_document",
              "digital_wallet_artwork",
              "digital_wallet_app_icon",
              "entity_supplemental_document"
            ],
            "description": "What the File will be used for in Increase's systems.",
            "x-enum-descriptions": [
              "An image of the front of a check, used for check deposits.",
              "An image of the back of a check, used for check deposits.",
              "IRS Form SS-4.",
              "An image of a government-issued ID.",
              "A file purpose not covered by any of the other cases.",
              "A legal document forming a trust.",
              "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
              "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
              "A supplemental document associated an an Entity."
            ]
          }
        },
        "required": [
          "file",
          "purpose"
        ]
      },
      "create_an_event_subscription_parameters": {
        "type": "object",
        "example": {
          "url": "https://website.com/webhooks"
        },
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL you'd like us to send webhooks to."
          },
          "shared_secret": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "The key that will be used to sign webhooks. If no value is passed, a random string will be used as default."
          },
          "selected_event_category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "card.created",
              "card.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "external_account.created",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real Time Payments Transfer is created.",
              "Occurs whenever a Real Time Payments Transfer is updated.",
              "Occurs whenever a Real Time Payments Request for Payment is created.",
              "Occurs whenever a Real Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is updated.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          }
        },
        "required": [
          "url"
        ]
      },
      "update_an_event_subscription_parameters": {
        "type": "object",
        "example": {
        },
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "deleted"
            ],
            "description": "The status to update the Event Subscription with.",
            "x-enum-descriptions": [
              "The subscription is active and Events will be delivered normally.",
              "The subscription is temporarily disabled and Events will not be delivered.",
              "The subscription is permanently disabled and Events will not be delivered."
            ]
          }
        },
        "required": [

        ]
      },
      "action_a_real_time_decision_parameters": {
        "type": "object",
        "example": {
          "card_authorization": {
            "decision": "approve"
          }
        },
        "properties": {
          "card_authorization": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.",
            "properties": {
              "decision": {
                "type": "string",
                "enum": [
                  "approve",
                  "decline"
                ],
                "description": "Whether the card authorization should be approved or declined.",
                "x-enum-descriptions": [
                  "Approve the authorization.",
                  "Decline the authorization."
                ]
              }
            },
            "required": [
              "decision"
            ]
          },
          "digital_wallet_token": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.",
            "properties": {
              "approval": {
                "type": "object",
                "description": "If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.",
                "properties": {
                  "card_profile_id": {
                    "type": "string",
                    "description": "The identifier of the Card Profile to assign to the Digital Wallet token."
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS."
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "An email address that can be used to verify the cardholder via one-time passcode."
                  }
                },
                "required": [
                  "card_profile_id"
                ]
              },
              "decline": {
                "type": "object",
                "description": "If your application declines the provisioning attempt, this contains details about the decline.",
                "properties": {
                  "reason": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 200,
                    "description": "Why the tokenization attempt was declined. This is for logging purposes only and is not displayed to the end-user."
                  }
                },
                "required": [

                ]
              }
            },
            "required": [

            ]
          },
          "digital_wallet_authentication": {
            "type": "object",
            "description": "If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.",
            "properties": {
              "result": {
                "type": "string",
                "enum": [
                  "success",
                  "failure"
                ],
                "description": "Whether your application was able to deliver the one-time passcode.",
                "x-enum-descriptions": [
                  "Your application successfully delivered the one-time passcode to the cardholder.",
                  "Your application failed to deliver the one-time passcode to the cardholder."
                ]
              }
            },
            "required": [
              "result"
            ]
          }
        },
        "required": [

        ]
      },
      "simulate_an_ach_transfer_to_your_account_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 1000
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound ACH Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account."
          },
          "company_descriptive_date": {
            "type": "string",
            "minLength": 1,
            "maxLength": 6,
            "description": "The description of the date of the transfer."
          },
          "company_discretionary_data": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Data associated with the transfer set by the sender."
          },
          "company_entry_description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 10,
            "description": "The description of the transfer set by the sender."
          },
          "company_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "description": "The name of the sender."
          },
          "company_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 15,
            "description": "The sender's company id."
          }
        },
        "required": [
          "account_number_id",
          "amount"
        ]
      },
      "return_a_sandbox_ach_transfer_parameters": {
        "type": "object",
        "example": {
        },
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "insufficient_fund",
              "no_account",
              "account_closed",
              "invalid_account_number_structure",
              "account_frozen_entry_returned_per_ofac_instruction",
              "credit_entry_refused_by_receiver",
              "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
              "corporate_customer_advised_not_authorized",
              "payment_stopped",
              "non_transaction_account",
              "uncollected_funds",
              "routing_number_check_digit_error",
              "customer_advised_unauthorized_improper_ineligible_or_incomplete",
              "amount_field_error",
              "authorization_revoked_by_customer",
              "invalid_ach_routing_number",
              "file_record_edit_criteria",
              "enr_invalid_individual_name",
              "returned_per_odfi_request",
              "addenda_error",
              "limited_participation_dfi",
              "incorrectly_coded_outbound_international_payment",
              "other"
            ],
            "description": "The reason why the Federal Reserve or destination bank returned this transfer. Defaults to `no_account`.",
            "x-enum-descriptions": [
              "Insufficient funds in the source account.",
              "The account does not exist or the receiving bank was unable to locate it.",
              "The account is closed.",
              "The account number is invalid at the receiving bank.",
              "The account was frozen per the Office of Foreign Assets Control.",
              "The receiving bank account refused a credit transfer.",
              "The receiving bank rejected because of an incorrect Standard Entry Class code.",
              "The corporate customer reversed the transfer.",
              "The receiving bank stopped payment on this transfer.",
              "The receiving bank account does not perform transfers.",
              "The receiving bank account does not have enough available balance for the transfer.",
              "The routing number is incorrect.",
              "The customer reversed the transfer.",
              "The amount field is incorrect or too large.",
              "The customer who initiated the transfer revoked authorization.",
              "The routing number is invalid.",
              "The receiving bank is unable to process a field in the transfer.",
              "The individual name field was invalid.",
              "The originating financial institution reversed the transfer.",
              "The addenda record is incorrect or missing.",
              "The receiving bank's regulatory supervisor has limited their participation.",
              "The outbound international ACH transfer was incorrect.",
              "Any other ACH return reason."
            ]
          }
        },
        "required": [

        ]
      },
      "return_a_sandbox_check_transfer_parameters": {
        "type": "object",
        "example": {
          "reason": "mail_delivery_failure"
        },
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "mail_delivery_failure",
              "refused_by_recipient"
            ],
            "description": "The reason why the Check Transfer was returned to Increase.",
            "x-enum-descriptions": [
              "Mail delivery failed and the check was returned to sender.",
              "The check arrived and the recipient refused to deposit it."
            ]
          }
        },
        "required": [
          "reason"
        ]
      },
      "simulate_a_wire_transfer_to_your_account_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 1000
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound Wire Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in cents. Must be positive.",
            "minimum": 1
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line1 in production. You can simulate any value here."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line2 in production. You can simulate any value here."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_address_line3 in production. You can simulate any value here."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_name in production. You can simulate any value here."
          },
          "beneficiary_reference": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set beneficiary_reference in production. You can simulate any value here."
          },
          "originator_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line1 in production. You can simulate any value here."
          },
          "originator_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line2 in production. You can simulate any value here."
          },
          "originator_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_address_line3 in production. You can simulate any value here."
          },
          "originator_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_name in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line1 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line2 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line3 in production. You can simulate any value here."
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The sending bank will set originator_to_beneficiary_information_line4 in production. You can simulate any value here."
          }
        },
        "required": [
          "account_number_id",
          "amount"
        ]
      },
      "simulate_an_inbound_wire_drawdown_request_being_created_parameters": {
        "type": "object",
        "example": {
          "amount": 10000,
          "beneficiary_account_number": "987654321",
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York, NY, 10045",
          "beneficiary_name": "Ian Crease",
          "beneficiary_routing_number": "101050001",
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "originator_account_number": "987654321",
          "originator_address_line1": "33 Liberty Street",
          "originator_address_line2": "New York, NY, 10045",
          "originator_name": "Ian Crease",
          "originator_routing_number": "101050001",
          "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2"
        },
        "properties": {
          "recipient_account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient of this request is being requested to send funds from."
          },
          "originator_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's originator's account number."
          },
          "originator_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's originator's routing number."
          },
          "beneficiary_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's beneficiary's account number."
          },
          "beneficiary_routing_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The drawdown request's beneficiary's routing number."
          },
          "amount": {
            "type": "integer",
            "description": "The amount being requested in cents.",
            "minimum": 0
          },
          "currency": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "A message from the drawdown request's originator."
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 4 of the information conveyed from the originator of the message to the beneficiary."
          },
          "originator_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's originator's name."
          },
          "originator_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's originator's address."
          },
          "originator_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's originator's address."
          },
          "originator_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's originator's address."
          },
          "beneficiary_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "The drawdown request's beneficiary's name."
          },
          "beneficiary_address_line1": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 1 of the drawdown request's beneficiary's address."
          },
          "beneficiary_address_line2": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 2 of the drawdown request's beneficiary's address."
          },
          "beneficiary_address_line3": {
            "type": "string",
            "minLength": 1,
            "maxLength": 35,
            "description": "Line 3 of the drawdown request's beneficiary's address."
          }
        },
        "required": [
          "recipient_account_number_id",
          "originator_account_number",
          "originator_routing_number",
          "beneficiary_account_number",
          "beneficiary_routing_number",
          "amount",
          "currency",
          "message_to_recipient"
        ]
      },
      "simulate_an_authorization_on_a_card_parameters": {
        "type": "object",
        "example": {
          "amount": 1000,
          "card_id": "card_oubs0hwk5rn6knuecxg2"
        },
        "properties": {
          "amount": {
            "type": "integer",
            "description": "The authorization amount in cents.",
            "minimum": 1,
            "maximum": 1000000000
          },
          "card_id": {
            "type": "string",
            "description": "The identifier of the Card to be authorized."
          },
          "digital_wallet_token_id": {
            "type": "string",
            "description": "The identifier of the Digital Wallet Token to be authorized."
          }
        },
        "required": [
          "amount"
        ]
      },
      "simulate_settling_a_card_authorization_parameters": {
        "type": "object",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "pending_transaction_id": "pending_transaction_k1sfetcau2qbvjbzgju4"
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The identifier of the Card to create a settlement on."
          },
          "pending_transaction_id": {
            "type": "string",
            "description": "The identifier of the Pending Transaction for the Card Authorization you wish to settle."
          },
          "amount": {
            "type": "integer",
            "description": "The amount to be settled. This defaults to the amount of the Pending Transaction being settled.",
            "minimum": 1
          }
        },
        "required": [
          "card_id",
          "pending_transaction_id"
        ]
      },
      "simulate_a_refund_on_a_card_parameters": {
        "type": "object",
        "example": {
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
        },
        "properties": {
          "transaction_id": {
            "type": "string",
            "description": "The identifier for the Transaction to refund. The Transaction's source must have a category of card_settlement."
          }
        },
        "required": [
          "transaction_id"
        ]
      },
      "simulates_advancing_the_state_of_a_card_dispute_parameters": {
        "type": "object",
        "example": {
          "explanation": "This was a valid recurring transaction",
          "status": "rejected"
        },
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "accepted",
              "rejected"
            ],
            "description": "The status to move the dispute to.",
            "x-enum-descriptions": [
              "The Card Dispute has been accepted and your funds have been returned.",
              "The Card Dispute has been rejected."
            ]
          },
          "explanation": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Why the dispute was rejected. Not required for accepting disputes."
          }
        },
        "required": [
          "status"
        ]
      },
      "simulate_digital_wallet_provisioning_for_a_card_parameters": {
        "type": "object",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2"
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The identifier of the Card to be authorized."
          }
        },
        "required": [
          "card_id"
        ]
      },
      "simulate_a_real_time_payments_transfer_to_your_account_parameters": {
        "type": "object",
        "example": {
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "amount": 1000,
          "request_for_payment_id": "real_time_payments_request_for_payment_28kcliz1oevcnqyn9qp7"
        },
        "properties": {
          "account_number_id": {
            "type": "string",
            "description": "The identifier of the Account Number the inbound Real Time Payments Transfer is for."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents. Must be positive.",
            "minimum": 1
          },
          "request_for_payment_id": {
            "type": "string",
            "description": "The identifier of a pending Request for Payment that this transfer will fulfill."
          },
          "debtor_name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The name provided by the sender of the transfer."
          },
          "debtor_account_number": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "The account number of the account that sent the transfer."
          },
          "debtor_routing_number": {
            "type": "string",
            "minLength": 9,
            "maxLength": 9,
            "description": "The routing number of the account that sent the transfer."
          },
          "remittance_information": {
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "description": "Additional information included with the transfer."
          }
        },
        "required": [
          "account_number_id",
          "amount"
        ]
      },
      "simulate_an_account_statement_being_created_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account the statement is for."
          }
        },
        "required": [
          "account_id"
        ]
      },
      "simulate_a_tax_document_being_created_parameters": {
        "type": "object",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account the tax document is for."
          }
        },
        "required": [
          "account_id"
        ]
      },
      "account": {
        "type": "object",
        "title": "Account",
        "description": "Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.",
        "example": {
          "balances": {
            "current_balance": 100,
            "available_balance": 100
          },
          "bank": "first_internet_bank",
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "informational_entity_id": null,
          "id": "account_in71c4amph0vgo2qllky",
          "interest_accrued": "0.01",
          "interest_accrued_at": "2020-01-31",
          "name": "My first account!",
          "status": "open",
          "replacement": {
            "replaced_account_id": null,
            "replaced_by_account_id": null
          },
          "type": "account"
        },
        "properties": {
          "balances": {
            "type": "object",
            "title": "Balances",
            "description": "The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.",
            "properties": {
              "current_balance": {
                "type": "integer",
                "description": "The Account's current balance, representing the sum of all posted Transactions on the Account."
              },
              "available_balance": {
                "type": "integer",
                "description": "The Account's available balance, representing the current balance less any open Pending Transactions on the Account."
              }
            },
            "required": [
              "current_balance",
              "available_balance"
            ],
            "x-title-plural": "Balancess"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "entity_id": {
            "type": "string",
            "description": "The identifier for the Entity the Account belongs to.",
            "nullable": true
          },
          "informational_entity_id": {
            "type": "string",
            "description": "The identifier of an Entity that, while not owning the Account, is associated with its activity.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The Account identifier."
          },
          "interest_accrued": {
            "type": "string",
            "description": "The interest accrued but not yet paid, expressed as a string containing a floating-point value."
          },
          "interest_accrued_at": {
            "type": "string",
            "format": "date",
            "description": "The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name you choose for the Account."
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ],
            "description": "The status of the Account.",
            "x-enum-descriptions": [
              "Open Accounts that are ready to use.",
              "Closed Accounts on which no new activity can occur."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "account"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `account`."
          }
        },
        "required": [
          "balances",
          "created_at",
          "currency",
          "entity_id",
          "informational_entity_id",
          "id",
          "interest_accrued",
          "interest_accrued_at",
          "name",
          "status",
          "type"
        ],
        "x-title-plural": "Accounts",
        "x-tag": "Accounts"
      },
      "account_list": {
        "type": "object",
        "title": "Account List",
        "description": "A list of Account objects",
        "example": {
          "data": [
            {
              "balances": {
                "current_balance": 100,
                "available_balance": 100
              },
              "bank": "first_internet_bank",
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "entity_id": "entity_n8y8tnk2p9339ti393yi",
              "informational_entity_id": null,
              "id": "account_in71c4amph0vgo2qllky",
              "interest_accrued": "0.01",
              "interest_accrued_at": "2020-01-31",
              "name": "My first account!",
              "status": "open",
              "replacement": {
                "replaced_account_id": null,
                "replaced_by_account_id": null
              },
              "type": "account"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Account Lists"
      },
      "account_number": {
        "type": "object",
        "title": "Account Number",
        "description": "Each account can have multiple account and routing numbers. We recommend that you use a set per vendor. This is similar to how you use different passwords for different websites. Account numbers can also be used to seamlessly reconcile inbound payments. Generating a unique account number per vendor ensures you always know the originator of an incoming payment.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "id": "account_number_v18nkfqm6afpsrvy82b2",
          "created_at": "2020-01-31T23:59:59Z",
          "name": "ACH",
          "routing_number": "101050001",
          "status": "active",
          "replacement": {
            "replaced_account_number_id": null,
            "replaced_by_account_number_id": null
          },
          "type": "account_number"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this Account Number belongs to."
          },
          "account_number": {
            "type": "string",
            "description": "The account number."
          },
          "id": {
            "type": "string",
            "description": "The Account Number identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Number was created."
          },
          "name": {
            "type": "string",
            "description": "The name you choose for the Account Number."
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "canceled"
            ],
            "description": "This indicates if payments can be made to the Account Number.",
            "x-enum-descriptions": [
              "The account number is active.",
              "The account number is temporarily disabled.",
              "The account number is permanently disabled."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "account_number"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `account_number`."
          }
        },
        "required": [
          "account_id",
          "account_number",
          "id",
          "created_at",
          "name",
          "routing_number",
          "status",
          "type"
        ],
        "x-title-plural": "Account Numbers",
        "x-tag": "Account Numbers"
      },
      "account_number_list": {
        "type": "object",
        "title": "Account Number List",
        "description": "A list of Account Number objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "account_number": "987654321",
              "id": "account_number_v18nkfqm6afpsrvy82b2",
              "created_at": "2020-01-31T23:59:59Z",
              "name": "ACH",
              "routing_number": "101050001",
              "status": "active",
              "replacement": {
                "replaced_account_number_id": null,
                "replaced_by_account_number_id": null
              },
              "type": "account_number"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account_number"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Account Number Lists"
      },
      "card": {
        "type": "object",
        "title": "Card",
        "description": "Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Account’s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.",
        "example": {
          "id": "card_oubs0hwk5rn6knuecxg2",
          "account_id": "account_in71c4amph0vgo2qllky",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Office Expenses",
          "last4": "4242",
          "expiration_month": 11,
          "expiration_year": 2028,
          "status": "active",
          "billing_address": {
            "line1": "33 Liberty Street",
            "line2": null,
            "city": "New York",
            "state": "NY",
            "postal_code": "10045"
          },
          "digital_wallet": {
            "email": "user@example.com",
            "phone": "+15551234567",
            "card_profile_id": "card_profile_cox5y73lob2eqly18piy"
          },
          "replacement": {
            "replaced_card_id": null,
            "replaced_by_card_id": null
          },
          "type": "card"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The card identifier."
          },
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this card belongs to."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created."
          },
          "description": {
            "type": "string",
            "description": "The card's description for display purposes.",
            "nullable": true
          },
          "last4": {
            "type": "string",
            "description": "The last 4 digits of the Card's Primary Account Number."
          },
          "expiration_month": {
            "type": "integer",
            "description": "The month the card expires in M format (e.g., August is 8)."
          },
          "expiration_year": {
            "type": "integer",
            "description": "The year the card expires in YYYY format (e.g., 2025)."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "canceled"
            ],
            "description": "This indicates if payments can be made with the card.",
            "x-enum-descriptions": [
              "The card is active.",
              "The card is temporarily disabled.",
              "The card is temporarily canceled."
            ]
          },
          "billing_address": {
            "type": "object",
            "title": "Billing Address",
            "description": "The Card's billing address.",
            "example": {
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "postal_code": "10045"
            },
            "properties": {
              "line1": {
                "type": "string",
                "description": "The first line of the billing address.",
                "nullable": true
              },
              "line2": {
                "type": "string",
                "description": "The second line of the billing address.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "The city of the billing address.",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "The US state of the billing address.",
                "nullable": true
              },
              "postal_code": {
                "type": "string",
                "description": "The postal code of the billing address.",
                "nullable": true
              }
            },
            "required": [
              "line1",
              "line2",
              "city",
              "state",
              "postal_code"
            ],
            "x-title-plural": "Billing Addresss"
          },
          "digital_wallet": {
            "type": "object",
            "title": "Digital Wallet",
            "description": "The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.",
            "properties": {
              "email": {
                "type": "string",
                "description": "An email address that can be used to verify the cardholder via one-time passcode over email.",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "A phone number that can be used to verify the cardholder via one-time passcode over SMS.",
                "nullable": true
              },
              "card_profile_id": {
                "type": "string",
                "description": "The card profile assigned to this digital card. Card profiles may also be assigned at the program level.",
                "nullable": true
              }
            },
            "required": [
              "email",
              "phone",
              "card_profile_id"
            ],
            "nullable": true,
            "x-title-plural": "Digital Wallets"
          },
          "type": {
            "type": "string",
            "enum": [
              "card"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `card`."
          }
        },
        "required": [
          "id",
          "account_id",
          "created_at",
          "description",
          "last4",
          "expiration_month",
          "expiration_year",
          "status",
          "billing_address",
          "digital_wallet",
          "type"
        ],
        "x-title-plural": "Cards",
        "x-tag": "Cards"
      },
      "card_details": {
        "type": "object",
        "title": "Card Details",
        "description": "An object containing the sensitive details (card number, cvc, etc) for a Card.",
        "example": {
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "primary_account_number": "4242424242424242",
          "expiration_month": 7,
          "expiration_year": 2025,
          "verification_code": "123",
          "type": "card_details"
        },
        "properties": {
          "card_id": {
            "type": "string",
            "description": "The identifier for the Card for which sensitive details have been returned."
          },
          "primary_account_number": {
            "type": "string",
            "description": "The card number."
          },
          "expiration_month": {
            "type": "integer",
            "description": "The month the card expires in M format (e.g., August is 8)."
          },
          "expiration_year": {
            "type": "integer",
            "description": "The year the card expires in YYYY format (e.g., 2025)."
          },
          "verification_code": {
            "type": "string",
            "description": "The three-digit verification code for the card. It's also known as the Card Verification Code (CVC), the Card Verification Value (CVV), or the Card Identification (CID)."
          },
          "type": {
            "type": "string",
            "enum": [
              "card_details"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `card_details`."
          }
        },
        "required": [
          "card_id",
          "primary_account_number",
          "expiration_month",
          "expiration_year",
          "verification_code",
          "type"
        ],
        "x-title-plural": "Card Detailss"
      },
      "card_list": {
        "type": "object",
        "title": "Card List",
        "description": "A list of Card objects",
        "example": {
          "data": [
            {
              "id": "card_oubs0hwk5rn6knuecxg2",
              "account_id": "account_in71c4amph0vgo2qllky",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Office Expenses",
              "last4": "4242",
              "expiration_month": 11,
              "expiration_year": 2028,
              "status": "active",
              "billing_address": {
                "line1": "33 Liberty Street",
                "line2": null,
                "city": "New York",
                "state": "NY",
                "postal_code": "10045"
              },
              "digital_wallet": {
                "email": "user@example.com",
                "phone": "+15551234567",
                "card_profile_id": "card_profile_cox5y73lob2eqly18piy"
              },
              "replacement": {
                "replaced_card_id": null,
                "replaced_by_card_id": null
              },
              "type": "card"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Card Lists"
      },
      "card_dispute": {
        "type": "object",
        "title": "Card Dispute",
        "description": "If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.",
        "example": {
          "id": "card_dispute_h9sc95nbl1cgltpp7men",
          "explanation": "Unauthorized recurring purchase",
          "status": "pending_reviewing",
          "created_at": "2020-01-31T23:59:59Z",
          "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "acceptance": null,
          "rejection": null,
          "type": "card_dispute"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Card Dispute identifier."
          },
          "explanation": {
            "type": "string",
            "description": "Why you disputed the Transaction in question."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_reviewing",
              "accepted",
              "rejected"
            ],
            "description": "The results of the Dispute investigation.",
            "x-enum-descriptions": [
              "The Card Dispute is pending review.",
              "The Card Dispute has been accepted and your funds have been returned.",
              "The Card Dispute has been rejected."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."
          },
          "disputed_transaction_id": {
            "type": "string",
            "description": "The identifier of the Transaction that was disputed."
          },
          "acceptance": {
            "type": "object",
            "title": "Card Dispute Acceptance",
            "description": "If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.",
            "example": {
              "accepted_at": "2020-01-31T23:59:59Z",
              "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
            },
            "properties": {
              "accepted_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
              },
              "card_dispute_id": {
                "type": "string",
                "description": "The identifier of the Card Dispute that was accepted."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the Transaction that was created to return the disputed funds to your account.",
                "nullable": true
              }
            },
            "required": [
              "accepted_at",
              "card_dispute_id",
              "transaction_id"
            ],
            "nullable": true,
            "x-title-plural": "Card Dispute Acceptances"
          },
          "rejection": {
            "type": "object",
            "title": "Card Dispute Rejection",
            "description": "If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.",
            "example": {
              "explanation": "Acquirer provided evidence that the transaction was authorized.",
              "rejected_at": "2020-01-31T23:59:59Z",
              "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men"
            },
            "properties": {
              "explanation": {
                "type": "string",
                "description": "Why the Card Dispute was rejected."
              },
              "rejected_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected."
              },
              "card_dispute_id": {
                "type": "string",
                "description": "The identifier of the Card Dispute that was rejected."
              }
            },
            "required": [
              "explanation",
              "rejected_at",
              "card_dispute_id"
            ],
            "nullable": true,
            "x-title-plural": "Card Dispute Rejections"
          },
          "type": {
            "type": "string",
            "enum": [
              "card_dispute"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `card_dispute`."
          }
        },
        "required": [
          "id",
          "explanation",
          "status",
          "created_at",
          "disputed_transaction_id",
          "acceptance",
          "rejection",
          "type"
        ],
        "x-title-plural": "Card Disputes",
        "x-tag": "Card Disputes"
      },
      "card_dispute_list": {
        "type": "object",
        "title": "Card Dispute List",
        "description": "A list of Card Dispute objects",
        "example": {
          "data": [
            {
              "id": "card_dispute_h9sc95nbl1cgltpp7men",
              "explanation": "Unauthorized recurring purchase",
              "status": "pending_reviewing",
              "created_at": "2020-01-31T23:59:59Z",
              "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "acceptance": null,
              "rejection": null,
              "type": "card_dispute"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_dispute"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Card Dispute Lists"
      },
      "card_profile": {
        "type": "object",
        "title": "Card Profile",
        "description": "This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)",
        "example": {
          "id": "card_profile_cox5y73lob2eqly18piy",
          "created_at": "2020-01-31T23:59:59Z",
          "status": "active",
          "description": "My Card Profile",
          "digital_wallets": {
            "text_color": {
              "red": 26,
              "green": 43,
              "blue": 59
            },
            "issuer_name": "MyBank",
            "card_description": "MyBank Signature Card",
            "contact_website": "https://example.com",
            "contact_email": "user@example.com",
            "contact_phone": "+18885551212",
            "background_image_file_id": "file_1ai913suu1zfn1pdetru",
            "app_icon_file_id": "file_8zxqkwlh43wo144u8yec"
          },
          "type": "card_profile"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Card Profile identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "rejected",
              "active",
              "archived"
            ],
            "description": "The status of the Card Profile.",
            "x-enum-descriptions": [
              "The Card Profile is awaiting review from Increase and/or processing by card networks.",
              "There is an issue with the Card Profile preventing it from use.",
              "The Card Profile can be assigned to Cards.",
              "The Card Profile is no longer in use."
            ]
          },
          "description": {
            "type": "string",
            "description": "A description you can use to identify the Card Profile."
          },
          "digital_wallets": {
            "type": "object",
            "title": "Digital Wallets",
            "description": "How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.",
            "properties": {
              "text_color": {
                "type": "object",
                "title": "Text Color",
                "description": "The Card's text color, specified as an RGB triple.",
                "properties": {
                  "red": {
                    "type": "integer",
                    "description": "The value of the red channel in the RGB color."
                  },
                  "green": {
                    "type": "integer",
                    "description": "The value of the green channel in the RGB color."
                  },
                  "blue": {
                    "type": "integer",
                    "description": "The value of the blue channel in the RGB color."
                  }
                },
                "required": [
                  "red",
                  "green",
                  "blue"
                ],
                "x-title-plural": "Text Colors"
              },
              "issuer_name": {
                "type": "string",
                "description": "A user-facing description for whoever is issuing the card."
              },
              "card_description": {
                "type": "string",
                "description": "A user-facing description for the card itself."
              },
              "contact_website": {
                "type": "string",
                "description": "A website the user can visit to view and receive support for their card.",
                "nullable": true
              },
              "contact_email": {
                "type": "string",
                "description": "An email address the user can contact to receive support for their card.",
                "nullable": true
              },
              "contact_phone": {
                "type": "string",
                "description": "A phone number the user can contact to receive support for their card.",
                "nullable": true
              },
              "background_image_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's front image."
              },
              "app_icon_file_id": {
                "type": "string",
                "description": "The identifier of the File containing the card's icon image."
              }
            },
            "required": [
              "text_color",
              "issuer_name",
              "card_description",
              "contact_website",
              "contact_email",
              "contact_phone",
              "background_image_file_id",
              "app_icon_file_id"
            ],
            "x-title-plural": "Digital Walletss"
          },
          "type": {
            "type": "string",
            "enum": [
              "card_profile"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `card_profile`."
          }
        },
        "required": [
          "id",
          "created_at",
          "status",
          "description",
          "digital_wallets",
          "type"
        ],
        "x-title-plural": "Card Profiles",
        "x-tag": "Card Profiles"
      },
      "card_profile_list": {
        "type": "object",
        "title": "Card Profile List",
        "description": "A list of Card Profile objects",
        "example": {
          "data": [
            {
              "id": "card_profile_cox5y73lob2eqly18piy",
              "created_at": "2020-01-31T23:59:59Z",
              "status": "active",
              "description": "My Card Profile",
              "digital_wallets": {
                "text_color": {
                  "red": 26,
                  "green": 43,
                  "blue": 59
                },
                "issuer_name": "MyBank",
                "card_description": "MyBank Signature Card",
                "contact_website": "https://example.com",
                "contact_email": "user@example.com",
                "contact_phone": "+18885551212",
                "background_image_file_id": "file_1ai913suu1zfn1pdetru",
                "app_icon_file_id": "file_8zxqkwlh43wo144u8yec"
              },
              "type": "card_profile"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/card_profile"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Card Profile Lists"
      },
      "digital_wallet_token_list": {
        "type": "object",
        "title": "Digital Wallet Token List",
        "description": "A list of Digital Wallet Token objects",
        "example": {
          "data": [
            {
              "id": "digital_wallet_token_izi62go3h51p369jrie0",
              "card_id": "card_oubs0hwk5rn6knuecxg2",
              "created_at": "2020-01-31T23:59:59Z",
              "status": "active",
              "token_requestor": "apple_pay",
              "type": "digital_wallet_token"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/digital_wallet_token"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Digital Wallet Token Lists"
      },
      "digital_wallet_token": {
        "type": "object",
        "title": "Digital Wallet Token",
        "description": "A Digital Wallet Token is created when a user adds a Card to their Apple Pay or Google Pay app. The Digital Wallet Token can be used for purchases just like a Card.",
        "example": {
          "id": "digital_wallet_token_izi62go3h51p369jrie0",
          "card_id": "card_oubs0hwk5rn6knuecxg2",
          "created_at": "2020-01-31T23:59:59Z",
          "status": "active",
          "token_requestor": "apple_pay",
          "type": "digital_wallet_token"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Digital Wallet Token identifier."
          },
          "card_id": {
            "type": "string",
            "description": "The identifier for the Card this Digital Wallet Token belongs to."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card was created."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "suspended",
              "deactivated"
            ],
            "description": "This indicates if payments can be made with the Digital Wallet Token.",
            "x-enum-descriptions": [
              "The digital wallet token is active.",
              "The digital wallet token has been created but not successfully activated via two-factor authentication yet.",
              "The digital wallet token has been temporarily paused.",
              "The digital wallet token has been permanently cancelled."
            ]
          },
          "token_requestor": {
            "type": "string",
            "enum": [
              "apple_pay",
              "google_pay"
            ],
            "description": "The digital wallet app being used.",
            "x-enum-descriptions": [
              "Apple Pay",
              "Google Pay"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "digital_wallet_token"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `digital_wallet_token`."
          }
        },
        "required": [
          "id",
          "card_id",
          "created_at",
          "status",
          "token_requestor",
          "type"
        ],
        "x-title-plural": "Digital Wallet Tokens",
        "x-tag": "Digital Wallet Tokens"
      },
      "transaction_list": {
        "type": "object",
        "title": "Transaction List",
        "description": "A list of Transaction objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "transaction_uyrp7fld2ium70oa7oi",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "inbound_ach_transfer",
                "inbound_ach_transfer": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "transaction"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/transaction"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Transaction Lists"
      },
      "transaction": {
        "type": "object",
        "title": "Transaction",
        "description": "Transactions are the immutable additions and removals of money from your bank account. They're the equivalent of line items on your bank statement.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 100,
          "currency": "USD",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Frederick S. Holmes",
          "id": "transaction_uyrp7fld2ium70oa7oi",
          "route_id": "account_number_v18nkfqm6afpsrvy82b2",
          "route_type": "account_number",
          "source": {
            "category": "inbound_ach_transfer",
            "inbound_ach_transfer": {
              "amount": 100,
              "originator_company_name": "BIG BANK",
              "originator_company_descriptive_date": null,
              "originator_company_discretionary_data": null,
              "originator_company_entry_description": "RESERVE",
              "originator_company_id": "0987654321",
              "receiver_id_number": "12345678900",
              "receiver_name": "IAN CREASE",
              "trace_number": "021000038461022"
            }
          },
          "type": "transaction"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
          },
          "description": {
            "type": "string",
            "description": "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides."
          },
          "id": {
            "type": "string",
            "description": "The Transaction identifier."
          },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "description": "The type of the route this Transaction came through.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "title": "Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
            "example": {
              "category": "inbound_ach_transfer",
              "inbound_ach_transfer": {
                "amount": 100,
                "originator_company_name": "BIG BANK",
                "originator_company_descriptive_date": null,
                "originator_company_discretionary_data": null,
                "originator_company_entry_description": "RESERVE",
                "originator_company_id": "0987654321",
                "receiver_id_number": "12345678900",
                "receiver_name": "IAN CREASE",
                "trace_number": "021000038461022"
              }
            },
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "account_transfer_intention",
                  "ach_check_conversion_return",
                  "ach_check_conversion",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_intention",
                  "check_transfer_return",
                  "check_transfer_rejection",
                  "check_transfer_stop_payment_request",
                  "dispute_resolution",
                  "empyreal_cash_deposit",
                  "inbound_ach_transfer",
                  "inbound_ach_transfer_return_intention",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_general_ledger_transaction",
                  "internal_source",
                  "card_route_refund",
                  "card_route_settlement",
                  "real_time_payments_transfer_acknowledgement",
                  "sample_funds",
                  "wire_drawdown_payment_intention",
                  "wire_drawdown_payment_rejection",
                  "wire_transfer_intention",
                  "wire_transfer_rejection",
                  "other"
                ],
                "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.",
                  "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.",
                  "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.",
                  "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.",
                  "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.",
                  "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.",
                  "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.",
                  "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.",
                  "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.",
                  "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.",
                  "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.",
                  "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.",
                  "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.",
                  "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.",
                  "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.",
                  "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.",
                  "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.",
                  "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.",
                  "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.",
                  "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.",
                  "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.",
                  "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                  "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                  "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.",
                  "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.",
                  "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.",
                  "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.",
                  "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.",
                  "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.",
                  "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.",
                  "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.",
                  "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.",
                  "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.",
                  "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.",
                  "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.",
                  "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.",
                  "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.",
                  "The Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "account_transfer_intention": {
                "type": "object",
                "title": "Account Transfer Intention",
                "description": "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "description": "Frederick S. Holmes",
                  "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                  "source_account_id": "account_in71c4amph0vgo2qllky",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "The description you chose to give the transfer."
                  },
                  "destination_account_id": {
                    "type": "string",
                    "description": "The identifier of the Account to where the Account Transfer was sent."
                  },
                  "source_account_id": {
                    "type": "string",
                    "description": "The identifier of the Account from where the Account Transfer was sent."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "description",
                  "destination_account_id",
                  "source_account_id",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Account Transfer Intentions"
              },
              "ach_check_conversion_return": {
                "type": "object",
                "title": "ACH Check Conversion Return",
                "description": "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                "example": {
                  "amount": 100,
                  "return_reason_code": ""
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "return_reason_code": {
                    "type": "string",
                    "description": "Why the transfer was returned."
                  }
                },
                "required": [
                  "amount",
                  "return_reason_code"
                ],
                "nullable": true,
                "x-title-plural": "ACH Check Conversion Returns"
              },
              "ach_check_conversion": {
                "type": "object",
                "title": "ACH Check Conversion",
                "description": "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                "example": {
                  "amount": 100,
                  "file_id": "file_makxrc67oh9l6sg7w9yc"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "file_id": {
                    "type": "string",
                    "description": "The identifier of the File containing an image of the returned check."
                  }
                },
                "required": [
                  "amount",
                  "file_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Check Conversions"
              },
              "ach_transfer_intention": {
                "type": "object",
                "title": "ACH Transfer Intention",
                "description": "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "statement_descriptor": "Frederick S. Holmes",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": ""
                  },
                  "routing_number": {
                    "type": "string",
                    "description": ""
                  },
                  "statement_descriptor": {
                    "type": "string",
                    "description": ""
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "statement_descriptor",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Intentions"
              },
              "ach_transfer_rejection": {
                "type": "object",
                "title": "ACH Transfer Rejection",
                "description": "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                "example": {
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Rejections"
              },
              "ach_transfer_return": {
                "type": "object",
                "title": "ACH Transfer Return",
                "description": "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                "example": {
                  "created_at": "2020-01-31T23:59:59Z",
                  "return_reason_code": "insufficient_fund",
                  "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                  },
                  "return_reason_code": {
                    "type": "string",
                    "enum": [
                      "insufficient_fund",
                      "no_account",
                      "account_closed",
                      "invalid_account_number_structure",
                      "account_frozen_entry_returned_per_ofac_instruction",
                      "credit_entry_refused_by_receiver",
                      "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                      "corporate_customer_advised_not_authorized",
                      "payment_stopped",
                      "non_transaction_account",
                      "uncollected_funds",
                      "routing_number_check_digit_error",
                      "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                      "amount_field_error",
                      "authorization_revoked_by_customer",
                      "invalid_ach_routing_number",
                      "file_record_edit_criteria",
                      "enr_invalid_individual_name",
                      "returned_per_odfi_request",
                      "addenda_error",
                      "limited_participation_dfi",
                      "incorrectly_coded_outbound_international_payment",
                      "other"
                    ],
                    "description": "Why the ACH Transfer was returned.",
                    "x-enum-descriptions": [
                      "Insufficient funds in the source account.",
                      "The account does not exist or the receiving bank was unable to locate it.",
                      "The account is closed.",
                      "The account number is invalid at the receiving bank.",
                      "The account was frozen per the Office of Foreign Assets Control.",
                      "The receiving bank account refused a credit transfer.",
                      "The receiving bank rejected because of an incorrect Standard Entry Class code.",
                      "The corporate customer reversed the transfer.",
                      "The receiving bank stopped payment on this transfer.",
                      "The receiving bank account does not perform transfers.",
                      "The receiving bank account does not have enough available balance for the transfer.",
                      "The routing number is incorrect.",
                      "The customer reversed the transfer.",
                      "The amount field is incorrect or too large.",
                      "The customer who initiated the transfer revoked authorization.",
                      "The routing number is invalid.",
                      "The receiving bank is unable to process a field in the transfer.",
                      "The individual name field was invalid.",
                      "The originating financial institution reversed the transfer.",
                      "The addenda record is incorrect or missing.",
                      "The receiving bank's regulatory supervisor has limited their participation.",
                      "The outbound international ACH transfer was incorrect.",
                      "Any other ACH return reason."
                    ]
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer associated with this return."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Tranasaction associated with this return."
                  }
                },
                "required": [
                  "created_at",
                  "return_reason_code",
                  "transfer_id",
                  "transaction_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Returns"
              },
              "card_dispute_acceptance": {
                "type": "object",
                "title": "Card Dispute Acceptance",
                "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                "example": {
                  "accepted_at": "2020-01-31T23:59:59Z",
                  "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "accepted_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                  },
                  "card_dispute_id": {
                    "type": "string",
                    "description": "The identifier of the Card Dispute that was accepted."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction that was created to return the disputed funds to your account.",
                    "nullable": true
                  }
                },
                "required": [
                  "accepted_at",
                  "card_dispute_id",
                  "transaction_id"
                ],
                "nullable": true,
                "x-title-plural": "Card Dispute Acceptances"
              },
              "card_refund": {
                "type": "object",
                "title": "Card Refund",
                "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "card_settlement_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "type": "card_refund"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "card_settlement_transaction_id": {
                    "type": "string",
                    "description": "The identifier for the Transaction this refunds, if any.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "card_refund"
                    ],
                    "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "card_settlement_transaction_id",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Card Refunds"
              },
              "card_settlement": {
                "type": "object",
                "title": "Card Settlement",
                "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "presentment_amount": 100,
                  "presentment_currency": "USD",
                  "merchant_city": "New York",
                  "merchant_country": "US",
                  "merchant_name": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "merchant_state": "NY",
                  "pending_transaction_id": null,
                  "type": "card_settlement"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "presentment_amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's presentment currency."
                  },
                  "presentment_currency": {
                    "type": "string",
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "pending_transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Pending Transaction associated with this Transaction.",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "card_settlement"
                    ],
                    "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "presentment_amount",
                  "presentment_currency",
                  "merchant_city",
                  "merchant_country",
                  "merchant_name",
                  "merchant_category_code",
                  "merchant_state",
                  "pending_transaction_id",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Card Settlements"
              },
              "check_deposit_acceptance": {
                "type": "object",
                "title": "Check Deposit Acceptance",
                "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "auxiliary_on_us": "101",
                  "serial_number": null,
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The account number printed on the check."
                  },
                  "routing_number": {
                    "type": "string",
                    "description": "The routing number printed on the check."
                  },
                  "auxiliary_on_us": {
                    "type": "string",
                    "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                    "nullable": true
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                    "nullable": true
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The ID of the Check Deposit that was accepted."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "account_number",
                  "routing_number",
                  "auxiliary_on_us",
                  "serial_number",
                  "check_deposit_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Acceptances"
              },
              "check_deposit_return": {
                "type": "object",
                "title": "Check Deposit Return",
                "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                "example": {
                  "amount": 100,
                  "returned_at": "2020-01-31T23:59:59Z",
                  "currency": "USD",
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "return_reason": "insufficient_funds"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "returned_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The identifier of the Check Deposit that was returned."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The identifier of the transaction that reversed the original check deposit transaction."
                  },
                  "return_reason": {
                    "type": "string",
                    "enum": [
                      "ach_conversion_not_supported",
                      "closed_account",
                      "duplicate_submission",
                      "insufficient_funds",
                      "no_account",
                      "not_authorized",
                      "stale_dated",
                      "stop_payment",
                      "unknown_reason",
                      "unmatched_details",
                      "unreadable_image"
                    ],
                    "description": "",
                    "x-enum-descriptions": [
                      "The check doesn't allow ACH conversion.",
                      "The account is closed.",
                      "The check has already been deposited.",
                      "Insufficient funds",
                      "No account was found matching the check details.",
                      "The check was not authorized.",
                      "The check is too old.",
                      "The payment has been stopped by the account holder.",
                      "The reason for the return is unknown.",
                      "The image doesn't match the details submitted.",
                      "The image could not be read."
                    ]
                  }
                },
                "required": [
                  "amount",
                  "returned_at",
                  "currency",
                  "check_deposit_id",
                  "transaction_id",
                  "return_reason"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Returns"
              },
              "check_transfer_intention": {
                "type": "object",
                "title": "Check Transfer Intention",
                "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                "example": {
                  "address_line1": "33 Liberty Street",
                  "address_line2": null,
                  "address_city": "New York",
                  "address_state": "NY",
                  "address_zip": "10045",
                  "amount": 1000,
                  "currency": "USD",
                  "recipient_name": "Ian Crease",
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                },
                "properties": {
                  "address_line1": {
                    "type": "string",
                    "description": "The street address of the check's destination."
                  },
                  "address_line2": {
                    "type": "string",
                    "description": "The second line of the address of the check's destination.",
                    "nullable": true
                  },
                  "address_city": {
                    "type": "string",
                    "description": "The city of the check's destination."
                  },
                  "address_state": {
                    "type": "string",
                    "description": "The state of the check's destination."
                  },
                  "address_zip": {
                    "type": "string",
                    "description": "The postal code of the check's destination."
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The transfer amount in USD cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "recipient_name": {
                    "type": "string",
                    "description": "The name that will be printed on the check."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer with which this is associated."
                  }
                },
                "required": [
                  "address_line1",
                  "address_line2",
                  "address_city",
                  "address_state",
                  "address_zip",
                  "amount",
                  "currency",
                  "recipient_name",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Intentions"
              },
              "check_transfer_return": {
                "type": "object",
                "title": "Check Transfer Return",
                "description": "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                "example": {
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                  "file_id": null,
                  "reason": "mail_delivery_failure"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the returned Check Transfer."
                  },
                  "file_id": {
                    "type": "string",
                    "description": "If available, a document with additional information about the return.",
                    "nullable": true
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "mail_delivery_failure",
                      "refused_by_recipient"
                    ],
                    "description": "The reason why the check was returned.",
                    "x-enum-descriptions": [
                      "Mail delivery failed and the check was returned to sender.",
                      "The check arrived and the recipient refused to deposit it."
                    ]
                  }
                },
                "required": [
                  "transfer_id",
                  "file_id",
                  "reason"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Returns"
              },
              "check_transfer_rejection": {
                "type": "object",
                "title": "Check Transfer Rejection",
                "description": "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                "example": {
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer that led to this Transaction."
                  }
                },
                "required": [
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Rejections"
              },
              "check_transfer_stop_payment_request": {
                "type": "object",
                "title": "Check Transfer Stop Payment Request",
                "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                "example": {
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                  "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                  "requested_at": "2020-01-31T23:59:59Z",
                  "type": "check_transfer_stop_payment_request"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": "The ID of the check transfer that was stopped."
                  },
                  "transaction_id": {
                    "type": "string",
                    "description": "The transaction ID of the corresponding credit transaction."
                  },
                  "requested_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the stop-payment was requested."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "check_transfer_stop_payment_request"
                    ],
                    "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                  }
                },
                "required": [
                  "transfer_id",
                  "transaction_id",
                  "requested_at",
                  "type"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Stop Payment Requests"
              },
              "dispute_resolution": {
                "type": "object",
                "title": "Dispute Resolution",
                "description": "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "disputed_transaction_id": {
                    "type": "string",
                    "description": "The identifier of the Transaction that was disputed."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "disputed_transaction_id"
                ],
                "nullable": true,
                "x-title-plural": "Dispute Resolutions"
              },
              "empyreal_cash_deposit": {
                "type": "object",
                "title": "Empyreal Cash Deposit",
                "description": "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                "example": {
                  "amount": 100,
                  "bag_id": "12345",
                  "deposit_date": "2020-01-31T23:59:59Z"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "bag_id": {
                    "type": "string",
                    "description": ""
                  },
                  "deposit_date": {
                    "type": "string",
                    "format": "date-time",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "bag_id",
                  "deposit_date"
                ],
                "nullable": true,
                "x-title-plural": "Empyreal Cash Deposits"
              },
              "inbound_ach_transfer": {
                "type": "object",
                "title": "Inbound ACH Transfer",
                "description": "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                "example": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "originator_company_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_company_descriptive_date": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_company_discretionary_data": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_company_id": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_id_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "trace_number": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "originator_company_name",
                  "originator_company_descriptive_date",
                  "originator_company_discretionary_data",
                  "originator_company_entry_description",
                  "originator_company_id",
                  "receiver_id_number",
                  "receiver_name",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound ACH Transfers"
              },
              "inbound_check": {
                "type": "object",
                "title": "Inbound Check",
                "description": "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "check_number": "       00000123",
                  "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "check_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "check_front_image_file_id": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "check_rear_image_file_id": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "check_number",
                  "check_front_image_file_id",
                  "check_rear_image_file_id"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Checks"
              },
              "inbound_international_ach_transfer": {
                "type": "object",
                "title": "Inbound International ACH Transfer",
                "description": "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                "example": {
                  "amount": -1000,
                  "foreign_exchange_indicator": "fixed_to_fixed",
                  "foreign_exchange_reference_indicator": "blank",
                  "foreign_exchange_reference": null,
                  "destination_country_code": "US",
                  "destination_currency_code": "USD",
                  "foreign_payment_amount": 199,
                  "foreign_trace_number": null,
                  "international_transaction_type_code": "internet_initiated",
                  "originating_currency_code": "USD",
                  "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                  "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "originating_depository_financial_institution_id": "091000019",
                  "originating_depository_financial_institution_branch_country": "US",
                  "originator_city": "BERLIN",
                  "originator_company_entry_description": "RETRY PYMT",
                  "originator_country": "DE",
                  "originator_identification": "770510487A",
                  "originator_name": "BERGHAIN",
                  "originator_postal_code": "50825",
                  "originator_street_address": "Ruedersdorferstr. 7",
                  "originator_state_or_province": null,
                  "payment_related_information": null,
                  "payment_related_information2": null,
                  "receiver_identification_number": "1018790279274",
                  "receiver_street_address": "123 FAKE ST",
                  "receiver_city": "BEVERLY HILLS",
                  "receiver_state_or_province": "CA",
                  "receiver_country": "US",
                  "receiver_postal_code": "90210",
                  "receiving_company_or_individual_name": "IAN CREASE",
                  "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                  "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "receiving_depository_financial_institution_id": "101050001",
                  "receiving_depository_financial_institution_country": "US",
                  "trace_number": "010202909100090"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "foreign_exchange_indicator": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_exchange_reference_indicator": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_exchange_reference": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "destination_country_code": {
                    "type": "string",
                    "description": ""
                  },
                  "destination_currency_code": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_payment_amount": {
                    "type": "integer",
                    "description": ""
                  },
                  "foreign_trace_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "international_transaction_type_code": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_currency_code": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_id": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_branch_country": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_city": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_country": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_identification": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_postal_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_street_address": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_state_or_province": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "payment_related_information": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "payment_related_information2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_identification_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_street_address": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_city": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_state_or_province": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_country": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_postal_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiving_company_or_individual_name": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_name": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_id": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_country": {
                    "type": "string",
                    "description": ""
                  },
                  "trace_number": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "foreign_exchange_indicator",
                  "foreign_exchange_reference_indicator",
                  "foreign_exchange_reference",
                  "destination_country_code",
                  "destination_currency_code",
                  "foreign_payment_amount",
                  "foreign_trace_number",
                  "international_transaction_type_code",
                  "originating_currency_code",
                  "originating_depository_financial_institution_name",
                  "originating_depository_financial_institution_id_qualifier",
                  "originating_depository_financial_institution_id",
                  "originating_depository_financial_institution_branch_country",
                  "originator_city",
                  "originator_company_entry_description",
                  "originator_country",
                  "originator_identification",
                  "originator_name",
                  "originator_postal_code",
                  "originator_street_address",
                  "originator_state_or_province",
                  "payment_related_information",
                  "payment_related_information2",
                  "receiver_identification_number",
                  "receiver_street_address",
                  "receiver_city",
                  "receiver_state_or_province",
                  "receiver_country",
                  "receiver_postal_code",
                  "receiving_company_or_individual_name",
                  "receiving_depository_financial_institution_name",
                  "receiving_depository_financial_institution_id_qualifier",
                  "receiving_depository_financial_institution_id",
                  "receiving_depository_financial_institution_country",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "Inbound International ACH Transfers"
              },
              "inbound_real_time_payments_transfer_confirmation": {
                "type": "object",
                "title": "Inbound Real Time Payments Transfer Confirmation",
                "description": "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "creditor_name": "Ian Crease",
                  "debtor_name": "National Phonograph Company",
                  "debtor_account_number": "987654321",
                  "debtor_routing_number": "101050001",
                  "transaction_identification": "20220501234567891T1BSLZO01745013025",
                  "remittance_information": "Invoice 29582"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "creditor_name": {
                    "type": "string",
                    "description": "The name the sender of the transfer specified as the recipient of the transfer."
                  },
                  "debtor_name": {
                    "type": "string",
                    "description": "The name provided by the sender of the transfer."
                  },
                  "debtor_account_number": {
                    "type": "string",
                    "description": "The account number of the account that sent the transfer."
                  },
                  "debtor_routing_number": {
                    "type": "string",
                    "description": "The routing number of the account that sent the transfer."
                  },
                  "transaction_identification": {
                    "type": "string",
                    "description": "The Real Time Payments network identification of the transfer"
                  },
                  "remittance_information": {
                    "type": "string",
                    "description": "Additional information included with the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "creditor_name",
                  "debtor_name",
                  "debtor_account_number",
                  "debtor_routing_number",
                  "transaction_identification",
                  "remittance_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Real Time Payments Transfer Confirmations"
              },
              "inbound_wire_drawdown_payment_reversal": {
                "type": "object",
                "title": "Inbound Wire Drawdown Payment Reversal",
                "description": "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                "example": {
                  "amount": 12345,
                  "description": "Inbound wire reversal 2022021100335128",
                  "input_cycle_date": "2022-02-11",
                  "input_sequence_number": "11023",
                  "input_source": "B6B7HU2R",
                  "input_message_accountability_data": "20220211B6B7HU2R011023",
                  "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                  "previous_message_input_cycle_date": "2022-02-10",
                  "previous_message_input_sequence_number": "3",
                  "previous_message_input_source": "MMQFMP0P"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount that was reversed."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description on the reversal message from Fedwire."
                  },
                  "input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire reversal."
                  },
                  "input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number."
                  },
                  "input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier."
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier."
                  },
                  "previous_message_input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                  },
                  "previous_message_input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire transfer that was reversed."
                  },
                  "previous_message_input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number for the wire transfer that was reversed."
                  },
                  "previous_message_input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                  }
                },
                "required": [
                  "amount",
                  "description",
                  "input_cycle_date",
                  "input_sequence_number",
                  "input_source",
                  "input_message_accountability_data",
                  "previous_message_input_message_accountability_data",
                  "previous_message_input_cycle_date",
                  "previous_message_input_sequence_number",
                  "previous_message_input_source"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
              },
              "inbound_wire_drawdown_payment": {
                "type": "object",
                "title": "Inbound Wire Drawdown Payment",
                "description": "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                "example": {
                  "amount": 100,
                  "beneficiary_address_line1": null,
                  "beneficiary_address_line2": null,
                  "beneficiary_address_line3": null,
                  "beneficiary_name": null,
                  "beneficiary_reference": null,
                  "description": "Inbound wire drawdown payment",
                  "input_message_accountability_data": null,
                  "originator_address_line1": null,
                  "originator_address_line2": null,
                  "originator_address_line3": null,
                  "originator_name": null,
                  "originator_to_beneficiary_information": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "beneficiary_address_line1": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_address_line2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_address_line3": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_reference": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": ""
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line1": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line3": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "beneficiary_address_line1",
                  "beneficiary_address_line2",
                  "beneficiary_address_line3",
                  "beneficiary_name",
                  "beneficiary_reference",
                  "description",
                  "input_message_accountability_data",
                  "originator_address_line1",
                  "originator_address_line2",
                  "originator_address_line3",
                  "originator_name",
                  "originator_to_beneficiary_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Drawdown Payments"
              },
              "inbound_wire_reversal": {
                "type": "object",
                "title": "Inbound Wire Reversal",
                "description": "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                "example": {
                  "amount": 12345,
                  "description": "Inbound wire reversal 2022021100335128",
                  "input_cycle_date": "2022-02-11",
                  "input_sequence_number": "11023",
                  "input_source": "B6B7HU2R",
                  "input_message_accountability_data": "20220211B6B7HU2R011023",
                  "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                  "previous_message_input_cycle_date": "2022-02-10",
                  "previous_message_input_sequence_number": "3",
                  "previous_message_input_source": "MMQFMP0P",
                  "receiver_financial_institution_information": null,
                  "financial_institution_to_financial_institution_information": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount that was reversed."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description on the reversal message from Fedwire."
                  },
                  "input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire reversal."
                  },
                  "input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number."
                  },
                  "input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier."
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier."
                  },
                  "previous_message_input_message_accountability_data": {
                    "type": "string",
                    "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                  },
                  "previous_message_input_cycle_date": {
                    "type": "string",
                    "format": "date",
                    "description": "The Fedwire cycle date for the wire transfer that was reversed."
                  },
                  "previous_message_input_sequence_number": {
                    "type": "string",
                    "description": "The Fedwire sequence number for the wire transfer that was reversed."
                  },
                  "previous_message_input_source": {
                    "type": "string",
                    "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                  },
                  "receiver_financial_institution_information": {
                    "type": "string",
                    "description": "Information included in the wire reversal for the receiving financial institution.",
                    "nullable": true
                  },
                  "financial_institution_to_financial_institution_information": {
                    "type": "string",
                    "description": "Additional financial institution information included in the wire reversal.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "description",
                  "input_cycle_date",
                  "input_sequence_number",
                  "input_source",
                  "input_message_accountability_data",
                  "previous_message_input_message_accountability_data",
                  "previous_message_input_cycle_date",
                  "previous_message_input_sequence_number",
                  "previous_message_input_source",
                  "receiver_financial_institution_information",
                  "financial_institution_to_financial_institution_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Reversals"
              },
              "inbound_wire_transfer": {
                "type": "object",
                "title": "Inbound Wire Transfer",
                "description": "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                "example": {
                  "amount": 100,
                  "beneficiary_address_line1": null,
                  "beneficiary_address_line2": null,
                  "beneficiary_address_line3": null,
                  "beneficiary_name": null,
                  "beneficiary_reference": null,
                  "description": "Inbound wire transfer",
                  "input_message_accountability_data": null,
                  "originator_address_line1": null,
                  "originator_address_line2": null,
                  "originator_address_line3": null,
                  "originator_name": null,
                  "originator_to_beneficiary_information_line1": null,
                  "originator_to_beneficiary_information_line2": null,
                  "originator_to_beneficiary_information_line3": null,
                  "originator_to_beneficiary_information_line4": null,
                  "originator_to_beneficiary_information": null
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "beneficiary_address_line1": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_address_line2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_address_line3": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "beneficiary_reference": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": ""
                  },
                  "input_message_accountability_data": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line1": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_address_line3": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line1": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line3": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information_line4": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_to_beneficiary_information": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "beneficiary_address_line1",
                  "beneficiary_address_line2",
                  "beneficiary_address_line3",
                  "beneficiary_name",
                  "beneficiary_reference",
                  "description",
                  "input_message_accountability_data",
                  "originator_address_line1",
                  "originator_address_line2",
                  "originator_address_line3",
                  "originator_name",
                  "originator_to_beneficiary_information_line1",
                  "originator_to_beneficiary_information_line2",
                  "originator_to_beneficiary_information_line3",
                  "originator_to_beneficiary_information_line4",
                  "originator_to_beneficiary_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Wire Transfers"
              },
              "interest_payment": {
                "type": "object",
                "title": "Interest Payment",
                "description": "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "period_start": "2023-03-01T00:00:00Z",
                  "period_end": "2023-03-31T23:59:59Z",
                  "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "period_start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The start of the period for which this transaction paid interest."
                  },
                  "period_end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The end of the period for which this transaction paid interest."
                  },
                  "accrued_on_account_id": {
                    "type": "string",
                    "description": "The account on which the interest was accrued.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "period_start",
                  "period_end",
                  "accrued_on_account_id"
                ],
                "nullable": true,
                "x-title-plural": "Interest Payments"
              },
              "internal_source": {
                "type": "object",
                "title": "Internal Source",
                "description": "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "reason": "sample_funds"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "bank_migration",
                      "cashback",
                      "empyreal_adjustment",
                      "error",
                      "error_correction",
                      "fees",
                      "interest",
                      "sample_funds",
                      "sample_funds_return"
                    ],
                    "description": "",
                    "x-enum-descriptions": [
                      "Bank Migration",
                      "Cashback",
                      "Empyreal adjustment",
                      "Error",
                      "Error correction",
                      "Fees",
                      "Interest",
                      "Sample funds",
                      "Sample funds return"
                    ]
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "reason"
                ],
                "nullable": true,
                "x-title-plural": "Internal Sources"
              },
              "card_route_refund": {
                "type": "object",
                "title": "Deprecated Card Refund",
                "description": "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                "example": {
                  "amount": 1000,
                  "currency": "USD",
                  "merchant_acceptor_id": "372909060886",
                  "merchant_city": "5364086000",
                  "merchant_country": "USA",
                  "merchant_descriptor": "TENTS R US",
                  "merchant_state": "CA",
                  "merchant_category_code": "5998"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_country",
                  "merchant_descriptor",
                  "merchant_state",
                  "merchant_category_code"
                ],
                "nullable": true,
                "x-title-plural": "Deprecated Card Refunds"
              },
              "card_route_settlement": {
                "type": "object",
                "title": "Deprecated Card Settlement",
                "description": "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                "example": {
                  "amount": 1000,
                  "currency": "USD",
                  "merchant_acceptor_id": "372909060886",
                  "merchant_city": "5364086000",
                  "merchant_country": "USA",
                  "merchant_descriptor": "TENTS R US",
                  "merchant_state": "CA",
                  "merchant_category_code": "5998"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_country",
                  "merchant_descriptor",
                  "merchant_state",
                  "merchant_category_code"
                ],
                "nullable": true,
                "x-title-plural": "Deprecated Card Settlements"
              },
              "sample_funds": {
                "type": "object",
                "title": "Sample Funds",
                "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                "example": {
                  "originator": "dashboard"
                },
                "properties": {
                  "originator": {
                    "type": "string",
                    "description": "Where the sample funds came from."
                  }
                },
                "required": [
                  "originator"
                ],
                "nullable": true,
                "x-title-plural": "Sample Fundss"
              },
              "wire_drawdown_payment_intention": {
                "type": "object",
                "title": "Wire Drawdown Payment Intention",
                "description": "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO",
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The transfer amount in USD cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": ""
                  },
                  "routing_number": {
                    "type": "string",
                    "description": ""
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": ""
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Drawdown Payment Intentions"
              },
              "wire_drawdown_payment_rejection": {
                "type": "object",
                "title": "Wire Drawdown Payment Rejection",
                "description": "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                "example": {
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Drawdown Payment Rejections"
              },
              "wire_transfer_intention": {
                "type": "object",
                "title": "Wire Transfer Intention",
                "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO",
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The transfer amount in USD cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": "The destination account number."
                  },
                  "routing_number": {
                    "type": "string",
                    "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": "The message that will show on the recipient's bank statement."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Transfer Intentions"
              },
              "wire_transfer_rejection": {
                "type": "object",
                "title": "Wire Transfer Rejection",
                "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                "example": {
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "transfer_id": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Transfer Rejections"
              }
            },
            "required": [
              "category",
              "account_transfer_intention",
              "ach_check_conversion_return",
              "ach_check_conversion",
              "ach_transfer_intention",
              "ach_transfer_rejection",
              "ach_transfer_return",
              "card_dispute_acceptance",
              "card_refund",
              "card_settlement",
              "check_deposit_acceptance",
              "check_deposit_return",
              "check_transfer_intention",
              "check_transfer_return",
              "check_transfer_rejection",
              "check_transfer_stop_payment_request",
              "dispute_resolution",
              "empyreal_cash_deposit",
              "inbound_ach_transfer",
              "inbound_check",
              "inbound_international_ach_transfer",
              "inbound_real_time_payments_transfer_confirmation",
              "inbound_wire_drawdown_payment_reversal",
              "inbound_wire_drawdown_payment",
              "inbound_wire_reversal",
              "inbound_wire_transfer",
              "interest_payment",
              "internal_source",
              "card_route_refund",
              "card_route_settlement",
              "sample_funds",
              "wire_drawdown_payment_intention",
              "wire_drawdown_payment_rejection",
              "wire_transfer_intention",
              "wire_transfer_rejection"
            ],
            "x-title-plural": "Transaction Sources"
          },
          "type": {
            "type": "string",
            "enum": [
              "transaction"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "type"
        ],
        "x-title-plural": "Transactions",
        "x-tag": "Transactions"
      },
      "pending_transaction_list": {
        "type": "object",
        "title": "Pending Transaction List",
        "description": "A list of Pending Transaction objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "pending_transaction_k1sfetcau2qbvjbzgju4",
              "route_id": "card_route_jk5pd79u6ydmbf9qzu6i",
              "route_type": "transfer_instruction",
              "source": {
                "category": "ach_transfer_instruction",
                "ach_transfer_instruction": {
                  "amount": 100,
                  "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
                }
              },
              "status": "pending",
              "type": "pending_transaction"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pending_transaction"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Pending Transaction Lists"
      },
      "pending_transaction": {
        "type": "object",
        "title": "Pending Transaction",
        "description": "Pending Transactions are potential future additions and removals of money from your bank account.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 100,
          "currency": "USD",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Frederick S. Holmes",
          "id": "pending_transaction_k1sfetcau2qbvjbzgju4",
          "route_id": "card_route_jk5pd79u6ydmbf9qzu6i",
          "route_type": "transfer_instruction",
          "source": {
            "category": "ach_transfer_instruction",
            "ach_transfer_instruction": {
              "amount": 100,
              "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
            }
          },
          "status": "pending",
          "type": "pending_transaction"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the account this Pending Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transcation's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occured."
          },
          "description": {
            "type": "string",
            "description": "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides."
          },
          "id": {
            "type": "string",
            "description": "The Pending Transaction identifier."
          },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "description": "The type of the route this Pending Transaction came through.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "title": "Pending Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
            "example": {
              "category": "ach_transfer_instruction",
              "ach_transfer_instruction": {
                "amount": 100,
                "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
              }
            },
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "account_transfer_instruction",
                  "ach_transfer_instruction",
                  "card_authorization",
                  "check_deposit_instruction",
                  "check_transfer_instruction",
                  "inbound_funds_hold",
                  "card_route_authorization",
                  "real_time_payments_transfer_instruction",
                  "wire_drawdown_payment_instruction",
                  "wire_transfer_instruction",
                  "other"
                ],
                "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "The Pending Transaction was created by a Account Transfer Instruction object. Details will be under the `account_transfer_instruction` object.",
                  "The Pending Transaction was created by a ACH Transfer Instruction object. Details will be under the `ach_transfer_instruction` object.",
                  "The Pending Transaction was created by a Card Authorization object. Details will be under the `card_authorization` object.",
                  "The Pending Transaction was created by a Check Deposit Instruction object. Details will be under the `check_deposit_instruction` object.",
                  "The Pending Transaction was created by a Check Transfer Instruction object. Details will be under the `check_transfer_instruction` object.",
                  "The Pending Transaction was created by a Inbound Funds Hold object. Details will be under the `inbound_funds_hold` object.",
                  "The Pending Transaction was created by a Deprecated Card Authorization object. Details will be under the `card_route_authorization` object.",
                  "The Pending Transaction was created by a Real Time Payments Transfer Instruction object. Details will be under the `real_time_payments_transfer_instruction` object.",
                  "The Pending Transaction was created by a Wire Drawdown Payment Instruction object. Details will be under the `wire_drawdown_payment_instruction` object.",
                  "The Pending Transaction was created by a Wire Transfer Instruction object. Details will be under the `wire_transfer_instruction` object.",
                  "The Pending Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "account_transfer_instruction": {
                "type": "object",
                "title": "Account Transfer Instruction",
                "description": "A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Account Transfer Instructions"
              },
              "ach_transfer_instruction": {
                "type": "object",
                "title": "ACH Transfer Instruction",
                "description": "A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the ACH Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "ACH Transfer Instructions"
              },
              "card_authorization": {
                "type": "object",
                "title": "Card Authorization",
                "description": "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                "example": {
                  "merchant_acceptor_id": "5665270011000168",
                  "merchant_descriptor": "AMAZON.COM",
                  "merchant_category_code": "5734",
                  "merchant_city": "New York",
                  "merchant_country": "US",
                  "network": "visa",
                  "network_details": {
                    "visa": {
                      "electronic_commerce_indicator": "secure_electronic_commerce",
                      "point_of_service_entry_mode": "manual"
                    }
                  },
                  "amount": 100,
                  "currency": "USD",
                  "real_time_decision_id": null,
                  "digital_wallet_token_id": null
                },
                "properties": {
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": "The merchant descriptor of the merchant the card is transacting with."
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in.",
                    "nullable": true
                  },
                  "network": {
                    "type": "string",
                    "enum": [
                      "visa"
                    ],
                    "description": "The payment network used to process this card authorization",
                    "x-enum-descriptions": [
                      "Visa"
                    ]
                  },
                  "network_details": {
                    "type": "object",
                    "title": "Network Details",
                    "description": "Fields specific to the `network`",
                    "properties": {
                      "visa": {
                        "type": "object",
                        "title": "Visa",
                        "description": "Fields specific to the `visa` network",
                        "properties": {
                          "electronic_commerce_indicator": {
                            "type": "string",
                            "enum": [
                              "mail_phone_order",
                              "recurring",
                              "installment",
                              "unknown_mail_phone_order",
                              "secure_electronic_commerce",
                              "non_authenticated_security_transaction_at_3ds_capable_merchant",
                              "non_authenticated_security_transaction",
                              "non_secure_transaction"
                            ],
                            "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                              "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                              "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                              "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                              "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                              "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                              "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                              "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                            ]
                          },
                          "point_of_service_entry_mode": {
                            "type": "string",
                            "enum": [
                              "manual",
                              "magnetic_stripe_no_cvv",
                              "optical_code",
                              "integrated_circuit_card",
                              "contactless",
                              "credential_on_file",
                              "magnetic_stripe",
                              "contactless_magnetic_stripe",
                              "integrated_circuit_card_no_cvv"
                            ],
                            "description": "The method used to enter the cardholder's primary account number and card expiration date",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Manual key entry",
                              "Magnetic stripe read, without card verification value",
                              "Optical code",
                              "Contact chip card",
                              "Contactless read of chip card",
                              "Transaction iniated using a credential that has previously been stored on file",
                              "Magnetic stripe read",
                              "Contactless read of magnetic stripe data",
                              "Contact chip card, without card verification value"
                            ]
                          }
                        },
                        "required": [
                          "electronic_commerce_indicator",
                          "point_of_service_entry_mode"
                        ],
                        "x-title-plural": "Visas"
                      }
                    },
                    "required": [
                      "visa"
                    ],
                    "x-title-plural": "Network Detailss"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "real_time_decision_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                    "nullable": true
                  },
                  "digital_wallet_token_id": {
                    "type": "string",
                    "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                    "nullable": true
                  }
                },
                "required": [
                  "merchant_acceptor_id",
                  "merchant_descriptor",
                  "merchant_category_code",
                  "merchant_city",
                  "merchant_country",
                  "network",
                  "network_details",
                  "amount",
                  "currency",
                  "real_time_decision_id",
                  "digital_wallet_token_id"
                ],
                "nullable": true,
                "x-title-plural": "Card Authorizations"
              },
              "check_deposit_instruction": {
                "type": "object",
                "title": "Check Deposit Instruction",
                "description": "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                  "back_image_file_id": "file_26khfk98mzfz90a11oqx",
                  "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "front_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the File containing the image of the front of the check that was deposited."
                  },
                  "back_image_file_id": {
                    "type": "string",
                    "description": "The identifier of the File containing the image of the back of the check that was deposited.",
                    "nullable": true
                  },
                  "check_deposit_id": {
                    "type": "string",
                    "description": "The identifier of the Check Deposit.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "front_image_file_id",
                  "back_image_file_id",
                  "check_deposit_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Deposit Instructions"
              },
              "check_transfer_instruction": {
                "type": "object",
                "title": "Check Transfer Instruction",
                "description": "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": "The identifier of the Check Transfer that led to this Pending Transaction."
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Check Transfer Instructions"
              },
              "inbound_funds_hold": {
                "type": "object",
                "title": "Inbound Funds Hold",
                "description": "A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "automatically_releases_at": "2020-01-31T23:59:59Z",
                  "released_at": null,
                  "status": "held",
                  "held_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "automatically_releases_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the hold will be released automatically. Certain conditions may cause it to be released before this time."
                  },
                  "released_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the hold was released (if it has been released).",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "held",
                      "complete"
                    ],
                    "description": "The status of the hold.",
                    "x-enum-descriptions": [
                      "Funds are still being held.",
                      "Funds have been released."
                    ]
                  },
                  "held_transaction_id": {
                    "type": "string",
                    "description": "The ID of the Transaction for which funds were held.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "automatically_releases_at",
                  "released_at",
                  "status",
                  "held_transaction_id"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Funds Holds"
              },
              "card_route_authorization": {
                "type": "object",
                "title": "Deprecated Card Authorization",
                "description": "A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "merchant_acceptor_id": "6631945550173363",
                  "merchant_city": "New York",
                  "merchant_country": "US",
                  "merchant_descriptor": "THUMP COFFEE",
                  "merchant_category_code": "5734",
                  "merchant_state": "NY"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_country",
                  "merchant_descriptor",
                  "merchant_category_code",
                  "merchant_state"
                ],
                "nullable": true,
                "x-title-plural": "Deprecated Card Authorizations"
              },
              "wire_drawdown_payment_instruction": {
                "type": "object",
                "title": "Wire Drawdown Payment Instruction",
                "description": "A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": ""
                  },
                  "routing_number": {
                    "type": "string",
                    "description": ""
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient"
                ],
                "nullable": true,
                "x-title-plural": "Wire Drawdown Payment Instructions"
              },
              "wire_transfer_instruction": {
                "type": "object",
                "title": "Wire Transfer Instruction",
                "description": "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                "example": {
                  "amount": 100,
                  "account_number": "987654321",
                  "routing_number": "101050001",
                  "message_to_recipient": "HELLO",
                  "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                  },
                  "account_number": {
                    "type": "string",
                    "description": ""
                  },
                  "routing_number": {
                    "type": "string",
                    "description": ""
                  },
                  "message_to_recipient": {
                    "type": "string",
                    "description": ""
                  },
                  "transfer_id": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "account_number",
                  "routing_number",
                  "message_to_recipient",
                  "transfer_id"
                ],
                "nullable": true,
                "x-title-plural": "Wire Transfer Instructions"
              }
            },
            "required": [
              "category",
              "account_transfer_instruction",
              "ach_transfer_instruction",
              "card_authorization",
              "check_deposit_instruction",
              "check_transfer_instruction",
              "inbound_funds_hold",
              "card_route_authorization",
              "wire_drawdown_payment_instruction",
              "wire_transfer_instruction"
            ],
            "x-title-plural": "Pending Transaction Sources"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "complete"
            ],
            "description": "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
            "x-enum-descriptions": [
              "The Pending Transaction is still awaiting confirmation.",
              "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "pending_transaction"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `pending_transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "status",
          "type"
        ],
        "x-title-plural": "Pending Transactions",
        "x-tag": "Pending Transactions"
      },
      "declined_transaction_list": {
        "type": "object",
        "title": "Declined Transaction List",
        "description": "A list of Declined Transaction objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 1750,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "declined_transaction_17jbn0yyhvkt4v4ooym8",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "ach_decline",
                "ach_decline": {
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "declined_transaction"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/declined_transaction"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Declined Transaction Lists"
      },
      "declined_transaction": {
        "type": "object",
        "title": "Declined Transaction",
        "description": "Declined Transactions are refused additions and removals of money from your bank account. For example, Declined Transactions are caused when your Account has an insufficient balance or your Limits are triggered.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "amount": 1750,
          "currency": "USD",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Frederick S. Holmes",
          "id": "declined_transaction_17jbn0yyhvkt4v4ooym8",
          "route_id": "account_number_v18nkfqm6afpsrvy82b2",
          "route_type": "account_number",
          "source": {
            "category": "ach_decline",
            "ach_decline": {
              "amount": 1750,
              "originator_company_name": "BIG BANK",
              "originator_company_descriptive_date": null,
              "originator_company_discretionary_data": null,
              "originator_company_id": "0987654321",
              "reason": "insufficient_funds",
              "receiver_id_number": "12345678900",
              "receiver_name": "IAN CREASE",
              "trace_number": "021000038461022"
            }
          },
          "type": "declined_transaction"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account the Declined Transaction belongs to."
          },
          "amount": {
            "type": "integer",
            "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
          },
          "description": {
            "type": "string",
            "description": "This is the description the vendor provides."
          },
          "id": {
            "type": "string",
            "description": "The Declined Transaction identifier."
          },
          "route_id": {
            "type": "string",
            "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
            "nullable": true
          },
          "route_type": {
            "type": "string",
            "description": "The type of the route this Declined Transaction came through.",
            "nullable": true
          },
          "source": {
            "type": "object",
            "title": "Declined Transaction Source",
            "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
            "example": {
              "category": "ach_decline",
              "ach_decline": {
                "amount": 1750,
                "originator_company_name": "BIG BANK",
                "originator_company_descriptive_date": null,
                "originator_company_discretionary_data": null,
                "originator_company_id": "0987654321",
                "reason": "insufficient_funds",
                "receiver_id_number": "12345678900",
                "receiver_name": "IAN CREASE",
                "trace_number": "021000038461022"
              }
            },
            "properties": {
              "category": {
                "type": "string",
                "enum": [
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "card_route_decline",
                  "other"
                ],
                "description": "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                "x-enum-descriptions": [
                  "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.",
                  "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.",
                  "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.",
                  "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.",
                  "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.",
                  "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.",
                  "The Declined Transaction was made for an undocumented or deprecated reason."
                ]
              },
              "ach_decline": {
                "type": "object",
                "title": "ACH Decline",
                "description": "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                "example": {
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "originator_company_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_company_descriptive_date": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_company_discretionary_data": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_company_id": {
                    "type": "string",
                    "description": ""
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "ach_route_canceled",
                      "ach_route_disabled",
                      "breaches_limit",
                      "credit_entry_refused_by_receiver",
                      "duplicate_return",
                      "entity_not_active",
                      "transaction_not_allowed",
                      "group_locked",
                      "insufficient_funds",
                      "no_ach_route",
                      "originator_request"
                    ],
                    "description": "Why the ACH transfer was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "The transaction would cause a limit to be exceeded.",
                      "A credit was refused.",
                      "Other.",
                      "The account's entity is not active.",
                      "The transaction is not allowed per Increase's terms",
                      "Your account is inactive.",
                      "Your account contains insufficient funds.",
                      "The account number that was debited does not exist.",
                      "Other."
                    ]
                  },
                  "receiver_id_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_name": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "trace_number": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "originator_company_name",
                  "originator_company_descriptive_date",
                  "originator_company_discretionary_data",
                  "originator_company_id",
                  "reason",
                  "receiver_id_number",
                  "receiver_name",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "ACH Declines"
              },
              "card_decline": {
                "type": "object",
                "title": "Card Decline",
                "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                "example": {
                  "merchant_acceptor_id": "372909060886",
                  "merchant_descriptor": "TENTS R US",
                  "merchant_category_code": "5998",
                  "merchant_city": "5364086000",
                  "merchant_country": "USA",
                  "network": "visa",
                  "network_details": {
                    "visa": {
                      "electronic_commerce_indicator": "secure_electronic_commerce",
                      "point_of_service_entry_mode": "manual"
                    }
                  },
                  "amount": -1000,
                  "currency": "USD",
                  "reason": "insufficient_funds",
                  "merchant_state": "CA",
                  "real_time_decision_id": null,
                  "digital_wallet_token_id": null
                },
                "properties": {
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": "The merchant descriptor of the merchant the card is transacting with."
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                    "nullable": true
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "The city the merchant resides in.",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": "The country the merchant resides in.",
                    "nullable": true
                  },
                  "network": {
                    "type": "string",
                    "enum": [
                      "visa"
                    ],
                    "description": "The payment network used to process this card authorization",
                    "x-enum-descriptions": [
                      "Visa"
                    ]
                  },
                  "network_details": {
                    "type": "object",
                    "title": "Network Details",
                    "description": "Fields specific to the `network`",
                    "properties": {
                      "visa": {
                        "type": "object",
                        "title": "Visa",
                        "description": "Fields specific to the `visa` network",
                        "properties": {
                          "electronic_commerce_indicator": {
                            "type": "string",
                            "enum": [
                              "mail_phone_order",
                              "recurring",
                              "installment",
                              "unknown_mail_phone_order",
                              "secure_electronic_commerce",
                              "non_authenticated_security_transaction_at_3ds_capable_merchant",
                              "non_authenticated_security_transaction",
                              "non_secure_transaction"
                            ],
                            "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                              "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                              "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                              "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                              "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                              "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                              "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                              "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                            ]
                          },
                          "point_of_service_entry_mode": {
                            "type": "string",
                            "enum": [
                              "manual",
                              "magnetic_stripe_no_cvv",
                              "optical_code",
                              "integrated_circuit_card",
                              "contactless",
                              "credential_on_file",
                              "magnetic_stripe",
                              "contactless_magnetic_stripe",
                              "integrated_circuit_card_no_cvv"
                            ],
                            "description": "The method used to enter the cardholder's primary account number and card expiration date",
                            "nullable": true,
                            "x-enum-descriptions": [
                              "Manual key entry",
                              "Magnetic stripe read, without card verification value",
                              "Optical code",
                              "Contact chip card",
                              "Contactless read of chip card",
                              "Transaction iniated using a credential that has previously been stored on file",
                              "Magnetic stripe read",
                              "Contactless read of magnetic stripe data",
                              "Contact chip card, without card verification value"
                            ]
                          }
                        },
                        "required": [
                          "electronic_commerce_indicator",
                          "point_of_service_entry_mode"
                        ],
                        "x-title-plural": "Visas"
                      }
                    },
                    "required": [
                      "visa"
                    ],
                    "x-title-plural": "Network Detailss"
                  },
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "card_not_active",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "cvv2_mismatch",
                      "transaction_not_allowed",
                      "breaches_limit",
                      "webhook_declined",
                      "webhook_timed_out",
                      "declined_by_stand_in_processing"
                    ],
                    "description": "Why the transaction was declined.",
                    "x-enum-descriptions": [
                      "The Card was not active.",
                      "The account's entity was not active.",
                      "The account was inactive.",
                      "The Card's Account did not have a sufficient available balance.",
                      "The given CVV2 did not match the card's value.",
                      "The attempted card transaction is not allowed per Increase's terms.",
                      "The transaction was blocked by a Limit.",
                      "Your application declined the transaction via webhook.",
                      "Your application webhook did not respond without the required timeout.",
                      "Declined by stand-in processing"
                    ]
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "The state the merchant resides in.",
                    "nullable": true
                  },
                  "real_time_decision_id": {
                    "type": "string",
                    "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                    "nullable": true
                  },
                  "digital_wallet_token_id": {
                    "type": "string",
                    "description": "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                    "nullable": true
                  }
                },
                "required": [
                  "merchant_acceptor_id",
                  "merchant_descriptor",
                  "merchant_category_code",
                  "merchant_city",
                  "merchant_country",
                  "network",
                  "network_details",
                  "amount",
                  "currency",
                  "reason",
                  "merchant_state",
                  "real_time_decision_id",
                  "digital_wallet_token_id"
                ],
                "nullable": true,
                "x-title-plural": "Card Declines"
              },
              "check_decline": {
                "type": "object",
                "title": "Check Decline",
                "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                "example": {
                  "amount": -1000,
                  "auxiliary_on_us": "99999",
                  "reason": "insufficient_funds"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "auxiliary_on_us": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "ach_route_canceled",
                      "ach_route_disabled",
                      "breaches_limit",
                      "entity_not_active",
                      "group_locked",
                      "insufficient_funds",
                      "unable_to_locate_account",
                      "unable_to_process",
                      "refer_to_image",
                      "stop_payment_requested",
                      "returned"
                    ],
                    "description": "Why the check was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "The transaction would cause a limit to be exceeded.",
                      "The account's entity is not active.",
                      "Your account is inactive.",
                      "Your account contains insufficient funds.",
                      "Unable to locate account.",
                      "Unable to process.",
                      "Refer to image.",
                      "Stop payment requested for this check.",
                      "Check was returned to sender."
                    ]
                  }
                },
                "required": [
                  "amount",
                  "auxiliary_on_us",
                  "reason"
                ],
                "nullable": true,
                "x-title-plural": "Check Declines"
              },
              "inbound_real_time_payments_transfer_decline": {
                "type": "object",
                "title": "Inbound Real Time Payments Transfer Decline",
                "description": "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                "example": {
                  "amount": 100,
                  "currency": "USD",
                  "reason": "account_number_disabled",
                  "creditor_name": "Ian Crease",
                  "debtor_name": "National Phonograph Company",
                  "debtor_account_number": "987654321",
                  "debtor_routing_number": "101050001",
                  "transaction_identification": "20220501234567891T1BSLZO01745013025",
                  "remittance_information": "Invoice 29582"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "reason": {
                    "type": "string",
                    "enum": [
                      "account_number_canceled",
                      "account_number_disabled",
                      "group_locked",
                      "entity_not_active",
                      "real_time_payments_not_enabled"
                    ],
                    "description": "Why the transfer was declined.",
                    "x-enum-descriptions": [
                      "The account number is canceled.",
                      "The account number is disabled.",
                      "Your account is inactive.",
                      "The account's entity is not active.",
                      "Your account is not enabled to receive Real Time Payments transfers."
                    ]
                  },
                  "creditor_name": {
                    "type": "string",
                    "description": "The name the sender of the transfer specified as the recipient of the transfer."
                  },
                  "debtor_name": {
                    "type": "string",
                    "description": "The name provided by the sender of the transfer."
                  },
                  "debtor_account_number": {
                    "type": "string",
                    "description": "The account number of the account that sent the transfer."
                  },
                  "debtor_routing_number": {
                    "type": "string",
                    "description": "The routing number of the account that sent the transfer."
                  },
                  "transaction_identification": {
                    "type": "string",
                    "description": "The Real Time Payments network identification of the declined transfer."
                  },
                  "remittance_information": {
                    "type": "string",
                    "description": "Additional information included with the transfer.",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "reason",
                  "creditor_name",
                  "debtor_name",
                  "debtor_account_number",
                  "debtor_routing_number",
                  "transaction_identification",
                  "remittance_information"
                ],
                "nullable": true,
                "x-title-plural": "Inbound Real Time Payments Transfer Declines"
              },
              "international_ach_decline": {
                "type": "object",
                "title": "International ACH Decline",
                "description": "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                "example": {
                  "amount": -1000,
                  "foreign_exchange_indicator": "fixed_to_fixed",
                  "foreign_exchange_reference_indicator": "blank",
                  "foreign_exchange_reference": null,
                  "destination_country_code": "US",
                  "destination_currency_code": "USD",
                  "foreign_payment_amount": 199,
                  "foreign_trace_number": null,
                  "international_transaction_type_code": "internet_initiated",
                  "originating_currency_code": "USD",
                  "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                  "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "originating_depository_financial_institution_id": "091000019",
                  "originating_depository_financial_institution_branch_country": "US",
                  "originator_city": "BERLIN",
                  "originator_company_entry_description": "RETRY PYMT",
                  "originator_country": "DE",
                  "originator_identification": "770510487A",
                  "originator_name": "BERGHAIN",
                  "originator_postal_code": "50825",
                  "originator_street_address": "Ruedersdorferstr. 7",
                  "originator_state_or_province": null,
                  "payment_related_information": null,
                  "payment_related_information2": null,
                  "receiver_identification_number": "1018790279274",
                  "receiver_street_address": "123 FAKE ST",
                  "receiver_city": "BEVERLY HILLS",
                  "receiver_state_or_province": "CA",
                  "receiver_country": "US",
                  "receiver_postal_code": "90210",
                  "receiving_company_or_individual_name": "IAN CREASE",
                  "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                  "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                  "receiving_depository_financial_institution_id": "101050001",
                  "receiving_depository_financial_institution_country": "US",
                  "trace_number": "010202909100090"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "foreign_exchange_indicator": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_exchange_reference_indicator": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_exchange_reference": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "destination_country_code": {
                    "type": "string",
                    "description": ""
                  },
                  "destination_currency_code": {
                    "type": "string",
                    "description": ""
                  },
                  "foreign_payment_amount": {
                    "type": "integer",
                    "description": ""
                  },
                  "foreign_trace_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "international_transaction_type_code": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_currency_code": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_id": {
                    "type": "string",
                    "description": ""
                  },
                  "originating_depository_financial_institution_branch_country": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_city": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_company_entry_description": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_country": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_identification": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_name": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_postal_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "originator_street_address": {
                    "type": "string",
                    "description": ""
                  },
                  "originator_state_or_province": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "payment_related_information": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "payment_related_information2": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_identification_number": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_street_address": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_city": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_state_or_province": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiver_country": {
                    "type": "string",
                    "description": ""
                  },
                  "receiver_postal_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "receiving_company_or_individual_name": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_name": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_id_qualifier": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_id": {
                    "type": "string",
                    "description": ""
                  },
                  "receiving_depository_financial_institution_country": {
                    "type": "string",
                    "description": ""
                  },
                  "trace_number": {
                    "type": "string",
                    "description": ""
                  }
                },
                "required": [
                  "amount",
                  "foreign_exchange_indicator",
                  "foreign_exchange_reference_indicator",
                  "foreign_exchange_reference",
                  "destination_country_code",
                  "destination_currency_code",
                  "foreign_payment_amount",
                  "foreign_trace_number",
                  "international_transaction_type_code",
                  "originating_currency_code",
                  "originating_depository_financial_institution_name",
                  "originating_depository_financial_institution_id_qualifier",
                  "originating_depository_financial_institution_id",
                  "originating_depository_financial_institution_branch_country",
                  "originator_city",
                  "originator_company_entry_description",
                  "originator_country",
                  "originator_identification",
                  "originator_name",
                  "originator_postal_code",
                  "originator_street_address",
                  "originator_state_or_province",
                  "payment_related_information",
                  "payment_related_information2",
                  "receiver_identification_number",
                  "receiver_street_address",
                  "receiver_city",
                  "receiver_state_or_province",
                  "receiver_country",
                  "receiver_postal_code",
                  "receiving_company_or_individual_name",
                  "receiving_depository_financial_institution_name",
                  "receiving_depository_financial_institution_id_qualifier",
                  "receiving_depository_financial_institution_id",
                  "receiving_depository_financial_institution_country",
                  "trace_number"
                ],
                "nullable": true,
                "x-title-plural": "International ACH Declines"
              },
              "card_route_decline": {
                "type": "object",
                "title": "Deprecated Card Decline",
                "description": "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                "example": {
                  "amount": -1000,
                  "currency": "USD",
                  "merchant_acceptor_id": "372909060886",
                  "merchant_city": "5364086000",
                  "merchant_country": "USA",
                  "merchant_descriptor": "TENTS R US",
                  "merchant_state": "CA",
                  "merchant_category_code": "5998"
                },
                "properties": {
                  "amount": {
                    "type": "integer",
                    "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                  },
                  "currency": {
                    "type": "string",
                    "enum": [
                      "CAD",
                      "CHF",
                      "EUR",
                      "GBP",
                      "JPY",
                      "USD"
                    ],
                    "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                    "x-enum-descriptions": [
                      "Canadian Dollar (CAD)",
                      "Swiss Franc (CHF)",
                      "Euro (EUR)",
                      "British Pound (GBP)",
                      "Japanese Yen (JPY)",
                      "US Dollar (USD)"
                    ]
                  },
                  "merchant_acceptor_id": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_city": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_country": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_descriptor": {
                    "type": "string",
                    "description": ""
                  },
                  "merchant_state": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "merchant_category_code": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "amount",
                  "currency",
                  "merchant_acceptor_id",
                  "merchant_city",
                  "merchant_country",
                  "merchant_descriptor",
                  "merchant_state",
                  "merchant_category_code"
                ],
                "nullable": true,
                "x-title-plural": "Deprecated Card Declines"
              }
            },
            "required": [
              "category",
              "ach_decline",
              "card_decline",
              "check_decline",
              "inbound_real_time_payments_transfer_decline",
              "international_ach_decline",
              "card_route_decline"
            ],
            "x-title-plural": "Declined Transaction Sources"
          },
          "type": {
            "type": "string",
            "enum": [
              "declined_transaction"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
          }
        },
        "required": [
          "account_id",
          "amount",
          "currency",
          "created_at",
          "description",
          "id",
          "route_id",
          "route_type",
          "source",
          "type"
        ],
        "x-title-plural": "Declined Transactions",
        "x-tag": "Declined Transactions"
      },
      "limit": {
        "type": "object",
        "title": "Limit",
        "description": "You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.",
        "example": {
          "id": "limit_fku42k0qtc8ulsuas38q",
          "interval": "month",
          "metric": "volume",
          "model_id": "account_number_v18nkfqm6afpsrvy82b2",
          "model_type": "account_number",
          "status": "active",
          "type": "limit",
          "value": 0
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Limit identifier."
          },
          "interval": {
            "type": "string",
            "enum": [
              "transaction",
              "day",
              "week",
              "month",
              "year",
              "all_time"
            ],
            "description": "The interval for the metric. This is required if `metric` is `count` or `volume`.",
            "nullable": true,
            "x-enum-descriptions": [
              "Enforce the Limit per-transaction.",
              "Enforce the Limit based on the trailing 24 hour period.",
              "Enforce the Limit based on the trailing seven days.",
              "Enforce the Limit based on the trailing month, going back to the current day in the previous month, or as close as possible given month length differences.",
              "Enforce the Limit based on the trailing 365 days.",
              "Enforce the Limit for all time."
            ]
          },
          "metric": {
            "type": "string",
            "enum": [
              "count",
              "volume"
            ],
            "description": "The metric for the Limit.",
            "x-enum-descriptions": [
              "The maximum number of debits allowed.",
              "The maximum volume of debits allowed in the minor unit of the model's currency."
            ]
          },
          "model_id": {
            "type": "string",
            "description": "The identifier of the Account Number, Account, or Card the Limit applies to."
          },
          "model_type": {
            "type": "string",
            "enum": [
              "account",
              "account_number",
              "card"
            ],
            "description": "The type of the model you wish to associate the Limit with.",
            "x-enum-descriptions": [
              "Enforce the Limit for the entire account.",
              "Enforce the Limit for this specific route.",
              "Enforce the Limit for this specific card."
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "description": "The current status of the Limit.",
            "x-enum-descriptions": [
              "The Limit is active.",
              "The Limit is temporarily disabled."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "limit"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `limit`."
          },
          "value": {
            "type": "integer",
            "description": "The value to evaluate the Limit against."
          }
        },
        "required": [
          "id",
          "interval",
          "metric",
          "model_id",
          "model_type",
          "status",
          "type",
          "value"
        ],
        "x-title-plural": "Limits",
        "x-tag": "Limits"
      },
      "limit_list": {
        "type": "object",
        "title": "Limit List",
        "description": "A list of Limit objects",
        "example": {
          "data": [
            {
              "id": "limit_fku42k0qtc8ulsuas38q",
              "interval": "month",
              "metric": "volume",
              "model_id": "account_number_v18nkfqm6afpsrvy82b2",
              "model_type": "account_number",
              "status": "active",
              "type": "limit",
              "value": 0
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/limit"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Limit Lists"
      },
      "account_transfer": {
        "type": "object",
        "title": "Account Transfer",
        "description": "Account transfers move funds between your own accounts at Increase.",
        "example": {
          "id": "account_transfer_7k9qe1ysdgqztnt63l7n",
          "amount": 100,
          "account_id": "account_in71c4amph0vgo2qllky",
          "currency": "USD",
          "destination_account_id": "account_uf16sut2ct5bevmq3eh",
          "destination_transaction_id": "transaction_j3itv8dtk5o8pw3p1xj4",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Move money into savings",
          "network": "account",
          "status": "complete",
          "template_id": "account_transfer_template_5nloco84eijzw0wcfhnn",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "approval": {
            "approved_at": "2020-01-31T23:59:59Z"
          },
          "cancellation": null,
          "type": "account_transfer"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The account transfer's identifier."
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
          },
          "account_id": {
            "type": "string",
            "description": "The Account to which the transfer belongs."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "destination_account_id": {
            "type": "string",
            "description": "The destination account's identifier."
          },
          "destination_transaction_id": {
            "type": "string",
            "description": "The ID for the transaction receiving the transfer.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "description": {
            "type": "string",
            "description": "The description that will show on the transactions."
          },
          "network": {
            "type": "string",
            "enum": [
              "account"
            ],
            "description": "The transfer's network."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_submission",
              "pending_approval",
              "canceled",
              "requires_attention",
              "flagged_by_operator",
              "complete"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is pending submission.",
              "The transfer is pending approval.",
              "The transfer has been canceled.",
              "The transfer requires your attention.",
              "The transfer requires your attention.",
              "The transfer is complete."
            ]
          },
          "template_id": {
            "type": "string",
            "description": "If the transfer was created from a template, this will be the template's ID.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": {
              "approved_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              }
            },
            "required": [
              "approved_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": {
              "canceled_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              }
            },
            "required": [
              "canceled_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "type": {
            "type": "string",
            "enum": [
              "account_transfer"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `account_transfer`."
          }
        },
        "required": [
          "id",
          "amount",
          "account_id",
          "currency",
          "destination_account_id",
          "destination_transaction_id",
          "created_at",
          "description",
          "network",
          "status",
          "template_id",
          "transaction_id",
          "approval",
          "cancellation",
          "type"
        ],
        "x-title-plural": "Account Transfers",
        "x-tag": "Account Transfers"
      },
      "account_transfer_list": {
        "type": "object",
        "title": "Account Transfer List",
        "description": "A list of Account Transfer objects",
        "example": {
          "data": [
            {
              "id": "account_transfer_7k9qe1ysdgqztnt63l7n",
              "amount": 100,
              "account_id": "account_in71c4amph0vgo2qllky",
              "currency": "USD",
              "destination_account_id": "account_uf16sut2ct5bevmq3eh",
              "destination_transaction_id": "transaction_j3itv8dtk5o8pw3p1xj4",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Move money into savings",
              "network": "account",
              "status": "complete",
              "template_id": "account_transfer_template_5nloco84eijzw0wcfhnn",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "approval": {
                "approved_at": "2020-01-31T23:59:59Z"
              },
              "cancellation": null,
              "type": "account_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account_transfer"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Account Transfer Lists"
      },
      "ach_transfer": {
        "type": "object",
        "title": "ACH Transfer",
        "description": "ACH transfers move funds between your Increase account and any other account accessible by the Automated Clearing House (ACH).",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "account_number": "987654321",
          "addendum": null,
          "amount": 100,
          "currency": "USD",
          "approval": {
            "approved_at": "2020-01-31T23:59:59Z"
          },
          "cancellation": null,
          "created_at": "2020-01-31T23:59:59Z",
          "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
          "id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
          "network": "ach",
          "notification_of_change": null,
          "return": null,
          "routing_number": "101050001",
          "statement_descriptor": "Statement descriptor",
          "status": "returned",
          "submission": {
            "trace_number": "058349238292834",
            "submitted_at": "2020-01-31T23:59:59Z"
          },
          "template_id": "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "company_descriptive_date": null,
          "company_discretionary_data": null,
          "company_entry_description": null,
          "company_name": "National Phonograph Company",
          "funding": "checking",
          "individual_id": null,
          "individual_name": "Ian Crease",
          "standard_entry_class_code": "corporate_credit_or_debit",
          "type": "ach_transfer"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Account to which the transfer belongs."
          },
          "account_number": {
            "type": "string",
            "description": "The destination account number."
          },
          "addendum": {
            "type": "string",
            "description": "Additional information that will be sent to the recipient.",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents. A positive amount indicates a credit transfer pushing funds to the receiving account. A negative amount indicates a debit transfer pulling funds from the receiving account."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For ACH transfers this is always equal to `usd`.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": {
              "approved_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              }
            },
            "required": [
              "approved_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": {
              "canceled_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              }
            },
            "required": [
              "canceled_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "external_account_id": {
            "type": "string",
            "description": "The identifier of the External Account the transfer was made to, if any.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The ACH transfer's identifier."
          },
          "network": {
            "type": "string",
            "enum": [
              "ach"
            ],
            "description": "The transfer's network."
          },
          "notification_of_change": {
            "type": "object",
            "title": "ACH Notification of Change",
            "description": "If the receiving bank accepts the transfer but notifies that future transfers should use different details, this will contain those details.",
            "example": {
              "created_at": "2020-01-31T23:59:59Z",
              "change_code": "incorrect_transaction_code",
              "corrected_data": "32"
            },
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the notification occurred."
              },
              "change_code": {
                "type": "string",
                "description": "The type of change that occurred."
              },
              "corrected_data": {
                "type": "string",
                "description": "The corrected data."
              }
            },
            "required": [
              "created_at",
              "change_code",
              "corrected_data"
            ],
            "nullable": true,
            "x-title-plural": "ACH Notification of Changes"
          },
          "return": {
            "type": "object",
            "title": "ACH Transfer Return",
            "description": "If your transfer is returned, this will contain details of the return.",
            "example": {
              "created_at": "2020-01-31T23:59:59Z",
              "return_reason_code": "insufficient_fund",
              "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
            },
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
              },
              "return_reason_code": {
                "type": "string",
                "enum": [
                  "insufficient_fund",
                  "no_account",
                  "account_closed",
                  "invalid_account_number_structure",
                  "account_frozen_entry_returned_per_ofac_instruction",
                  "credit_entry_refused_by_receiver",
                  "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                  "corporate_customer_advised_not_authorized",
                  "payment_stopped",
                  "non_transaction_account",
                  "uncollected_funds",
                  "routing_number_check_digit_error",
                  "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                  "amount_field_error",
                  "authorization_revoked_by_customer",
                  "invalid_ach_routing_number",
                  "file_record_edit_criteria",
                  "enr_invalid_individual_name",
                  "returned_per_odfi_request",
                  "addenda_error",
                  "limited_participation_dfi",
                  "incorrectly_coded_outbound_international_payment",
                  "other"
                ],
                "description": "Why the ACH Transfer was returned.",
                "x-enum-descriptions": [
                  "Insufficient funds in the source account.",
                  "The account does not exist or the receiving bank was unable to locate it.",
                  "The account is closed.",
                  "The account number is invalid at the receiving bank.",
                  "The account was frozen per the Office of Foreign Assets Control.",
                  "The receiving bank account refused a credit transfer.",
                  "The receiving bank rejected because of an incorrect Standard Entry Class code.",
                  "The corporate customer reversed the transfer.",
                  "The receiving bank stopped payment on this transfer.",
                  "The receiving bank account does not perform transfers.",
                  "The receiving bank account does not have enough available balance for the transfer.",
                  "The routing number is incorrect.",
                  "The customer reversed the transfer.",
                  "The amount field is incorrect or too large.",
                  "The customer who initiated the transfer revoked authorization.",
                  "The routing number is invalid.",
                  "The receiving bank is unable to process a field in the transfer.",
                  "The individual name field was invalid.",
                  "The originating financial institution reversed the transfer.",
                  "The addenda record is incorrect or missing.",
                  "The receiving bank's regulatory supervisor has limited their participation.",
                  "The outbound international ACH transfer was incorrect.",
                  "Any other ACH return reason."
                ]
              },
              "transfer_id": {
                "type": "string",
                "description": "The identifier of the ACH Transfer associated with this return."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the Tranasaction associated with this return."
              }
            },
            "required": [
              "created_at",
              "return_reason_code",
              "transfer_id",
              "transaction_id"
            ],
            "nullable": true,
            "x-title-plural": "ACH Transfer Returns"
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "statement_descriptor": {
            "type": "string",
            "description": "The descriptor that will show on the recipient's bank statement."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_approval",
              "canceled",
              "pending_submission",
              "submitted",
              "returned",
              "requires_attention",
              "rejected"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is pending approval.",
              "The transfer has been canceled.",
              "The transfer is pending submission.",
              "The transfer is complete.",
              "The transfer has been returned.",
              "The transfer requires your attention.",
              "The transfer has been rejected."
            ]
          },
          "submission": {
            "type": "object",
            "title": "ACH Transfer Submission",
            "description": "After the transfer is submitted to FedACH, this will contain supplemental details.",
            "example": {
              "trace_number": "058349238292834",
              "submitted_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "trace_number": {
                "type": "string",
                "description": "The trace number for the submission."
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the ACH transfer was sent to FedACH."
              }
            },
            "required": [
              "trace_number",
              "submitted_at"
            ],
            "nullable": true,
            "x-title-plural": "ACH Transfer Submissions"
          },
          "template_id": {
            "type": "string",
            "description": "If the transfer was created from a template, this will be the template's ID.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "company_descriptive_date": {
            "type": "string",
            "description": "The description of the date of the transfer.",
            "nullable": true
          },
          "company_discretionary_data": {
            "type": "string",
            "description": "The data you chose to associate with the transfer.",
            "nullable": true
          },
          "company_entry_description": {
            "type": "string",
            "description": "The description of the transfer you set to be shown to the recipient.",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name by which the recipient knows you.",
            "nullable": true
          },
          "funding": {
            "type": "string",
            "enum": [
              "checking",
              "savings"
            ],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account."
            ]
          },
          "individual_id": {
            "type": "string",
            "description": "Your identifer for the transfer recipient.",
            "nullable": true
          },
          "individual_name": {
            "type": "string",
            "description": "The name of the transfer recipient. This value is information and not verified by the recipient's bank.",
            "nullable": true
          },
          "standard_entry_class_code": {
            "type": "string",
            "enum": [
              "corporate_credit_or_debit",
              "prearranged_payments_and_deposit",
              "internet_initiated"
            ],
            "description": "The Standard Entry Class (SEC) code to use for the transfer.",
            "x-enum-descriptions": [
              "Corporate Credit and Debit (CCD).",
              "Prearranged Payments and Deposits (PPD).",
              "Internet Initiated (WEB)."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "ach_transfer"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `ach_transfer`."
          }
        },
        "required": [
          "account_id",
          "account_number",
          "addendum",
          "amount",
          "currency",
          "approval",
          "cancellation",
          "created_at",
          "external_account_id",
          "id",
          "network",
          "notification_of_change",
          "return",
          "routing_number",
          "statement_descriptor",
          "status",
          "submission",
          "template_id",
          "transaction_id",
          "company_descriptive_date",
          "company_discretionary_data",
          "company_entry_description",
          "company_name",
          "funding",
          "individual_id",
          "individual_name",
          "standard_entry_class_code",
          "type"
        ],
        "x-title-plural": "ACH Transfers",
        "x-tag": "ACH Transfers"
      },
      "ach_transfer_list": {
        "type": "object",
        "title": "ACH Transfer List",
        "description": "A list of ACH Transfer objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "account_number": "987654321",
              "addendum": null,
              "amount": 100,
              "currency": "USD",
              "approval": {
                "approved_at": "2020-01-31T23:59:59Z"
              },
              "cancellation": null,
              "created_at": "2020-01-31T23:59:59Z",
              "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
              "id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
              "network": "ach",
              "notification_of_change": null,
              "return": null,
              "routing_number": "101050001",
              "statement_descriptor": "Statement descriptor",
              "status": "returned",
              "submission": {
                "trace_number": "058349238292834",
                "submitted_at": "2020-01-31T23:59:59Z"
              },
              "template_id": "ach_transfer_template_wofoi8uhkjzi5rubh3kt",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "company_descriptive_date": null,
              "company_discretionary_data": null,
              "company_entry_description": null,
              "company_name": "National Phonograph Company",
              "funding": "checking",
              "individual_id": null,
              "individual_name": "Ian Crease",
              "standard_entry_class_code": "corporate_credit_or_debit",
              "type": "ach_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ach_transfer"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "ACH Transfer Lists"
      },
      "ach_prenotification": {
        "type": "object",
        "title": "ACH Prenotification",
        "description": "ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH).",
        "example": {
          "id": "ach_prenotification_ubjf9qqsxl3obbcn1u34",
          "account_number": "987654321",
          "addendum": null,
          "company_descriptive_date": null,
          "company_discretionary_data": null,
          "company_entry_description": null,
          "company_name": null,
          "credit_debit_indicator": null,
          "effective_date": null,
          "routing_number": "101050001",
          "prenotification_return": null,
          "created_at": "2020-01-31T23:59:59Z",
          "status": "submitted",
          "type": "ach_prenotification"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The ACH Prenotification's identifier."
          },
          "account_number": {
            "type": "string",
            "description": "The destination account number."
          },
          "addendum": {
            "type": "string",
            "description": "Additional information for the recipient.",
            "nullable": true
          },
          "company_descriptive_date": {
            "type": "string",
            "description": "The description of the date of the notification.",
            "nullable": true
          },
          "company_discretionary_data": {
            "type": "string",
            "description": "Optional data associated with the notification.",
            "nullable": true
          },
          "company_entry_description": {
            "type": "string",
            "description": "The description of the notification.",
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "description": "The name by which you know the company.",
            "nullable": true
          },
          "credit_debit_indicator": {
            "type": "string",
            "enum": [
              "credit",
              "debit"
            ],
            "description": "If the notification is for a future credit or debit.",
            "nullable": true,
            "x-enum-descriptions": [
              "The Prenotification is for an anticipated credit.",
              "The Prenotification is for an anticipated debit."
            ]
          },
          "effective_date": {
            "type": "string",
            "format": "date-time",
            "description": "The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
            "nullable": true
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "prenotification_return": {
            "type": "object",
            "title": "ACH Prenotification Return",
            "description": "If your prenotification is returned, this will contain details of the return.",
            "example": {
              "created_at": "2020-01-31T23:59:59Z",
              "return_reason_code": "corporate_customer_advised_not_authorized"
            },
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Prenotification was returned."
              },
              "return_reason_code": {
                "type": "string",
                "description": "Why the Prenotification was returned."
              }
            },
            "required": [
              "created_at",
              "return_reason_code"
            ],
            "nullable": true,
            "x-title-plural": "ACH Prenotification Returns"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_submitting",
              "requires_attention",
              "returned",
              "submitted"
            ],
            "description": "The lifecycle status of the ACH Prenotification.",
            "x-enum-descriptions": [
              "The Prenotification is pending submission.",
              "The Prenotification requires attention.",
              "The Prenotification has been returned.",
              "The Prentification is complete."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "ach_prenotification"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `ach_prenotification`."
          }
        },
        "required": [
          "id",
          "account_number",
          "addendum",
          "company_descriptive_date",
          "company_discretionary_data",
          "company_entry_description",
          "company_name",
          "credit_debit_indicator",
          "effective_date",
          "routing_number",
          "prenotification_return",
          "created_at",
          "status",
          "type"
        ],
        "x-title-plural": "ACH Prenotifications",
        "x-tag": "ACH Prenotifications"
      },
      "ach_prenotification_list": {
        "type": "object",
        "title": "ACH Prenotification List",
        "description": "A list of ACH Prenotification objects",
        "example": {
          "data": [
            {
              "id": "ach_prenotification_ubjf9qqsxl3obbcn1u34",
              "account_number": "987654321",
              "addendum": null,
              "company_descriptive_date": null,
              "company_discretionary_data": null,
              "company_entry_description": null,
              "company_name": null,
              "credit_debit_indicator": null,
              "effective_date": null,
              "routing_number": "101050001",
              "prenotification_return": null,
              "created_at": "2020-01-31T23:59:59Z",
              "status": "submitted",
              "type": "ach_prenotification"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ach_prenotification"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "ACH Prenotification Lists"
      },
      "inbound_ach_transfer_return": {
        "type": "object",
        "title": "Inbound ACH Transfer Return",
        "description": "If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.",
        "example": {
          "id": "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk",
          "class_name": "inbound_ach_transfer_return",
          "inbound_ach_transfer_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "transaction_id": null,
          "status": "submitted",
          "reason": "payment_stopped",
          "submission": {
            "trace_number": "058349238292834",
            "submitted_at": "2020-01-31T23:59:59Z"
          },
          "type": "inbound_ach_transfer_return"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Inbound ACH Transfer Return."
          },
          "inbound_ach_transfer_transaction_id": {
            "type": "string",
            "description": "The ID for the Transaction that is being returned."
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction refunding the transfer.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_submitting",
              "submitted"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer return is pending submission to the Federal Reserve.",
              "The transfer has been submitted to the Federal Reserve."
            ]
          },
          "reason": {
            "type": "string",
            "enum": [
              "authorization_revoked_by_customer",
              "payment_stopped",
              "customer_advised_unauthorized_improper_ineligible_or_incomplete",
              "representative_payee_deceased_or_unable_to_continue_in_that_capacity",
              "beneficiary_or_account_holder_deceased",
              "credit_entry_refused_by_receiver",
              "duplicate_entry",
              "corporate_customer_advised_not_authorized"
            ],
            "description": "The reason why this transfer will be returned. This is sent to the initiating bank.",
            "x-enum-descriptions": [
              "The customer no longer authorizes this transaction. The Nacha return code is R07.",
              "The customer asked for the payment to be stopped. This reason is only allowed for debits. The Nacha return code is R08.",
              "The customer advises that the debit was unauthorized. The Nacha return code is R10.",
              "The payee is deceased. The Nacha return code is R14.",
              "The account holder is deceased. The Nacha return code is R15.",
              "The customer refused a credit entry. This reason is only allowed for credits. The Nacha return code is R23.",
              "The account holder identified this transaction as a duplicate. The Nacha return code is R24.",
              "The corporate customer no longer authorizes this transaction. The Nacha return code is R29."
            ]
          },
          "submission": {
            "type": "object",
            "title": "Inbound ACH Transfer Return Submission",
            "description": "After the return is submitted to FedACH, this will contain supplemental details.",
            "example": {
              "trace_number": "058349238292834",
              "submitted_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "trace_number": {
                "type": "string",
                "description": "The trace number for the submission."
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When the ACH transfer return was sent to FedACH."
              }
            },
            "required": [
              "trace_number",
              "submitted_at"
            ],
            "nullable": true,
            "x-title-plural": "Inbound ACH Transfer Return Submissions"
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_ach_transfer_return"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`."
          }
        },
        "required": [
          "id",
          "inbound_ach_transfer_transaction_id",
          "transaction_id",
          "status",
          "reason",
          "submission",
          "type"
        ],
        "x-title-plural": "Inbound ACH Transfer Returns",
        "x-tag": "Inbound ACH Transfer Returns"
      },
      "inbound_ach_transfer_return_list": {
        "type": "object",
        "title": "Inbound ACH Transfer Return List",
        "description": "A list of Inbound ACH Transfer Return objects",
        "example": {
          "data": [
            {
              "id": "inbound_ach_transfer_return_fhcxk5huskwhmt7iz0gk",
              "class_name": "inbound_ach_transfer_return",
              "inbound_ach_transfer_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "transaction_id": null,
              "status": "submitted",
              "reason": "payment_stopped",
              "submission": {
                "trace_number": "058349238292834",
                "submitted_at": "2020-01-31T23:59:59Z"
              },
              "type": "inbound_ach_transfer_return"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inbound_ach_transfer_return"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Inbound ACH Transfer Return Lists"
      },
      "wire_transfer": {
        "type": "object",
        "title": "Wire Transfer",
        "description": "Wire transfers move funds between your Increase account and any other account accessible by Fedwire.",
        "example": {
          "id": "wire_transfer_5akynk7dqsq25qwk9q2u",
          "message_to_recipient": "Message to recipient",
          "amount": 100,
          "currency": "USD",
          "account_number": "987654321",
          "beneficiary_name": null,
          "beneficiary_address_line1": null,
          "beneficiary_address_line2": null,
          "beneficiary_address_line3": null,
          "beneficiary_financial_institution_identifier_type": null,
          "beneficiary_financial_institution_identifier": null,
          "beneficiary_financial_institution_name": null,
          "beneficiary_financial_institution_address_line1": null,
          "beneficiary_financial_institution_address_line2": null,
          "beneficiary_financial_institution_address_line3": null,
          "account_id": "account_in71c4amph0vgo2qllky",
          "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
          "routing_number": "101050001",
          "approval": {
            "approved_at": "2020-01-31T23:59:59Z"
          },
          "cancellation": null,
          "reversal": null,
          "created_at": "2020-01-31T23:59:59Z",
          "network": "wire",
          "status": "complete",
          "submission": null,
          "template_id": "wire_transfer_template_1brjk98vuwdd2er5o5sy",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "type": "wire_transfer"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The wire transfer's identifier."
          },
          "message_to_recipient": {
            "type": "string",
            "description": "The message that will show on the recipient's bank statement.",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "account_number": {
            "type": "string",
            "description": "The destination account number."
          },
          "beneficiary_name": {
            "type": "string",
            "description": "The beneficiary's name.",
            "nullable": true
          },
          "beneficiary_address_line1": {
            "type": "string",
            "description": "The beneficiary's address line 1.",
            "nullable": true
          },
          "beneficiary_address_line2": {
            "type": "string",
            "description": "The beneficiary's address line 2.",
            "nullable": true
          },
          "beneficiary_address_line3": {
            "type": "string",
            "description": "The beneficiary's address line 3.",
            "nullable": true
          },
          "account_id": {
            "type": "string",
            "description": "The Account to which the transfer belongs."
          },
          "external_account_id": {
            "type": "string",
            "description": "The identifier of the External Account the transfer was made to, if any.",
            "nullable": true
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "approval": {
            "type": "object",
            "title": "Transfer Approval",
            "description": "If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.",
            "example": {
              "approved_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "approved_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved."
              }
            },
            "required": [
              "approved_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Approvals"
          },
          "cancellation": {
            "type": "object",
            "title": "Transfer Cancellation",
            "description": "If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.",
            "example": {
              "canceled_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "canceled_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled."
              }
            },
            "required": [
              "canceled_at"
            ],
            "nullable": true,
            "x-title-plural": "Transfer Cancellations"
          },
          "reversal": {
            "type": "object",
            "title": "Inbound Wire Reversal",
            "description": "If your transfer is reversed, this will contain details of the reversal.",
            "example": {
              "amount": 12345,
              "description": "Inbound wire reversal 2022021100335128",
              "input_cycle_date": "2022-02-11",
              "input_sequence_number": "11023",
              "input_source": "B6B7HU2R",
              "input_message_accountability_data": "20220211B6B7HU2R011023",
              "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
              "previous_message_input_cycle_date": "2022-02-10",
              "previous_message_input_sequence_number": "3",
              "previous_message_input_source": "MMQFMP0P",
              "receiver_financial_institution_information": null,
              "financial_institution_to_financial_institution_information": null
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount that was reversed."
              },
              "description": {
                "type": "string",
                "description": "The description on the reversal message from Fedwire."
              },
              "input_cycle_date": {
                "type": "string",
                "format": "date",
                "description": "The Fedwire cycle date for the wire reversal."
              },
              "input_sequence_number": {
                "type": "string",
                "description": "The Fedwire sequence number."
              },
              "input_source": {
                "type": "string",
                "description": "The Fedwire input source identifier."
              },
              "input_message_accountability_data": {
                "type": "string",
                "description": "The Fedwire transaction identifier."
              },
              "previous_message_input_message_accountability_data": {
                "type": "string",
                "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
              },
              "previous_message_input_cycle_date": {
                "type": "string",
                "format": "date",
                "description": "The Fedwire cycle date for the wire transfer that was reversed."
              },
              "previous_message_input_sequence_number": {
                "type": "string",
                "description": "The Fedwire sequence number for the wire transfer that was reversed."
              },
              "previous_message_input_source": {
                "type": "string",
                "description": "The Fedwire input source identifier for the wire transfer that was reversed."
              },
              "receiver_financial_institution_information": {
                "type": "string",
                "description": "Information included in the wire reversal for the receiving financial institution.",
                "nullable": true
              },
              "financial_institution_to_financial_institution_information": {
                "type": "string",
                "description": "Additional financial institution information included in the wire reversal.",
                "nullable": true
              }
            },
            "required": [
              "amount",
              "description",
              "input_cycle_date",
              "input_sequence_number",
              "input_source",
              "input_message_accountability_data",
              "previous_message_input_message_accountability_data",
              "previous_message_input_cycle_date",
              "previous_message_input_sequence_number",
              "previous_message_input_source",
              "receiver_financial_institution_information",
              "financial_institution_to_financial_institution_information"
            ],
            "nullable": true,
            "x-title-plural": "Inbound Wire Reversals"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "network": {
            "type": "string",
            "enum": [
              "wire"
            ],
            "description": "The transfer's network."
          },
          "status": {
            "type": "string",
            "enum": [
              "canceled",
              "requires_attention",
              "pending_approval",
              "rejected",
              "reversed",
              "complete",
              "pending_creating"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer has been canceled.",
              "The transfer requires your attention.",
              "The transfer is pending approval.",
              "The transfer has been rejected.",
              "The transfer has been reversed.",
              "The transfer is complete.",
              "The transfer is pending creation."
            ]
          },
          "submission": {
            "type": "object",
            "title": "Wire Transfer Submission",
            "description": "After the transfer is submitted to Fedwire, this will contain supplemental details.",
            "example": {
              "input_message_accountability_data": "20220118MMQFMP0P000002",
              "submitted_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "input_message_accountability_data": {
                "type": "string",
                "description": "The accountability data for the submission."
              },
              "submitted_at": {
                "type": "string",
                "format": "date-time",
                "description": "When this wire transfer was submitted to Fedwire."
              }
            },
            "required": [
              "input_message_accountability_data",
              "submitted_at"
            ],
            "nullable": true,
            "x-title-plural": "Wire Transfer Submissions"
          },
          "template_id": {
            "type": "string",
            "description": "If the transfer was created from a template, this will be the template's ID.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction funding the transfer.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "wire_transfer"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `wire_transfer`."
          }
        },
        "required": [
          "id",
          "message_to_recipient",
          "amount",
          "currency",
          "account_number",
          "beneficiary_name",
          "beneficiary_address_line1",
          "beneficiary_address_line2",
          "beneficiary_address_line3",
          "account_id",
          "external_account_id",
          "routing_number",
          "approval",
          "cancellation",
          "reversal",
          "created_at",
          "network",
          "status",
          "submission",
          "template_id",
          "transaction_id",
          "type"
        ],
        "x-title-plural": "Wire Transfers",
        "x-tag": "Wire Transfers"
      },
      "wire_transfer_list": {
        "type": "object",
        "title": "Wire Transfer List",
        "description": "A list of Wire Transfer objects",
        "example": {
          "data": [
            {
              "id": "wire_transfer_5akynk7dqsq25qwk9q2u",
              "message_to_recipient": "Message to recipient",
              "amount": 100,
              "currency": "USD",
              "account_number": "987654321",
              "beneficiary_name": null,
              "beneficiary_address_line1": null,
              "beneficiary_address_line2": null,
              "beneficiary_address_line3": null,
              "beneficiary_financial_institution_identifier_type": null,
              "beneficiary_financial_institution_identifier": null,
              "beneficiary_financial_institution_name": null,
              "beneficiary_financial_institution_address_line1": null,
              "beneficiary_financial_institution_address_line2": null,
              "beneficiary_financial_institution_address_line3": null,
              "account_id": "account_in71c4amph0vgo2qllky",
              "external_account_id": "external_account_ukk55lr923a3ac0pp7iv",
              "routing_number": "101050001",
              "approval": {
                "approved_at": "2020-01-31T23:59:59Z"
              },
              "cancellation": null,
              "reversal": null,
              "created_at": "2020-01-31T23:59:59Z",
              "network": "wire",
              "status": "complete",
              "submission": null,
              "template_id": "wire_transfer_template_1brjk98vuwdd2er5o5sy",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "type": "wire_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/wire_transfer"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Wire Transfer Lists"
      },
      "wire_drawdown_request": {
        "type": "object",
        "title": "Wire Drawdown Request",
        "description": "Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
        "example": {
          "type": "wire_drawdown_request",
          "id": "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
          "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "recipient_account_number": "987654321",
          "recipient_routing_number": "101050001",
          "amount": 10000,
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "recipient_name": "Ian Crease",
          "recipient_address_line1": "33 Liberty Street",
          "recipient_address_line2": "New York, NY, 10045",
          "recipient_address_line3": null,
          "submission": {
            "input_message_accountability_data": "20220118MMQFMP0P000003"
          },
          "fulfillment_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "status": "fulfilled"
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "wire_drawdown_request"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `wire_drawdown_request`."
          },
          "id": {
            "type": "string",
            "description": "The Wire drawdown request identifier."
          },
          "account_number_id": {
            "type": "string",
            "description": "The Account Number to which the recipient of this request is being requested to send funds."
          },
          "recipient_account_number": {
            "type": "string",
            "description": "The drawdown request's recipient's account number."
          },
          "recipient_routing_number": {
            "type": "string",
            "description": "The drawdown request's recipient's routing number."
          },
          "amount": {
            "type": "integer",
            "description": "The amount being requested in cents."
          },
          "currency": {
            "type": "string",
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "description": "The message the recipient will see as part of the drawdown request."
          },
          "recipient_name": {
            "type": "string",
            "description": "The drawdown request's recipient's name.",
            "nullable": true
          },
          "recipient_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "recipient_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "recipient_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's recipient's address.",
            "nullable": true
          },
          "submission": {
            "type": "object",
            "title": "Wire Drawdown Request Submission",
            "description": "After the drawdown request is submitted to Fedwire, this will contain supplemental details.",
            "example": {
              "input_message_accountability_data": "20220118MMQFMP0P000003"
            },
            "properties": {
              "input_message_accountability_data": {
                "type": "string",
                "description": "The input message accountability data (IMAD) uniquely identifying the submission with Fedwire."
              }
            },
            "required": [
              "input_message_accountability_data"
            ],
            "nullable": true,
            "x-title-plural": "Wire Drawdown Request Submissions"
          },
          "fulfillment_transaction_id": {
            "type": "string",
            "description": "If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_submission",
              "pending_response",
              "fulfilled",
              "refused"
            ],
            "description": "The lifecycle status of the drawdown request.",
            "x-enum-descriptions": [
              "The drawdown request is queued to be submitted to Fedwire.",
              "The drawdown request has been sent and the recipient should respond in some way.",
              "The drawdown request has been fulfilled by the recipient.",
              "The drawdown request has been refused by the recipient."
            ]
          }
        },
        "required": [
          "type",
          "id",
          "account_number_id",
          "recipient_account_number",
          "recipient_routing_number",
          "amount",
          "currency",
          "message_to_recipient",
          "recipient_name",
          "recipient_address_line1",
          "recipient_address_line2",
          "recipient_address_line3",
          "submission",
          "fulfillment_transaction_id",
          "status"
        ],
        "x-title-plural": "Wire Drawdown Requests",
        "x-tag": "Wire Drawdown Requests"
      },
      "wire_drawdown_request_list": {
        "type": "object",
        "title": "Wire Drawdown Request List",
        "description": "A list of Wire Drawdown Request objects",
        "example": {
          "data": [
            {
              "type": "wire_drawdown_request",
              "id": "wire_drawdown_request_q6lmocus3glo0lr2bfv3",
              "account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "recipient_account_number": "987654321",
              "recipient_routing_number": "101050001",
              "amount": 10000,
              "currency": "USD",
              "message_to_recipient": "Invoice 29582",
              "recipient_name": "Ian Crease",
              "recipient_address_line1": "33 Liberty Street",
              "recipient_address_line2": "New York, NY, 10045",
              "recipient_address_line3": null,
              "submission": {
                "input_message_accountability_data": "20220118MMQFMP0P000003"
              },
              "fulfillment_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "status": "fulfilled"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/wire_drawdown_request"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Wire Drawdown Request Lists"
      },
      "inbound_wire_drawdown_request_list": {
        "type": "object",
        "title": "Inbound Wire Drawdown Request List",
        "description": "A list of Inbound Wire Drawdown Request objects",
        "example": {
          "data": [
            {
              "type": "inbound_wire_drawdown_request",
              "id": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
              "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
              "originator_account_number": "987654321",
              "originator_routing_number": "101050001",
              "beneficiary_account_number": "987654321",
              "beneficiary_routing_number": "101050001",
              "amount": 10000,
              "currency": "USD",
              "message_to_recipient": "Invoice 29582",
              "originator_to_beneficiary_information_line1": null,
              "originator_to_beneficiary_information_line2": null,
              "originator_to_beneficiary_information_line3": null,
              "originator_to_beneficiary_information_line4": null,
              "originator_name": "Ian Crease",
              "originator_address_line1": "33 Liberty Street",
              "originator_address_line2": "New York, NY, 10045",
              "originator_address_line3": null,
              "beneficiary_name": "Ian Crease",
              "beneficiary_address_line1": "33 Liberty Street",
              "beneficiary_address_line2": "New York, NY, 10045",
              "beneficiary_address_line3": null
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inbound_wire_drawdown_request"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Inbound Wire Drawdown Request Lists"
      },
      "inbound_wire_drawdown_request": {
        "type": "object",
        "title": "Inbound Wire Drawdown Request",
        "description": "Inbound wire drawdown requests are requests from someone else to send them a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.",
        "example": {
          "type": "inbound_wire_drawdown_request",
          "id": "inbound_wire_drawdown_request_u5a92ikqhz1ytphn799e",
          "recipient_account_number_id": "account_number_v18nkfqm6afpsrvy82b2",
          "originator_account_number": "987654321",
          "originator_routing_number": "101050001",
          "beneficiary_account_number": "987654321",
          "beneficiary_routing_number": "101050001",
          "amount": 10000,
          "currency": "USD",
          "message_to_recipient": "Invoice 29582",
          "originator_to_beneficiary_information_line1": null,
          "originator_to_beneficiary_information_line2": null,
          "originator_to_beneficiary_information_line3": null,
          "originator_to_beneficiary_information_line4": null,
          "originator_name": "Ian Crease",
          "originator_address_line1": "33 Liberty Street",
          "originator_address_line2": "New York, NY, 10045",
          "originator_address_line3": null,
          "beneficiary_name": "Ian Crease",
          "beneficiary_address_line1": "33 Liberty Street",
          "beneficiary_address_line2": "New York, NY, 10045",
          "beneficiary_address_line3": null
        },
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "inbound_wire_drawdown_request"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_wire_drawdown_request`."
          },
          "id": {
            "type": "string",
            "description": "The Wire drawdown request identifier."
          },
          "recipient_account_number_id": {
            "type": "string",
            "description": "The Account Number from which the recipient of this request is being requested to send funds."
          },
          "originator_account_number": {
            "type": "string",
            "description": "The drawdown request's originator's account number."
          },
          "originator_routing_number": {
            "type": "string",
            "description": "The drawdown request's originator's routing number."
          },
          "beneficiary_account_number": {
            "type": "string",
            "description": "The drawdown request's beneficiary's account number."
          },
          "beneficiary_routing_number": {
            "type": "string",
            "description": "The drawdown request's beneficiary's routing number."
          },
          "amount": {
            "type": "integer",
            "description": "The amount being requested in cents."
          },
          "currency": {
            "type": "string",
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\"."
          },
          "message_to_recipient": {
            "type": "string",
            "description": "A message from the drawdown request's originator.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line1": {
            "type": "string",
            "description": "Line 1 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line2": {
            "type": "string",
            "description": "Line 2 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line3": {
            "type": "string",
            "description": "Line 3 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_to_beneficiary_information_line4": {
            "type": "string",
            "description": "Line 4 of the information conveyed from the originator of the message to the beneficiary.",
            "nullable": true
          },
          "originator_name": {
            "type": "string",
            "description": "The drawdown request's originator's name.",
            "nullable": true
          },
          "originator_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's originator's address.",
            "nullable": true
          },
          "originator_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's originator's address.",
            "nullable": true
          },
          "originator_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's originator's address.",
            "nullable": true
          },
          "beneficiary_name": {
            "type": "string",
            "description": "The drawdown request's beneficiary's name.",
            "nullable": true
          },
          "beneficiary_address_line1": {
            "type": "string",
            "description": "Line 1 of the drawdown request's beneficiary's address.",
            "nullable": true
          },
          "beneficiary_address_line2": {
            "type": "string",
            "description": "Line 2 of the drawdown request's beneficiary's address.",
            "nullable": true
          },
          "beneficiary_address_line3": {
            "type": "string",
            "description": "Line 3 of the drawdown request's beneficiary's address.",
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "recipient_account_number_id",
          "originator_account_number",
          "originator_routing_number",
          "beneficiary_account_number",
          "beneficiary_routing_number",
          "amount",
          "currency",
          "message_to_recipient",
          "originator_to_beneficiary_information_line1",
          "originator_to_beneficiary_information_line2",
          "originator_to_beneficiary_information_line3",
          "originator_to_beneficiary_information_line4",
          "originator_name",
          "originator_address_line1",
          "originator_address_line2",
          "originator_address_line3",
          "beneficiary_name",
          "beneficiary_address_line1",
          "beneficiary_address_line2",
          "beneficiary_address_line3"
        ],
        "x-title-plural": "Inbound Wire Drawdown Requests",
        "x-tag": "Inbound Wire Drawdown Requests"
      },
      "check_transfer": {
        "type": "object",
        "title": "Check Transfer",
        "description": "Check Transfers move funds from your Increase account by mailing a physical check.",
        "example": {
          "account_id": "account_in71c4amph0vgo2qllky",
          "address_line1": "33 Liberty Street",
          "address_line2": null,
          "address_city": "New York",
          "address_state": "NY",
          "address_zip": "10045",
          "return_address": null,
          "amount": 1000,
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "id": "check_transfer_30b43acfu9vw8fyc4f5",
          "mailed_at": "2020-01-31T23:59:59Z",
          "message": "Invoice 29582",
          "note": null,
          "recipient_name": "Ian Crease",
          "status": "mailed",
          "submitted_at": "2020-01-31T23:59:59Z",
          "submission": {
            "check_number": "130670"
          },
          "template_id": "check_transfer_template_tr96ajellz6awlki022o",
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "stop_payment_request": null,
          "deposit": null,
          "return_details": {
            "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
            "file_id": null,
            "reason": "mail_delivery_failure"
          },
          "type": "check_transfer"
        },
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The identifier of the Account from which funds will be transferred."
          },
          "address_line1": {
            "type": "string",
            "description": "The street address of the check's destination."
          },
          "address_line2": {
            "type": "string",
            "description": "The second line of the address of the check's destination.",
            "nullable": true
          },
          "address_city": {
            "type": "string",
            "description": "The city of the check's destination."
          },
          "address_state": {
            "type": "string",
            "description": "The state of the check's destination."
          },
          "address_zip": {
            "type": "string",
            "description": "The postal code of the check's destination."
          },
          "return_address": {
            "type": "object",
            "title": "Return Address",
            "description": "The return address to be printed on the check.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the address.",
                "nullable": true
              },
              "line1": {
                "type": "string",
                "description": "The first line of the address.",
                "nullable": true
              },
              "line2": {
                "type": "string",
                "description": "The second line of the address.",
                "nullable": true
              },
              "city": {
                "type": "string",
                "description": "The city of the address.",
                "nullable": true
              },
              "state": {
                "type": "string",
                "description": "The US state of the address.",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "description": "The postal code of the address.",
                "nullable": true
              }
            },
            "required": [
              "name",
              "line1",
              "line2",
              "city",
              "state",
              "zip"
            ],
            "nullable": true,
            "x-title-plural": "Return Addresss"
          },
          "amount": {
            "type": "integer",
            "description": "The transfer amount in USD cents."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "id": {
            "type": "string",
            "description": "The Check transfer's identifier."
          },
          "mailed_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was mailed.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "The descriptor that will be printed on the memo field on the check."
          },
          "note": {
            "type": "string",
            "description": "The descriptor that will be printed on the letter included with the check.",
            "nullable": true
          },
          "recipient_name": {
            "type": "string",
            "description": "The name that will be printed on the check."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending_approval",
              "pending_submission",
              "submitting",
              "submitted",
              "pending_mailing",
              "mailed",
              "canceled",
              "deposited",
              "stopped",
              "returned",
              "rejected",
              "requires_attention"
            ],
            "description": "The lifecycle status of the transfer.",
            "x-enum-descriptions": [
              "The transfer is awaiting approval.",
              "The transfer is pending submission.",
              "The transfer is being submitted.",
              "The transfer is complete.",
              "The check is queued for mailing.",
              "The check has been mailed.",
              "The transfer has been canceled.",
              "The check has been deposited.",
              "A stop-payment was requested for this check.",
              "The transfer has been returned.",
              "The transfer has been rejected.",
              "The transfer requires your attention."
            ]
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was submitted.",
            "nullable": true
          },
          "submission": {
            "type": "object",
            "title": "Check Transfer Submission",
            "description": "After the transfer is submitted, this will contain supplemental details.",
            "example": {
              "check_number": "130670"
            },
            "properties": {
              "check_number": {
                "type": "string",
                "description": "The identitying number of the check."
              }
            },
            "required": [
              "check_number"
            ],
            "nullable": true,
            "x-title-plural": "Check Transfer Submissions"
          },
          "template_id": {
            "type": "string",
            "description": "If the transfer was created from a template, this will be the template's ID.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the transaction caused by the transfer.",
            "nullable": true
          },
          "stop_payment_request": {
            "type": "object",
            "title": "Check Transfer Stop Payment Request",
            "description": "After a stop-payment is requested on the check, this will contain supplemental details.",
            "example": {
              "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "requested_at": "2020-01-31T23:59:59Z",
              "type": "check_transfer_stop_payment_request"
            },
            "properties": {
              "transfer_id": {
                "type": "string",
                "description": "The ID of the check transfer that was stopped."
              },
              "transaction_id": {
                "type": "string",
                "description": "The transaction ID of the corresponding credit transaction."
              },
              "requested_at": {
                "type": "string",
                "format": "date-time",
                "description": "The time the stop-payment was requested."
              },
              "type": {
                "type": "string",
                "enum": [
                  "check_transfer_stop_payment_request"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
              }
            },
            "required": [
              "transfer_id",
              "transaction_id",
              "requested_at",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Check Transfer Stop Payment Requests"
          },
          "deposit": {
            "type": "object",
            "title": "Check Transfer Deposit",
            "description": "After a check transfer is deposited, this will contain supplemental details.",
            "example": {
              "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "back_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "type": "check_transfer_deposit"
            },
            "properties": {
              "front_image_file_id": {
                "type": "string",
                "description": "The ID for the File containing the image of the front of the check.",
                "nullable": true
              },
              "back_image_file_id": {
                "type": "string",
                "description": "The ID for the File containing the image of the rear of the check.",
                "nullable": true
              },
              "type": {
                "type": "string",
                "enum": [
                  "check_transfer_deposit"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `check_transfer_deposit`."
              }
            },
            "required": [
              "front_image_file_id",
              "back_image_file_id",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Check Transfer Deposits"
          },
          "return_details": {
            "type": "object",
            "title": "Check Transfer Return",
            "description": "After a check transfer is returned, this will contain supplemental details. A check transfer is returned when the receiver mails a never deposited check back to the bank printed on the check.",
            "example": {
              "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
              "file_id": null,
              "reason": "mail_delivery_failure"
            },
            "properties": {
              "transfer_id": {
                "type": "string",
                "description": "The identifier of the returned Check Transfer."
              },
              "file_id": {
                "type": "string",
                "description": "If available, a document with additional information about the return.",
                "nullable": true
              },
              "reason": {
                "type": "string",
                "enum": [
                  "mail_delivery_failure",
                  "refused_by_recipient"
                ],
                "description": "The reason why the check was returned.",
                "x-enum-descriptions": [
                  "Mail delivery failed and the check was returned to sender.",
                  "The check arrived and the recipient refused to deposit it."
                ]
              }
            },
            "required": [
              "transfer_id",
              "file_id",
              "reason"
            ],
            "nullable": true,
            "x-title-plural": "Check Transfer Returns"
          },
          "type": {
            "type": "string",
            "enum": [
              "check_transfer"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `check_transfer`."
          }
        },
        "required": [
          "account_id",
          "address_line1",
          "address_line2",
          "address_city",
          "address_state",
          "address_zip",
          "return_address",
          "amount",
          "created_at",
          "currency",
          "id",
          "mailed_at",
          "message",
          "note",
          "recipient_name",
          "status",
          "submitted_at",
          "submission",
          "template_id",
          "transaction_id",
          "stop_payment_request",
          "deposit",
          "return_details",
          "type"
        ],
        "x-title-plural": "Check Transfers",
        "x-tag": "Check Transfers"
      },
      "check_transfer_list": {
        "type": "object",
        "title": "Check Transfer List",
        "description": "A list of Check Transfer objects",
        "example": {
          "data": [
            {
              "account_id": "account_in71c4amph0vgo2qllky",
              "address_line1": "33 Liberty Street",
              "address_line2": null,
              "address_city": "New York",
              "address_state": "NY",
              "address_zip": "10045",
              "return_address": null,
              "amount": 1000,
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "id": "check_transfer_30b43acfu9vw8fyc4f5",
              "mailed_at": "2020-01-31T23:59:59Z",
              "message": "Invoice 29582",
              "note": null,
              "recipient_name": "Ian Crease",
              "status": "mailed",
              "submitted_at": "2020-01-31T23:59:59Z",
              "submission": {
                "check_number": "130670"
              },
              "template_id": "check_transfer_template_tr96ajellz6awlki022o",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "stop_payment_request": null,
              "deposit": null,
              "return_details": {
                "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                "file_id": null,
                "reason": "mail_delivery_failure"
              },
              "type": "check_transfer"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/check_transfer"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Check Transfer Lists"
      },
      "check_deposit": {
        "type": "object",
        "title": "Check Deposit",
        "description": "Check Deposits allow you to deposit images of paper checks into your account.",
        "example": {
          "id": "check_deposit_f06n9gpg7sxn8t19lfc1",
          "amount": 1000,
          "created_at": "2020-01-31T23:59:59Z",
          "currency": "USD",
          "status": "submitted",
          "account_id": "account_in71c4amph0vgo2qllky",
          "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
          "back_image_file_id": null,
          "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
          "deposit_acceptance": null,
          "deposit_rejection": null,
          "deposit_return": null,
          "type": "check_deposit"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The deposit's identifier."
          },
          "amount": {
            "type": "integer",
            "description": "The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
          },
          "currency": {
            "type": "string",
            "enum": [
              "CAD",
              "CHF",
              "EUR",
              "GBP",
              "JPY",
              "USD"
            ],
            "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.",
            "x-enum-descriptions": [
              "Canadian Dollar (CAD)",
              "Swiss Franc (CHF)",
              "Euro (EUR)",
              "British Pound (GBP)",
              "Japanese Yen (JPY)",
              "US Dollar (USD)"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "submitted",
              "rejected",
              "returned"
            ],
            "description": "The status of the Check Deposit.",
            "x-enum-descriptions": [
              "The Check Deposit is pending review.",
              "The Check Deposit has been deposited.",
              "The Check Deposit has been rejected.",
              "The Check Deposit has been returned."
            ]
          },
          "account_id": {
            "type": "string",
            "description": "The Account the check was deposited into."
          },
          "front_image_file_id": {
            "type": "string",
            "description": "The ID for the File containing the image of the front of the check."
          },
          "back_image_file_id": {
            "type": "string",
            "description": "The ID for the File containing the image of the back of the check.",
            "nullable": true
          },
          "transaction_id": {
            "type": "string",
            "description": "The ID for the Transaction created by the deposit.",
            "nullable": true
          },
          "deposit_acceptance": {
            "type": "object",
            "title": "Check Deposit Acceptance",
            "description": "If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.",
            "example": {
              "amount": 100,
              "currency": "USD",
              "account_number": "987654321",
              "routing_number": "101050001",
              "auxiliary_on_us": "101",
              "serial_number": null,
              "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "account_number": {
                "type": "string",
                "description": "The account number printed on the check."
              },
              "routing_number": {
                "type": "string",
                "description": "The routing number printed on the check."
              },
              "auxiliary_on_us": {
                "type": "string",
                "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                "nullable": true
              },
              "serial_number": {
                "type": "string",
                "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                "nullable": true
              },
              "check_deposit_id": {
                "type": "string",
                "description": "The ID of the Check Deposit that was accepted."
              }
            },
            "required": [
              "amount",
              "currency",
              "account_number",
              "routing_number",
              "auxiliary_on_us",
              "serial_number",
              "check_deposit_id"
            ],
            "nullable": true,
            "x-title-plural": "Check Deposit Acceptances"
          },
          "deposit_rejection": {
            "type": "object",
            "title": "Check Deposit Rejection",
            "description": "If your deposit is rejected by Increase, this will contain details as to why it was rejected.",
            "example": {
              "amount": 1750,
              "currency": "USD",
              "reason": "incomplete_image",
              "rejected_at": "2020-01-31T23:59:59Z"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "reason": {
                "type": "string",
                "enum": [
                  "incomplete_image",
                  "duplicate",
                  "poor_image_quality",
                  "incorrect_amount",
                  "incorrect_recipient",
                  "not_eligible_for_mobile_deposit",
                  "unknown"
                ],
                "description": "Why the check deposit was rejected.",
                "x-enum-descriptions": [
                  "The check's image is incomplete.",
                  "This is a duplicate check submission.",
                  "This check has poor image quality.",
                  "The check was deposited with the incorrect amount.",
                  "The check is made out to someone other than the account holder.",
                  "This check was not eligible for mobile deposit.",
                  "The check was rejected for an unknown reason."
                ]
              },
              "rejected_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected."
              }
            },
            "required": [
              "amount",
              "currency",
              "reason",
              "rejected_at"
            ],
            "nullable": true,
            "x-title-plural": "Check Deposit Rejections"
          },
          "deposit_return": {
            "type": "object",
            "title": "Check Deposit Return",
            "description": "If your deposit is returned, this will contain details as to why it was returned.",
            "example": {
              "amount": 100,
              "returned_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "return_reason": "insufficient_funds"
            },
            "properties": {
              "amount": {
                "type": "integer",
                "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
              },
              "returned_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "check_deposit_id": {
                "type": "string",
                "description": "The identifier of the Check Deposit that was returned."
              },
              "transaction_id": {
                "type": "string",
                "description": "The identifier of the transaction that reversed the original check deposit transaction."
              },
              "return_reason": {
                "type": "string",
                "enum": [
                  "ach_conversion_not_supported",
                  "closed_account",
                  "duplicate_submission",
                  "insufficient_funds",
                  "no_account",
                  "not_authorized",
                  "stale_dated",
                  "stop_payment",
                  "unknown_reason",
                  "unmatched_details",
                  "unreadable_image"
                ],
                "description": "",
                "x-enum-descriptions": [
                  "The check doesn't allow ACH conversion.",
                  "The account is closed.",
                  "The check has already been deposited.",
                  "Insufficient funds",
                  "No account was found matching the check details.",
                  "The check was not authorized.",
                  "The check is too old.",
                  "The payment has been stopped by the account holder.",
                  "The reason for the return is unknown.",
                  "The image doesn't match the details submitted.",
                  "The image could not be read."
                ]
              }
            },
            "required": [
              "amount",
              "returned_at",
              "currency",
              "check_deposit_id",
              "transaction_id",
              "return_reason"
            ],
            "nullable": true,
            "x-title-plural": "Check Deposit Returns"
          },
          "type": {
            "type": "string",
            "enum": [
              "check_deposit"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `check_deposit`."
          }
        },
        "required": [
          "id",
          "amount",
          "created_at",
          "currency",
          "status",
          "account_id",
          "front_image_file_id",
          "back_image_file_id",
          "transaction_id",
          "deposit_acceptance",
          "deposit_rejection",
          "deposit_return",
          "type"
        ],
        "x-title-plural": "Check Deposits",
        "x-tag": "Check Deposits"
      },
      "check_deposit_list": {
        "type": "object",
        "title": "Check Deposit List",
        "description": "A list of Check Deposit objects",
        "example": {
          "data": [
            {
              "id": "check_deposit_f06n9gpg7sxn8t19lfc1",
              "amount": 1000,
              "created_at": "2020-01-31T23:59:59Z",
              "currency": "USD",
              "status": "submitted",
              "account_id": "account_in71c4amph0vgo2qllky",
              "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
              "back_image_file_id": null,
              "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
              "deposit_acceptance": null,
              "deposit_rejection": null,
              "deposit_return": null,
              "type": "check_deposit"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/check_deposit"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Check Deposit Lists"
      },
      "routing_number_list": {
        "type": "object",
        "title": "Routing Number List",
        "description": "A list of Routing Number objects",
        "example": {
          "data": [
            {
              "name": "Chase",
              "routing_number": "021000021",
              "type": "routing_number",
              "ach_transfers": "supported",
              "real_time_payments_transfers": "supported",
              "wire_transfers": "supported"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/routing_number"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Routing Number Lists"
      },
      "external_account": {
        "type": "object",
        "title": "External Account",
        "description": "External Accounts represent accounts at financial institutions other than Increase. You can use this API to store their details for reuse.",
        "example": {
          "id": "external_account_ukk55lr923a3ac0pp7iv",
          "created_at": "2020-01-31T23:59:59Z",
          "description": "Landlord",
          "status": "active",
          "routing_number": "101050001",
          "account_number": "987654321",
          "funding": "checking",
          "verification_status": "verified",
          "type": "external_account"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The External Account's identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the External Account was created."
          },
          "description": {
            "type": "string",
            "description": "The External Account's description for display purposes."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "archived"
            ],
            "description": "The External Account's status.",
            "x-enum-descriptions": [
              "The External Acccount is active.",
              "The External Account is archived and won't appear in the dashboard."
            ]
          },
          "routing_number": {
            "type": "string",
            "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
          },
          "account_number": {
            "type": "string",
            "description": "The destination account number."
          },
          "funding": {
            "type": "string",
            "enum": [
              "checking",
              "savings",
              "other"
            ],
            "description": "The type of the account to which the transfer will be sent.",
            "x-enum-descriptions": [
              "A checking account.",
              "A savings account.",
              "A different type of account."
            ]
          },
          "verification_status": {
            "type": "string",
            "enum": [
              "unverified",
              "pending",
              "verified"
            ],
            "description": "If you have verified ownership of the External Account.",
            "x-enum-descriptions": [
              "The External Account has not been verified.",
              "The External Account is in the process of being verified.",
              "The External Account is verified."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "external_account"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `external_account`."
          }
        },
        "required": [
          "id",
          "created_at",
          "description",
          "status",
          "routing_number",
          "account_number",
          "funding",
          "verification_status",
          "type"
        ],
        "x-title-plural": "External Accounts",
        "x-tag": "External Accounts"
      },
      "external_account_list": {
        "type": "object",
        "title": "External Account List",
        "description": "A list of External Account objects",
        "example": {
          "data": [
            {
              "id": "external_account_ukk55lr923a3ac0pp7iv",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Landlord",
              "status": "active",
              "routing_number": "101050001",
              "account_number": "987654321",
              "funding": "checking",
              "verification_status": "verified",
              "type": "external_account"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/external_account"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "External Account Lists"
      },
      "entity": {
        "type": "object",
        "title": "Entity",
        "description": "Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.",
        "example": {
          "id": "entity_n8y8tnk2p9339ti393yi",
          "structure": "corporation",
          "corporation": {
            "name": "National Phonograph Company",
            "website": "https://example.com",
            "tax_identifier": "602214076",
            "incorporation_state": "NY",
            "address": {
              "line1": "33 Liberty Street",
              "line2": null,
              "city": "New York",
              "state": "NY",
              "zip": "10045"
            },
            "beneficial_owners": [
              {
                "individual": {
                  "name": "Ian Crease",
                  "date_of_birth": "1970-01-31",
                  "address": {
                    "line1": "33 Liberty Street",
                    "line2": null,
                    "city": "New York",
                    "state": "NY",
                    "zip": "10045"
                  },
                  "identification": {
                    "method": "social_security_number",
                    "number_last4": "1120",
                    "country": "US"
                  }
                },
                "company_title": "CEO",
                "prong": "control"
              }
            ]
          },
          "natural_person": null,
          "joint": null,
          "trust": null,
          "type": "entity",
          "description": null,
          "relationship": "informational",
          "supplemental_documents": [
            {
              "file_id": "file_makxrc67oh9l6sg7w9yc"
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The entity's identifier."
          },
          "structure": {
            "type": "string",
            "enum": [
              "corporation",
              "natural_person",
              "joint",
              "trust"
            ],
            "description": "The entity's legal structure.",
            "x-enum-descriptions": [
              "A corporation.",
              "An individual person.",
              "Multiple individual people.",
              "A trust."
            ]
          },
          "corporation": {
            "type": "object",
            "title": "Corporation",
            "description": "Details of the corporation entity. Will be present if `structure` is equal to `corporation`.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The legal name of the corporation."
              },
              "website": {
                "type": "string",
                "description": "The website of the corporation.",
                "nullable": true
              },
              "tax_identifier": {
                "type": "string",
                "description": "The Employer Identification Number (EIN) for the corporation.",
                "nullable": true
              },
              "incorporation_state": {
                "type": "string",
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the corporation's state of incorporation.",
                "nullable": true
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The corporation's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": {
                    "type": "string",
                    "description": "The first line of the address."
                  },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "line2",
                  "city",
                  "state",
                  "zip"
                ],
                "x-title-plural": "Addresss"
              },
              "beneficial_owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Beneficial Owners Element",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "title": "Individual",
                      "description": "Personal details for the beneficial owner.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The person's address.",
                          "example": {
                            "line1": "33 Liberty Street",
                            "line2": null,
                            "city": "New York",
                            "state": "NY",
                            "zip": "10045"
                          },
                          "properties": {
                            "line1": {
                              "type": "string",
                              "description": "The first line of the address."
                            },
                            "line2": {
                              "type": "string",
                              "description": "The second line of the address.",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": [
                            "line1",
                            "line2",
                            "city",
                            "state",
                            "zip"
                          ],
                          "x-title-plural": "Addresss"
                        },
                        "identification": {
                          "type": "object",
                          "title": "Identification",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number_last4": {
                              "type": "string",
                              "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                            }
                          },
                          "required": [
                            "method",
                            "number_last4"
                          ],
                          "x-title-plural": "Identifications"
                        }
                      },
                      "required": [
                        "name",
                        "date_of_birth",
                        "address",
                        "identification"
                      ],
                      "x-title-plural": "Individuals"
                    },
                    "company_title": {
                      "type": "string",
                      "description": "This person's role or title within the entity.",
                      "nullable": true
                    },
                    "prong": {
                      "type": "string",
                      "enum": [
                        "ownership",
                        "control"
                      ],
                      "description": "Why this person is considered a beneficial owner of the entity.",
                      "x-enum-descriptions": [
                        "A person with 25% or greater direct or indirect ownership of the entity.",
                        "A person who manages, directs, or has significant control of the entity."
                      ]
                    }
                  },
                  "required": [
                    "individual",
                    "company_title",
                    "prong"
                  ],
                  "x-title-plural": "Beneficial Owners Elements"
                },
                "description": "The identifying details of anyone controlling or owning 25% or more of the corporation."
              }
            },
            "required": [
              "name",
              "website",
              "tax_identifier",
              "incorporation_state",
              "address",
              "beneficial_owners"
            ],
            "nullable": true,
            "x-title-plural": "Corporations"
          },
          "natural_person": {
            "type": "object",
            "title": "Individual",
            "description": "Details of the natural person entity. Will be present if `structure` is equal to `natural_person`.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The person's legal name."
              },
              "date_of_birth": {
                "type": "string",
                "format": "date",
                "description": "The person's date of birth in YYYY-MM-DD format."
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The person's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": {
                    "type": "string",
                    "description": "The first line of the address."
                  },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "line2",
                  "city",
                  "state",
                  "zip"
                ],
                "x-title-plural": "Addresss"
              },
              "identification": {
                "type": "object",
                "title": "Identification",
                "description": "A means of verifying the person's identity.",
                "properties": {
                  "method": {
                    "type": "string",
                    "enum": [
                      "social_security_number",
                      "individual_taxpayer_identification_number",
                      "passport",
                      "drivers_license",
                      "other"
                    ],
                    "description": "A method that can be used to verify the individual's identity.",
                    "x-enum-descriptions": [
                      "A social security number.",
                      "An individual taxpayer identification number (ITIN).",
                      "A passport number.",
                      "A driver's license number.",
                      "Another identifying document."
                    ]
                  },
                  "number_last4": {
                    "type": "string",
                    "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                  }
                },
                "required": [
                  "method",
                  "number_last4"
                ],
                "x-title-plural": "Identifications"
              }
            },
            "required": [
              "name",
              "date_of_birth",
              "address",
              "identification"
            ],
            "nullable": true,
            "x-title-plural": "Individuals"
          },
          "joint": {
            "type": "object",
            "title": "Joint",
            "description": "Details of the joint entity. Will be present if `structure` is equal to `joint`.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The entity's name."
              },
              "individuals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Individual",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The person's legal name."
                    },
                    "date_of_birth": {
                      "type": "string",
                      "format": "date",
                      "description": "The person's date of birth in YYYY-MM-DD format."
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The person's address.",
                      "example": {
                        "line1": "33 Liberty Street",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "zip": "10045"
                      },
                      "properties": {
                        "line1": {
                          "type": "string",
                          "description": "The first line of the address."
                        },
                        "line2": {
                          "type": "string",
                          "description": "The second line of the address.",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "description": "The city of the address."
                        },
                        "state": {
                          "type": "string",
                          "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                        },
                        "zip": {
                          "type": "string",
                          "description": "The ZIP code of the address."
                        }
                      },
                      "required": [
                        "line1",
                        "line2",
                        "city",
                        "state",
                        "zip"
                      ],
                      "x-title-plural": "Addresss"
                    },
                    "identification": {
                      "type": "object",
                      "title": "Identification",
                      "description": "A means of verifying the person's identity.",
                      "properties": {
                        "method": {
                          "type": "string",
                          "enum": [
                            "social_security_number",
                            "individual_taxpayer_identification_number",
                            "passport",
                            "drivers_license",
                            "other"
                          ],
                          "description": "A method that can be used to verify the individual's identity.",
                          "x-enum-descriptions": [
                            "A social security number.",
                            "An individual taxpayer identification number (ITIN).",
                            "A passport number.",
                            "A driver's license number.",
                            "Another identifying document."
                          ]
                        },
                        "number_last4": {
                          "type": "string",
                          "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                        }
                      },
                      "required": [
                        "method",
                        "number_last4"
                      ],
                      "x-title-plural": "Identifications"
                    }
                  },
                  "required": [
                    "name",
                    "date_of_birth",
                    "address",
                    "identification"
                  ],
                  "x-title-plural": "Individuals"
                },
                "description": "The two individuals that share control of the entity."
              }
            },
            "required": [
              "name",
              "individuals"
            ],
            "nullable": true,
            "x-title-plural": "Joints"
          },
          "trust": {
            "type": "object",
            "title": "Trust",
            "description": "Details of the trust entity. Will be present if `structure` is equal to `trust`.",
            "properties": {
              "name": {
                "type": "string",
                "description": "The trust's name"
              },
              "category": {
                "type": "string",
                "enum": [
                  "revocable",
                  "irrevocable"
                ],
                "description": "Whether the trust is `revocable` or `irrevocable`.",
                "x-enum-descriptions": [
                  "The trust is revocable by the grantor.",
                  "The trust cannot be revoked."
                ]
              },
              "address": {
                "type": "object",
                "title": "Address",
                "description": "The trust's address.",
                "example": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "properties": {
                  "line1": {
                    "type": "string",
                    "description": "The first line of the address."
                  },
                  "line2": {
                    "type": "string",
                    "description": "The second line of the address.",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                  },
                  "zip": {
                    "type": "string",
                    "description": "The ZIP code of the address."
                  }
                },
                "required": [
                  "line1",
                  "line2",
                  "city",
                  "state",
                  "zip"
                ],
                "x-title-plural": "Addresss"
              },
              "formation_state": {
                "type": "string",
                "description": "The two-letter United States Postal Service (USPS) abbreviation for the state in which the trust was formed.",
                "nullable": true
              },
              "tax_identifier": {
                "type": "string",
                "description": "The Employer Identification Number (EIN) of the trust itself.",
                "nullable": true
              },
              "trustees": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Trustees Element",
                  "properties": {
                    "structure": {
                      "type": "string",
                      "enum": [
                        "individual"
                      ],
                      "description": "The structure of the trustee. Will always be equal to `individual`.",
                      "x-enum-descriptions": [
                        "The trustee is an individual."
                      ]
                    },
                    "individual": {
                      "type": "object",
                      "title": "Individual",
                      "description": "The individual trustee of the trust. Will be present if the trustee's `structure` is equal to `individual`.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The person's legal name."
                        },
                        "date_of_birth": {
                          "type": "string",
                          "format": "date",
                          "description": "The person's date of birth in YYYY-MM-DD format."
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The person's address.",
                          "example": {
                            "line1": "33 Liberty Street",
                            "line2": null,
                            "city": "New York",
                            "state": "NY",
                            "zip": "10045"
                          },
                          "properties": {
                            "line1": {
                              "type": "string",
                              "description": "The first line of the address."
                            },
                            "line2": {
                              "type": "string",
                              "description": "The second line of the address.",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "description": "The city of the address."
                            },
                            "state": {
                              "type": "string",
                              "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                            },
                            "zip": {
                              "type": "string",
                              "description": "The ZIP code of the address."
                            }
                          },
                          "required": [
                            "line1",
                            "line2",
                            "city",
                            "state",
                            "zip"
                          ],
                          "x-title-plural": "Addresss"
                        },
                        "identification": {
                          "type": "object",
                          "title": "Identification",
                          "description": "A means of verifying the person's identity.",
                          "properties": {
                            "method": {
                              "type": "string",
                              "enum": [
                                "social_security_number",
                                "individual_taxpayer_identification_number",
                                "passport",
                                "drivers_license",
                                "other"
                              ],
                              "description": "A method that can be used to verify the individual's identity.",
                              "x-enum-descriptions": [
                                "A social security number.",
                                "An individual taxpayer identification number (ITIN).",
                                "A passport number.",
                                "A driver's license number.",
                                "Another identifying document."
                              ]
                            },
                            "number_last4": {
                              "type": "string",
                              "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                            }
                          },
                          "required": [
                            "method",
                            "number_last4"
                          ],
                          "x-title-plural": "Identifications"
                        }
                      },
                      "required": [
                        "name",
                        "date_of_birth",
                        "address",
                        "identification"
                      ],
                      "nullable": true,
                      "x-title-plural": "Individuals"
                    }
                  },
                  "required": [
                    "structure",
                    "individual"
                  ],
                  "x-title-plural": "Trustees Elements"
                },
                "description": "The trustees of the trust."
              },
              "grantor": {
                "type": "object",
                "title": "Individual",
                "description": "The grantor of the trust. Will be present if the `category` is `revocable`.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The person's legal name."
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date",
                    "description": "The person's date of birth in YYYY-MM-DD format."
                  },
                  "address": {
                    "type": "object",
                    "title": "Address",
                    "description": "The person's address.",
                    "example": {
                      "line1": "33 Liberty Street",
                      "line2": null,
                      "city": "New York",
                      "state": "NY",
                      "zip": "10045"
                    },
                    "properties": {
                      "line1": {
                        "type": "string",
                        "description": "The first line of the address."
                      },
                      "line2": {
                        "type": "string",
                        "description": "The second line of the address.",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the address."
                      },
                      "state": {
                        "type": "string",
                        "description": "The two-letter United States Postal Service (USPS) abbreviation for the state of the address."
                      },
                      "zip": {
                        "type": "string",
                        "description": "The ZIP code of the address."
                      }
                    },
                    "required": [
                      "line1",
                      "line2",
                      "city",
                      "state",
                      "zip"
                    ],
                    "x-title-plural": "Addresss"
                  },
                  "identification": {
                    "type": "object",
                    "title": "Identification",
                    "description": "A means of verifying the person's identity.",
                    "properties": {
                      "method": {
                        "type": "string",
                        "enum": [
                          "social_security_number",
                          "individual_taxpayer_identification_number",
                          "passport",
                          "drivers_license",
                          "other"
                        ],
                        "description": "A method that can be used to verify the individual's identity.",
                        "x-enum-descriptions": [
                          "A social security number.",
                          "An individual taxpayer identification number (ITIN).",
                          "A passport number.",
                          "A driver's license number.",
                          "Another identifying document."
                        ]
                      },
                      "number_last4": {
                        "type": "string",
                        "description": "The last 4 digits of the identification number that can be used to verify the individual's identity."
                      }
                    },
                    "required": [
                      "method",
                      "number_last4"
                    ],
                    "x-title-plural": "Identifications"
                  }
                },
                "required": [
                  "name",
                  "date_of_birth",
                  "address",
                  "identification"
                ],
                "nullable": true,
                "x-title-plural": "Individuals"
              },
              "formation_document_file_id": {
                "type": "string",
                "description": "The ID for the File containing the formation document of the trust.",
                "nullable": true
              }
            },
            "required": [
              "name",
              "category",
              "address",
              "formation_state",
              "tax_identifier",
              "trustees",
              "grantor",
              "formation_document_file_id"
            ],
            "nullable": true,
            "x-title-plural": "Trusts"
          },
          "type": {
            "type": "string",
            "enum": [
              "entity"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `entity`."
          },
          "description": {
            "type": "string",
            "description": "The entity's description for display purposes.",
            "nullable": true
          },
          "relationship": {
            "type": "string",
            "enum": [
              "affiliated",
              "informational",
              "unaffiliated"
            ],
            "description": "The relationship between your group and the entity.",
            "x-enum-descriptions": [
              "The entity is controlled by your group.",
              "The entity is for informational purposes only.",
              "The entity is not controlled by your group, but can still directly open accounts."
            ]
          },
          "supplemental_documents": {
            "type": "array",
            "items": {
              "type": "object",
              "title": "Supplemental Documents Element",
              "properties": {
                "file_id": {
                  "type": "string",
                  "description": "The File containing the document."
                }
              },
              "required": [
                "file_id"
              ],
              "x-title-plural": "Supplemental Documents Elements"
            },
            "description": "Additional documentation associated with the entity."
          }
        },
        "required": [
          "id",
          "structure",
          "corporation",
          "natural_person",
          "joint",
          "trust",
          "type",
          "description",
          "relationship",
          "supplemental_documents"
        ],
        "x-title-plural": "Entities",
        "x-tag": "Entities"
      },
      "entity_list": {
        "type": "object",
        "title": "Entity List",
        "description": "A list of Entity objects",
        "example": {
          "data": [
            {
              "id": "entity_n8y8tnk2p9339ti393yi",
              "structure": "corporation",
              "corporation": {
                "name": "National Phonograph Company",
                "website": "https://example.com",
                "tax_identifier": "602214076",
                "incorporation_state": "NY",
                "address": {
                  "line1": "33 Liberty Street",
                  "line2": null,
                  "city": "New York",
                  "state": "NY",
                  "zip": "10045"
                },
                "beneficial_owners": [
                  {
                    "individual": {
                      "name": "Ian Crease",
                      "date_of_birth": "1970-01-31",
                      "address": {
                        "line1": "33 Liberty Street",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "zip": "10045"
                      },
                      "identification": {
                        "method": "social_security_number",
                        "number_last4": "1120",
                        "country": "US"
                      }
                    },
                    "company_title": "CEO",
                    "prong": "control"
                  }
                ]
              },
              "natural_person": null,
              "joint": null,
              "trust": null,
              "type": "entity",
              "description": null,
              "relationship": "informational",
              "supplemental_documents": [
                {
                  "file_id": "file_makxrc67oh9l6sg7w9yc"
                }
              ]
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/entity"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Entity Lists"
      },
      "account_statement_list": {
        "type": "object",
        "title": "Account Statement List",
        "description": "A list of Account Statement objects",
        "example": {
          "data": [
            {
              "id": "account_statement_lkc03a4skm2k7f38vj15",
              "account_id": "account_in71c4amph0vgo2qllky",
              "created_at": "2020-01-31T23:59:59Z",
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "statement_period_start": "2020-01-31T23:59:59Z",
              "statement_period_end": "2020-01-31T23:59:59Z",
              "starting_balance": 0,
              "ending_balance": 100,
              "type": "account_statement"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/account_statement"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Account Statement Lists"
      },
      "account_statement": {
        "type": "object",
        "title": "Account Statement",
        "description": "Account Statements are generated monthly for every active Account. You can access the statement's data via the API or retrieve a PDF with its details via its associated File.",
        "example": {
          "id": "account_statement_lkc03a4skm2k7f38vj15",
          "account_id": "account_in71c4amph0vgo2qllky",
          "created_at": "2020-01-31T23:59:59Z",
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "statement_period_start": "2020-01-31T23:59:59Z",
          "statement_period_end": "2020-01-31T23:59:59Z",
          "starting_balance": 0,
          "ending_balance": 100,
          "type": "account_statement"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Account Statement identifier."
          },
          "account_id": {
            "type": "string",
            "description": "The identifier for the Account this Account Statement belongs to."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account Statement was created."
          },
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing a PDF of the statement."
          },
          "statement_period_start": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the start of the period the Account Statement covers."
          },
          "statement_period_end": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time representing the end of the period the Account Statement covers."
          },
          "starting_balance": {
            "type": "integer",
            "description": "The Account's balance at the start of its statement period."
          },
          "ending_balance": {
            "type": "integer",
            "description": "The Account's balance at the start of its statement period."
          },
          "type": {
            "type": "string",
            "enum": [
              "account_statement"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `account_statement`."
          }
        },
        "required": [
          "id",
          "account_id",
          "created_at",
          "file_id",
          "statement_period_start",
          "statement_period_end",
          "starting_balance",
          "ending_balance",
          "type"
        ],
        "x-title-plural": "Account Statements",
        "x-tag": "Account Statements"
      },
      "file": {
        "type": "object",
        "title": "File",
        "description": "Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF).",
        "example": {
          "created_at": "2020-01-31T23:59:59Z",
          "id": "file_makxrc67oh9l6sg7w9yc",
          "purpose": "increase_statement",
          "description": "2022-05 statement for checking account",
          "direction": "from_increase",
          "filename": "statement.pdf",
          "download_url": "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
          "type": "file"
        },
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the File was created."
          },
          "id": {
            "type": "string",
            "description": "The File's identifier."
          },
          "purpose": {
            "type": "string",
            "enum": [
              "check_image_front",
              "check_image_back",
              "form_1099_int",
              "form_ss_4",
              "identity_document",
              "increase_statement",
              "other",
              "trust_formation_document",
              "digital_wallet_artwork",
              "digital_wallet_app_icon",
              "entity_supplemental_document"
            ],
            "description": "What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
            "x-enum-descriptions": [
              "An image of the front of a check, used for check deposits.",
              "An image of the back of a check, used for check deposits.",
              "IRS Form 1099-INT.",
              "IRS Form SS-4.",
              "An image of a government-issued ID.",
              "A statement generated by Increase.",
              "A file purpose not covered by any of the other cases.",
              "A legal document forming a trust.",
              "A card image to be rendered inside digital wallet apps. This must be a 1536x969 pixel PNG.",
              "An icon for you app to be rendered inside digital wallet apps. This must be a 100x100 pixel PNG.",
              "A supplemental document associated an an Entity."
            ]
          },
          "description": {
            "type": "string",
            "description": "A description of the File.",
            "nullable": true
          },
          "direction": {
            "type": "string",
            "enum": [
              "to_increase",
              "from_increase"
            ],
            "description": "Whether the File was generated by Increase or by you and sent to Increase.",
            "x-enum-descriptions": [
              "This File was sent by you to Increase.",
              "This File was generated by Increase."
            ]
          },
          "filename": {
            "type": "string",
            "description": "The filename that was provided upon upload or generated by Increase.",
            "nullable": true
          },
          "download_url": {
            "type": "string",
            "description": "A URL from where the File can be downloaded at this point in time. The location of this URL may change over time.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "file"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `file`."
          }
        },
        "required": [
          "created_at",
          "id",
          "purpose",
          "description",
          "direction",
          "filename",
          "download_url",
          "type"
        ],
        "x-title-plural": "Files",
        "x-tag": "Files"
      },
      "file_list": {
        "type": "object",
        "title": "File List",
        "description": "A list of File objects",
        "example": {
          "data": [
            {
              "created_at": "2020-01-31T23:59:59Z",
              "id": "file_makxrc67oh9l6sg7w9yc",
              "purpose": "increase_statement",
              "description": "2022-05 statement for checking account",
              "direction": "from_increase",
              "filename": "statement.pdf",
              "download_url": "https://api.increase.com/files/file_makxrc67oh9l6sg7w9yc/download",
              "type": "file"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/file"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "File Lists"
      },
      "document_list": {
        "type": "object",
        "title": "Document List",
        "description": "A list of Document objects",
        "example": {
          "data": [
            {
              "id": "document_qjtqc6s4c14ve2q89izm",
              "category": "form_1099_int",
              "created_at": "2020-01-31T23:59:59Z",
              "entity_id": "entity_n8y8tnk2p9339ti393yi",
              "file_id": "file_makxrc67oh9l6sg7w9yc",
              "type": "document"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/document"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Document Lists"
      },
      "document": {
        "type": "object",
        "title": "Document",
        "description": "Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT.",
        "example": {
          "id": "document_qjtqc6s4c14ve2q89izm",
          "category": "form_1099_int",
          "created_at": "2020-01-31T23:59:59Z",
          "entity_id": "entity_n8y8tnk2p9339ti393yi",
          "file_id": "file_makxrc67oh9l6sg7w9yc",
          "type": "document"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Document identifier."
          },
          "category": {
            "type": "string",
            "enum": [
              "form_1099_int"
            ],
            "description": "The type of document.",
            "x-enum-descriptions": [
              "Internal Revenue Service Form 1099-INT."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created."
          },
          "entity_id": {
            "type": "string",
            "description": "The identifier of the Entity the document was generated for.",
            "nullable": true
          },
          "file_id": {
            "type": "string",
            "description": "The identifier of the File containing the Document's contents."
          },
          "type": {
            "type": "string",
            "enum": [
              "document"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `document`."
          }
        },
        "required": [
          "id",
          "category",
          "created_at",
          "entity_id",
          "file_id",
          "type"
        ],
        "x-title-plural": "Documents",
        "x-tag": "Documents"
      },
      "event_list": {
        "type": "object",
        "title": "Event List",
        "description": "A list of Event objects",
        "example": {
          "data": [
            {
              "associated_object_id": "account_in71c4amph0vgo2qllky",
              "associated_object_type": "account",
              "category": "account.created",
              "created_at": "2020-01-31T23:59:59Z",
              "id": "event_001dzz0r20rzr4zrhrr1364hy80",
              "type": "event"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Event Lists"
      },
      "event": {
        "type": "object",
        "title": "Event",
        "description": "Events are records of things that happened to objects in the API. They also result in webhooks being generated.",
        "example": {
          "associated_object_id": "account_in71c4amph0vgo2qllky",
          "associated_object_type": "account",
          "category": "account.created",
          "created_at": "2020-01-31T23:59:59Z",
          "id": "event_001dzz0r20rzr4zrhrr1364hy80",
          "type": "event"
        },
        "properties": {
          "associated_object_id": {
            "type": "string",
            "description": "The identifier of the object that generated this Event."
          },
          "associated_object_type": {
            "type": "string",
            "description": "The type of the object that generated this Event."
          },
          "category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "card.created",
              "card.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "external_account.created",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "The category of the Event. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real Time Payments Transfer is created.",
              "Occurs whenever a Real Time Payments Transfer is updated.",
              "Occurs whenever a Real Time Payments Request for Payment is created.",
              "Occurs whenever a Real Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is updated.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Event was created."
          },
          "id": {
            "type": "string",
            "description": "The Event identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "event"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `event`."
          }
        },
        "required": [
          "associated_object_id",
          "associated_object_type",
          "category",
          "created_at",
          "id",
          "type"
        ],
        "x-title-plural": "Events",
        "x-tag": "Events"
      },
      "event_subscription": {
        "type": "object",
        "title": "Event Subscription",
        "description": "Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).",
        "example": {
          "id": "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
          "created_at": "2020-01-31T23:59:59Z",
          "status": "active",
          "selected_event_category": null,
          "url": "https://website.com/webhooks",
          "shared_secret": "b88l20",
          "type": "event_subscription"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The event subscription identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time the event subscription was created."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "disabled",
              "deleted",
              "requires_attention"
            ],
            "description": "This indicates if we'll send notifications to this subscription.",
            "x-enum-descriptions": [
              "The subscription is active and Events will be delivered normally.",
              "The subscription is temporarily disabled and Events will not be delivered.",
              "The subscription is permanently disabled and Events will not be delivered.",
              "The subscription is temporarily disabled due to delivery errors and Events will not be delivered."
            ]
          },
          "selected_event_category": {
            "type": "string",
            "enum": [
              "account.created",
              "account.updated",
              "account_number.created",
              "account_number.updated",
              "account_statement.created",
              "account_transfer.created",
              "account_transfer.updated",
              "ach_prenotification.created",
              "ach_prenotification.updated",
              "ach_transfer.created",
              "ach_transfer.updated",
              "card.created",
              "card.updated",
              "card_dispute.created",
              "card_dispute.updated",
              "check_deposit.created",
              "check_deposit.updated",
              "check_transfer.created",
              "check_transfer.updated",
              "declined_transaction.created",
              "digital_wallet_token.created",
              "digital_wallet_token.updated",
              "document.created",
              "entity.created",
              "entity.updated",
              "external_account.created",
              "file.created",
              "group.updated",
              "group.heartbeat",
              "inbound_ach_transfer_return.created",
              "inbound_ach_transfer_return.updated",
              "inbound_wire_drawdown_request.created",
              "oauth_connection.created",
              "oauth_connection.deactivated",
              "pending_transaction.created",
              "pending_transaction.updated",
              "real_time_decision.card_authorization_requested",
              "real_time_decision.digital_wallet_token_requested",
              "real_time_decision.digital_wallet_authentication_requested",
              "real_time_payments_transfer.created",
              "real_time_payments_transfer.updated",
              "real_time_payments_request_for_payment.created",
              "real_time_payments_request_for_payment.updated",
              "transaction.created",
              "wire_drawdown_request.created",
              "wire_drawdown_request.updated",
              "wire_transfer.created",
              "wire_transfer.updated"
            ],
            "description": "If specified, this subscription will only receive webhooks for Events with the specified `category`.",
            "nullable": true,
            "x-enum-descriptions": [
              "Occurs whenever an Account is created.",
              "Occurs whenever an Account is updated.",
              "Occurs whenever an Account Number is created.",
              "Occurs whenever an Account Number is updated.",
              "Occurs whenever an Account Statement is created.",
              "Occurs whenever an Account Transfer is created.",
              "Occurs whenever an Account Transfer is updated.",
              "Occurs whenever an ACH Prenotification is created.",
              "Occurs whenever an ACH Prenotification is updated.",
              "Occurs whenever an ACH Transfer is created.",
              "Occurs whenever an ACH Transfer is updated.",
              "Occurs whenever a Card is created.",
              "Occurs whenever a Card is updated.",
              "Occurs whenever a Card Dispute is created.",
              "Occurs whenever a Card Dispute is updated.",
              "Occurs whenever a Check Deposit is created.",
              "Occurs whenever a Check Deposit is updated.",
              "Occurs whenever a Check Transfer is created.",
              "Occurs whenever a Check Transfer is updated.",
              "Occurs whenever a Declined Transaction is created.",
              "Occurs whenever a Digital Wallet Token is created.",
              "Occurs whenever a Digital Wallet Token is updated.",
              "Occurs whenever a Document is created.",
              "Occurs whenever an Entity is created.",
              "Occurs whenever an Entity is updated.",
              "Occurs whenever an External Account is created.",
              "Occurs whenever a File is created.",
              "Occurs whenever a Group is updated.",
              "Increase may send webhooks with this category to see if a webhook endpoint is working properly.",
              "Occurs whenever an Inbound ACH Transfer Return is created.",
              "Occurs whenever an Inbound ACH Transfer Return is updated.",
              "Occurs whenever an Inbound Wire Drawdown Request is created.",
              "Occurs whenever an OAuth Connection is created.",
              "Occurs whenever an OAuth Connection is deactivated.",
              "Occurs whenever a Pending Transaction is created.",
              "Occurs whenever a Pending Transaction is updated.",
              "Occurs whenever a Real-Time Decision is created in response to a card authorization.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet provisioning attempt.",
              "Occurs whenever a Real-Time Decision is created in response to a digital wallet requiring two-factor authentication.",
              "Occurs whenever a Real Time Payments Transfer is created.",
              "Occurs whenever a Real Time Payments Transfer is updated.",
              "Occurs whenever a Real Time Payments Request for Payment is created.",
              "Occurs whenever a Real Time Payments Request for Payment is updated.",
              "Occurs whenever a Transaction is updated.",
              "Occurs whenever a Wire Drawdown Request is created.",
              "Occurs whenever a Wire Drawdown Request is updated.",
              "Occurs whenever a Wire Transfer is created.",
              "Occurs whenever a Wire Transfer is updated."
            ]
          },
          "url": {
            "type": "string",
            "description": "The webhook url where we'll send notifications."
          },
          "shared_secret": {
            "type": "string",
            "description": "The key that will be used to sign webhooks."
          },
          "type": {
            "type": "string",
            "enum": [
              "event_subscription"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `event_subscription`."
          }
        },
        "required": [
          "id",
          "created_at",
          "status",
          "selected_event_category",
          "url",
          "shared_secret",
          "type"
        ],
        "x-title-plural": "Event Subscriptions",
        "x-tag": "Event Subscriptions"
      },
      "event_subscription_list": {
        "type": "object",
        "title": "Event Subscription List",
        "description": "A list of Event Subscription objects",
        "example": {
          "data": [
            {
              "id": "event_subscription_001dzz0r20rcdxgb013zqb8m04g",
              "created_at": "2020-01-31T23:59:59Z",
              "status": "active",
              "selected_event_category": null,
              "url": "https://website.com/webhooks",
              "shared_secret": "b88l20",
              "type": "event_subscription"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event_subscription"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "Event Subscription Lists"
      },
      "real_time_decision": {
        "type": "object",
        "title": "Real-Time Decision",
        "description": "Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you're interested in trying them out!",
        "example": {
          "id": "real_time_decision_j76n2e810ezcg3zh5qtn",
          "created_at": "2020-01-31T23:59:59Z",
          "timeout_at": "2020-01-31T23:59:59Z",
          "status": "pending",
          "category": "card_authorization_requested",
          "card_authorization": {
            "merchant_acceptor_id": "5665270011000168",
            "merchant_descriptor": "AMAZON.COM",
            "merchant_category_code": "5734",
            "merchant_city": "New York",
            "merchant_country": "US",
            "network": "visa",
            "network_details": {
              "visa": {
                "electronic_commerce_indicator": "secure_electronic_commerce",
                "point_of_service_entry_mode": "manual"
              }
            },
            "decision": "approve",
            "card_id": "card_oubs0hwk5rn6knuecxg2",
            "account_id": "account_in71c4amph0vgo2qllky",
            "presentment_amount": 100,
            "presentment_currency": "USD",
            "settlement_amount": 100,
            "settlement_currency": "USD"
          },
          "digital_wallet_token": null,
          "digital_wallet_authentication": null,
          "type": "real_time_decision"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The Real-Time Decision identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Real-Time Decision was created."
          },
          "timeout_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which your application can no longer respond to the Real-Time Decision."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "responded",
              "timed_out"
            ],
            "description": "The status of the Real-Time Decision.",
            "x-enum-descriptions": [
              "The decision is pending action via real-time webhook.",
              "Your webhook actioned the real-time decision.",
              "Your webhook failed to respond to the authorization in time."
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "card_authorization_requested",
              "digital_wallet_token_requested",
              "digital_wallet_authentication_requested"
            ],
            "description": "The category of the Real-Time Decision.",
            "x-enum-descriptions": [
              "A card is being authorized.",
              "A card is being loaded into a digital wallet.",
              "A card is being loaded into a digital wallet and requires cardholder authentication."
            ]
          },
          "card_authorization": {
            "type": "object",
            "title": "Card Authorization",
            "description": "Fields related to a card authorization.",
            "properties": {
              "merchant_acceptor_id": {
                "type": "string",
                "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
              },
              "merchant_descriptor": {
                "type": "string",
                "description": "The merchant descriptor of the merchant the card is transacting with."
              },
              "merchant_category_code": {
                "type": "string",
                "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                "nullable": true
              },
              "merchant_city": {
                "type": "string",
                "description": "The city the merchant resides in.",
                "nullable": true
              },
              "merchant_country": {
                "type": "string",
                "description": "The country the merchant resides in.",
                "nullable": true
              },
              "network": {
                "type": "string",
                "enum": [
                  "visa"
                ],
                "description": "The payment network used to process this card authorization",
                "x-enum-descriptions": [
                  "Visa"
                ]
              },
              "network_details": {
                "type": "object",
                "title": "Network Details",
                "description": "Fields specific to the `network`",
                "properties": {
                  "visa": {
                    "type": "object",
                    "title": "Visa",
                    "description": "Fields specific to the `visa` network",
                    "properties": {
                      "electronic_commerce_indicator": {
                        "type": "string",
                        "enum": [
                          "mail_phone_order",
                          "recurring",
                          "installment",
                          "unknown_mail_phone_order",
                          "secure_electronic_commerce",
                          "non_authenticated_security_transaction_at_3ds_capable_merchant",
                          "non_authenticated_security_transaction",
                          "non_secure_transaction"
                        ],
                        "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                        "nullable": true,
                        "x-enum-descriptions": [
                          "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                          "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                          "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                          "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                          "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                          "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                          "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                          "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                        ]
                      },
                      "point_of_service_entry_mode": {
                        "type": "string",
                        "enum": [
                          "manual",
                          "magnetic_stripe_no_cvv",
                          "optical_code",
                          "integrated_circuit_card",
                          "contactless",
                          "credential_on_file",
                          "magnetic_stripe",
                          "contactless_magnetic_stripe",
                          "integrated_circuit_card_no_cvv"
                        ],
                        "description": "The method used to enter the cardholder's primary account number and card expiration date",
                        "nullable": true,
                        "x-enum-descriptions": [
                          "Manual key entry",
                          "Magnetic stripe read, without card verification value",
                          "Optical code",
                          "Contact chip card",
                          "Contactless read of chip card",
                          "Transaction iniated using a credential that has previously been stored on file",
                          "Magnetic stripe read",
                          "Contactless read of magnetic stripe data",
                          "Contact chip card, without card verification value"
                        ]
                      }
                    },
                    "required": [
                      "electronic_commerce_indicator",
                      "point_of_service_entry_mode"
                    ],
                    "x-title-plural": "Visas"
                  }
                },
                "required": [
                  "visa"
                ],
                "x-title-plural": "Network Detailss"
              },
              "decision": {
                "type": "string",
                "enum": [
                  "approve",
                  "decline"
                ],
                "description": "Whether or not the authorization was approved.",
                "nullable": true,
                "x-enum-descriptions": [
                  "Approve the authorization.",
                  "Decline the authorization."
                ]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being authorized."
              },
              "account_id": {
                "type": "string",
                "description": "The identifier of the Account the authorization will debit."
              },
              "presentment_amount": {
                "type": "integer",
                "description": "The amount of the attempted authorization in the currency the card user sees at the time of purchase, in the minor unit of that currency. For dollars, for example, this is cents."
              },
              "presentment_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the user sees at the time of purchase."
              },
              "settlement_amount": {
                "type": "integer",
                "description": "The amount of the attempted authorization in the currency it will be settled in. This currency is the same as that of the Account the card belongs to."
              },
              "settlement_currency": {
                "type": "string",
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the transaction will be settled in."
              }
            },
            "required": [
              "merchant_acceptor_id",
              "merchant_descriptor",
              "merchant_category_code",
              "merchant_city",
              "merchant_country",
              "network",
              "network_details",
              "decision",
              "card_id",
              "account_id",
              "presentment_amount",
              "presentment_currency",
              "settlement_amount",
              "settlement_currency"
            ],
            "nullable": true,
            "x-title-plural": "Card Authorizations"
          },
          "digital_wallet_token": {
            "type": "object",
            "title": "Digital Wallet Token",
            "description": "Fields related to a digital wallet token provisioning attempt.",
            "properties": {
              "decision": {
                "type": "string",
                "enum": [
                  "approve",
                  "decline"
                ],
                "description": "Whether or not the provisioning request was approved. This will be null until the real time decision is responded to.",
                "nullable": true,
                "x-enum-descriptions": [
                  "Approve the provisioning request.",
                  "Decline the provisioning request."
                ]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being tokenized."
              },
              "digital_wallet": {
                "type": "string",
                "enum": [
                  "apple_pay",
                  "google_pay"
                ],
                "description": "The digital wallet app being used.",
                "x-enum-descriptions": [
                  "Apple Pay",
                  "Google Pay"
                ]
              },
              "card_profile_id": {
                "type": "string",
                "description": "The identifier of the Card Profile that was set via the real time decision. This will be null until the real time decision is responded to or if the real time decision did not set a card profile.",
                "nullable": true
              }
            },
            "required": [
              "decision",
              "card_id",
              "digital_wallet",
              "card_profile_id"
            ],
            "nullable": true,
            "x-title-plural": "Digital Wallet Tokens"
          },
          "digital_wallet_authentication": {
            "type": "object",
            "title": "Digital Wallet Authentication",
            "description": "Fields related to a digital wallet authentication attempt.",
            "properties": {
              "result": {
                "type": "string",
                "enum": [
                  "success",
                  "failure"
                ],
                "description": "Whether your application successfully delivered the one-time passcode.",
                "nullable": true,
                "x-enum-descriptions": [
                  "Your application successfully delivered the one-time passcode to the cardholder.",
                  "Your application failed to deliver the one-time passcode to the cardholder."
                ]
              },
              "card_id": {
                "type": "string",
                "description": "The identifier of the Card that is being tokenized."
              },
              "digital_wallet": {
                "type": "string",
                "enum": [
                  "apple_pay",
                  "google_pay"
                ],
                "description": "The digital wallet app being used.",
                "x-enum-descriptions": [
                  "Apple Pay",
                  "Google Pay"
                ]
              },
              "channel": {
                "type": "string",
                "enum": [
                  "sms",
                  "email"
                ],
                "description": "The channel to send the card user their one-time passcode.",
                "x-enum-descriptions": [
                  "Send one-time passcodes over SMS.",
                  "Send one-time passcodes over email."
                ]
              },
              "one_time_passcode": {
                "type": "string",
                "description": "The one-time passcode to send the card user."
              },
              "phone": {
                "type": "string",
                "description": "The phone number to send the one-time passcode to if `channel` is equal to `sms`.",
                "nullable": true
              },
              "email": {
                "type": "string",
                "description": "The email to send the one-time passcode to if `channel` is equal to `email`.",
                "nullable": true
              }
            },
            "required": [
              "result",
              "card_id",
              "digital_wallet",
              "channel",
              "one_time_passcode",
              "phone",
              "email"
            ],
            "nullable": true,
            "x-title-plural": "Digital Wallet Authentications"
          },
          "type": {
            "type": "string",
            "enum": [
              "real_time_decision"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `real_time_decision`."
          }
        },
        "required": [
          "id",
          "created_at",
          "timeout_at",
          "status",
          "category",
          "card_authorization",
          "digital_wallet_token",
          "digital_wallet_authentication",
          "type"
        ],
        "x-title-plural": "Real-Time Decisions",
        "x-tag": "Real-Time Decisions"
      },
      "group": {
        "type": "object",
        "title": "Group",
        "description": "Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.",
        "example": {
          "activation_status": "activated",
          "ach_debit_status": "disabled",
          "created_at": "2020-01-31T23:59:59Z",
          "id": "group_1g4mhziu6kvrs3vz35um",
          "type": "group"
        },
        "properties": {
          "activation_status": {
            "type": "string",
            "enum": [
              "unactivated",
              "activated"
            ],
            "description": "If the Group is activated or not.",
            "x-enum-descriptions": [
              "The Group is not activated.",
              "The Group is activated."
            ]
          },
          "ach_debit_status": {
            "type": "string",
            "enum": [
              "disabled",
              "enabled"
            ],
            "description": "If the Group is allowed to create ACH debits.",
            "x-enum-descriptions": [
              "The Group cannot make ACH debits.",
              "The Group can make ACH debits."
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created."
          },
          "id": {
            "type": "string",
            "description": "The Group identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "group"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `group`."
          }
        },
        "required": [
          "activation_status",
          "ach_debit_status",
          "created_at",
          "id",
          "type"
        ],
        "x-title-plural": "Groups",
        "x-tag": "Groups"
      },
      "oauth_connection_list": {
        "type": "object",
        "title": "OAuth Connection List",
        "description": "A list of OAuth Connection objects",
        "example": {
          "data": [
            {
              "id": "connection_dauknoksyr4wilz4e6my",
              "created_at": "2020-01-31T23:59:59Z",
              "group_id": "group_1g4mhziu6kvrs3vz35um",
              "status": "active",
              "type": "oauth_connection"
            }
          ],
          "next_cursor": "v57w5d"
        },
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/oauth_connection"
            },
            "description": "The contents of the list."
          },
          "next_cursor": {
            "type": "string",
            "description": "A pointer to a place in the list.",
            "nullable": true
          }
        },
        "required": [
          "data",
          "next_cursor"
        ],
        "x-title-plural": "OAuth Connection Lists"
      },
      "oauth_connection": {
        "type": "object",
        "title": "OAuth Connection",
        "description": "When a user authorizes your OAuth application, an OAuth Connection object is created.",
        "example": {
          "id": "connection_dauknoksyr4wilz4e6my",
          "created_at": "2020-01-31T23:59:59Z",
          "group_id": "group_1g4mhziu6kvrs3vz35um",
          "status": "active",
          "type": "oauth_connection"
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "The OAuth Connection's identifier."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created."
          },
          "group_id": {
            "type": "string",
            "description": "The identifier of the Group that has authorized your OAuth application."
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "description": "Whether the connection is active.",
            "x-enum-descriptions": [
              "The OAuth connection is active.",
              "The OAuth connection is permanently deactivated."
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "oauth_connection"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `oauth_connection`."
          }
        },
        "required": [
          "id",
          "created_at",
          "group_id",
          "status",
          "type"
        ],
        "x-title-plural": "OAuth Connections",
        "x-tag": "OAuth Connections"
      },
      "inbound_ach_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound ACH Transfer Simulation Result",
        "description": "The results of an inbound ACH Transfer simulation.",
        "example": {
          "transaction": {
            "account_id": "account_in71c4amph0vgo2qllky",
            "amount": 100,
            "currency": "USD",
            "created_at": "2020-01-31T23:59:59Z",
            "description": "Frederick S. Holmes",
            "id": "transaction_uyrp7fld2ium70oa7oi",
            "route_id": "account_number_v18nkfqm6afpsrvy82b2",
            "route_type": "account_number",
            "source": {
              "category": "inbound_ach_transfer",
              "inbound_ach_transfer": {
                "amount": 100,
                "originator_company_name": "BIG BANK",
                "originator_company_descriptive_date": null,
                "originator_company_discretionary_data": null,
                "originator_company_entry_description": "RESERVE",
                "originator_company_id": "0987654321",
                "receiver_id_number": "12345678900",
                "receiver_name": "IAN CREASE",
                "trace_number": "021000038461022"
              }
            },
            "type": "transaction"
          },
          "declined_transaction": null,
          "type": "inbound_ach_transfer_simulation_result"
        },
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the ACH Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_ach_transfer`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "transaction_uyrp7fld2ium70oa7oi",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "inbound_ach_transfer",
                "inbound_ach_transfer": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "inbound_ach_transfer",
                  "inbound_ach_transfer": {
                    "amount": 100,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_entry_description": "RESERVE",
                    "originator_company_id": "0987654321",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_check_conversion_return",
                      "ach_check_conversion",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_intention",
                      "check_transfer_return",
                      "check_transfer_rejection",
                      "check_transfer_stop_payment_request",
                      "dispute_resolution",
                      "empyreal_cash_deposit",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_general_ledger_transaction",
                      "internal_source",
                      "card_route_refund",
                      "card_route_settlement",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_drawdown_payment_intention",
                      "wire_drawdown_payment_rejection",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.",
                      "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.",
                      "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.",
                      "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.",
                      "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.",
                      "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.",
                      "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.",
                      "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.",
                      "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.",
                      "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.",
                      "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.",
                      "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.",
                      "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.",
                      "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.",
                      "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.",
                      "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.",
                      "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.",
                      "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.",
                      "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.",
                      "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.",
                      "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.",
                      "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.",
                      "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.",
                      "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.",
                      "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.",
                      "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.",
                      "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.",
                      "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.",
                      "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.",
                      "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.",
                      "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.",
                      "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.",
                      "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.",
                      "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_check_conversion_return": {
                    "type": "object",
                    "title": "ACH Check Conversion Return",
                    "description": "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example": {
                      "amount": 100,
                      "return_reason_code": ""
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "description": "Why the transfer was returned."
                      }
                    },
                    "required": [
                      "amount",
                      "return_reason_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversion Returns"
                  },
                  "ach_check_conversion": {
                    "type": "object",
                    "title": "ACH Check Conversion",
                    "description": "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example": {
                      "amount": 100,
                      "file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing an image of the returned check."
                      }
                    },
                    "required": [
                      "amount",
                      "file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": {
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "addenda_error",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "other"
                        ],
                        "description": "Why the ACH Transfer was returned.",
                        "x-enum-descriptions": [
                          "Insufficient funds in the source account.",
                          "The account does not exist or the receiving bank was unable to locate it.",
                          "The account is closed.",
                          "The account number is invalid at the receiving bank.",
                          "The account was frozen per the Office of Foreign Assets Control.",
                          "The receiving bank account refused a credit transfer.",
                          "The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "The corporate customer reversed the transfer.",
                          "The receiving bank stopped payment on this transfer.",
                          "The receiving bank account does not perform transfers.",
                          "The receiving bank account does not have enough available balance for the transfer.",
                          "The routing number is incorrect.",
                          "The customer reversed the transfer.",
                          "The amount field is incorrect or too large.",
                          "The customer who initiated the transfer revoked authorization.",
                          "The routing number is invalid.",
                          "The receiving bank is unable to process a field in the transfer.",
                          "The individual name field was invalid.",
                          "The originating financial institution reversed the transfer.",
                          "The addenda record is incorrect or missing.",
                          "The receiving bank's regulatory supervisor has limited their participation.",
                          "The outbound international ACH transfer was incorrect.",
                          "Any other ACH return reason."
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Tranasaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "accepted_at",
                      "card_dispute_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "card_settlement_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "type": "card_refund"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "card_settlement_transaction_id": {
                        "type": "string",
                        "description": "The identifier for the Transaction this refunds, if any.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_refund"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "card_settlement_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_state": "NY",
                      "pending_transaction_id": null,
                      "type": "card_settlement"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_settlement"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_city",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "merchant_state",
                      "pending_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination."
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination."
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination."
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination."
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_return": {
                    "type": "object",
                    "title": "Check Transfer Return",
                    "description": "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "file_id": null,
                      "reason": "mail_delivery_failure"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the returned Check Transfer."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "If available, a document with additional information about the return.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "mail_delivery_failure",
                          "refused_by_recipient"
                        ],
                        "description": "The reason why the check was returned.",
                        "x-enum-descriptions": [
                          "Mail delivery failed and the check was returned to sender.",
                          "The check arrived and the recipient refused to deposit it."
                        ]
                      }
                    },
                    "required": [
                      "transfer_id",
                      "file_id",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Returns"
                  },
                  "check_transfer_rejection": {
                    "type": "object",
                    "title": "Check Transfer Rejection",
                    "description": "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Rejections"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The transaction ID of the corresponding credit transaction."
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "check_transfer_stop_payment_request"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": [
                      "transfer_id",
                      "transaction_id",
                      "requested_at",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution": {
                    "type": "object",
                    "title": "Dispute Resolution",
                    "description": "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "disputed_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was disputed."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "disputed_transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit": {
                    "type": "object",
                    "title": "Empyreal Cash Deposit",
                    "description": "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example": {
                      "amount": 100,
                      "bag_id": "12345",
                      "deposit_date": "2020-01-31T23:59:59Z"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "bag_id": {
                        "type": "string",
                        "description": ""
                      },
                      "deposit_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "bag_id",
                      "deposit_date"
                    ],
                    "nullable": true,
                    "x-title-plural": "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer",
                    "description": "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfers"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Confirmation",
                    "description": "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the transfer"
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-03-01T00:00:00Z",
                      "period_end": "2023-03-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "accrued_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "sample_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "bank_migration",
                          "cashback",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "Bank Migration",
                          "Cashback",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "card_route_refund": {
                    "type": "object",
                    "title": "Deprecated Card Refund",
                    "description": "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Refunds"
                  },
                  "card_route_settlement": {
                    "type": "object",
                    "title": "Deprecated Card Settlement",
                    "description": "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Settlements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": {
                      "originator": "dashboard"
                    },
                    "properties": {
                      "originator": {
                        "type": "string",
                        "description": "Where the sample funds came from."
                      }
                    },
                    "required": [
                      "originator"
                    ],
                    "nullable": true,
                    "x-title-plural": "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Intention",
                    "description": "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Rejection",
                    "description": "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_check_conversion_return",
                  "ach_check_conversion",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_intention",
                  "check_transfer_return",
                  "check_transfer_rejection",
                  "check_transfer_stop_payment_request",
                  "dispute_resolution",
                  "empyreal_cash_deposit",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "card_route_refund",
                  "card_route_settlement",
                  "sample_funds",
                  "wire_drawdown_payment_intention",
                  "wire_drawdown_payment_rejection",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the ACH Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_ach_transfer`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 1750,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "declined_transaction_17jbn0yyhvkt4v4ooym8",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "ach_decline",
                "ach_decline": {
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "declined_transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Declined Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "ach_decline",
                  "ach_decline": {
                    "amount": 1750,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_id": "0987654321",
                    "reason": "insufficient_funds",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "card_route_decline",
                      "other"
                    ],
                    "description": "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.",
                      "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.",
                      "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.",
                      "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.",
                      "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "transaction_not_allowed",
                          "group_locked",
                          "insufficient_funds",
                          "no_ach_route",
                          "originator_request"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "A credit was refused.",
                          "Other.",
                          "The account's entity is not active.",
                          "The transaction is not allowed per Increase's terms",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "The account number that was debited does not exist.",
                          "Other."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "372909060886",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_category_code": "5998",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "network": "visa",
                      "network_details": {
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "amount": -1000,
                      "currency": "USD",
                      "reason": "insufficient_funds",
                      "merchant_state": "CA",
                      "real_time_decision_id": null,
                      "digital_wallet_token_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "network": {
                        "type": "string",
                        "enum": [
                          "visa"
                        ],
                        "description": "The payment network used to process this card authorization",
                        "x-enum-descriptions": [
                          "Visa"
                        ]
                      },
                      "network_details": {
                        "type": "object",
                        "title": "Network Details",
                        "description": "Fields specific to the `network`",
                        "properties": {
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "type": "string",
                                "enum": [
                                  "manual",
                                  "magnetic_stripe_no_cvv",
                                  "optical_code",
                                  "integrated_circuit_card",
                                  "contactless",
                                  "credential_on_file",
                                  "magnetic_stripe",
                                  "contactless_magnetic_stripe",
                                  "integrated_circuit_card_no_cvv"
                                ],
                                "description": "The method used to enter the cardholder's primary account number and card expiration date",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Manual key entry",
                                  "Magnetic stripe read, without card verification value",
                                  "Optical code",
                                  "Contact chip card",
                                  "Contactless read of chip card",
                                  "Transaction iniated using a credential that has previously been stored on file",
                                  "Magnetic stripe read",
                                  "Contactless read of magnetic stripe data",
                                  "Contact chip card, without card verification value"
                                ]
                              }
                            },
                            "required": [
                              "electronic_commerce_indicator",
                              "point_of_service_entry_mode"
                            ],
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": [
                          "visa"
                        ],
                        "x-title-plural": "Network Detailss"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing"
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "network",
                      "network_details",
                      "amount",
                      "currency",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id",
                      "digital_wallet_token_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "unable_to_locate_account",
                          "unable_to_process",
                          "refer_to_image",
                          "stop_payment_requested",
                          "returned"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Unable to locate account.",
                          "Unable to process.",
                          "Refer to image.",
                          "Stop payment requested for this check.",
                          "Check was returned to sender."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Decline",
                    "description": "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "card_route_decline": {
                    "type": "object",
                    "title": "Deprecated Card Decline",
                    "description": "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                    "example": {
                      "amount": -1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "card_route_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "declined_transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_ach_transfer_simulation_result"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_simulation_result`."
          }
        },
        "required": [
          "transaction",
          "declined_transaction",
          "type"
        ],
        "x-title-plural": "Inbound ACH Transfer Simulation Results"
      },
      "inbound_wire_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound Wire Transfer Simulation Result",
        "description": "The results of an inbound Wire Transfer simulation.",
        "example": {
          "transaction": {
            "account_id": "account_in71c4amph0vgo2qllky",
            "amount": 100,
            "currency": "USD",
            "created_at": "2020-01-31T23:59:59Z",
            "description": "Frederick S. Holmes",
            "id": "transaction_uyrp7fld2ium70oa7oi",
            "route_id": "account_number_v18nkfqm6afpsrvy82b2",
            "route_type": "account_number",
            "source": {
              "category": "inbound_wire_transfer",
              "inbound_wire_transfer": {
                "amount": 100,
                "beneficiary_address_line1": null,
                "beneficiary_address_line2": null,
                "beneficiary_address_line3": null,
                "beneficiary_name": null,
                "beneficiary_reference": null,
                "description": "Inbound wire transfer",
                "input_message_accountability_data": null,
                "originator_address_line1": null,
                "originator_address_line2": null,
                "originator_address_line3": null,
                "originator_name": null,
                "originator_to_beneficiary_information_line1": null,
                "originator_to_beneficiary_information_line2": null,
                "originator_to_beneficiary_information_line3": null,
                "originator_to_beneficiary_information_line4": null,
                "originator_to_beneficiary_information": null
              }
            },
            "type": "transaction"
          },
          "type": "inbound_wire_transfer_simulation_result"
        },
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the Wire Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_wire_transfer`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "transaction_uyrp7fld2ium70oa7oi",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "inbound_ach_transfer",
                "inbound_ach_transfer": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "inbound_ach_transfer",
                  "inbound_ach_transfer": {
                    "amount": 100,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_entry_description": "RESERVE",
                    "originator_company_id": "0987654321",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_check_conversion_return",
                      "ach_check_conversion",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_intention",
                      "check_transfer_return",
                      "check_transfer_rejection",
                      "check_transfer_stop_payment_request",
                      "dispute_resolution",
                      "empyreal_cash_deposit",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_general_ledger_transaction",
                      "internal_source",
                      "card_route_refund",
                      "card_route_settlement",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_drawdown_payment_intention",
                      "wire_drawdown_payment_rejection",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.",
                      "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.",
                      "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.",
                      "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.",
                      "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.",
                      "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.",
                      "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.",
                      "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.",
                      "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.",
                      "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.",
                      "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.",
                      "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.",
                      "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.",
                      "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.",
                      "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.",
                      "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.",
                      "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.",
                      "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.",
                      "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.",
                      "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.",
                      "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.",
                      "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.",
                      "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.",
                      "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.",
                      "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.",
                      "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.",
                      "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.",
                      "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.",
                      "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.",
                      "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.",
                      "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.",
                      "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.",
                      "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.",
                      "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_check_conversion_return": {
                    "type": "object",
                    "title": "ACH Check Conversion Return",
                    "description": "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example": {
                      "amount": 100,
                      "return_reason_code": ""
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "description": "Why the transfer was returned."
                      }
                    },
                    "required": [
                      "amount",
                      "return_reason_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversion Returns"
                  },
                  "ach_check_conversion": {
                    "type": "object",
                    "title": "ACH Check Conversion",
                    "description": "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example": {
                      "amount": 100,
                      "file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing an image of the returned check."
                      }
                    },
                    "required": [
                      "amount",
                      "file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": {
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "addenda_error",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "other"
                        ],
                        "description": "Why the ACH Transfer was returned.",
                        "x-enum-descriptions": [
                          "Insufficient funds in the source account.",
                          "The account does not exist or the receiving bank was unable to locate it.",
                          "The account is closed.",
                          "The account number is invalid at the receiving bank.",
                          "The account was frozen per the Office of Foreign Assets Control.",
                          "The receiving bank account refused a credit transfer.",
                          "The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "The corporate customer reversed the transfer.",
                          "The receiving bank stopped payment on this transfer.",
                          "The receiving bank account does not perform transfers.",
                          "The receiving bank account does not have enough available balance for the transfer.",
                          "The routing number is incorrect.",
                          "The customer reversed the transfer.",
                          "The amount field is incorrect or too large.",
                          "The customer who initiated the transfer revoked authorization.",
                          "The routing number is invalid.",
                          "The receiving bank is unable to process a field in the transfer.",
                          "The individual name field was invalid.",
                          "The originating financial institution reversed the transfer.",
                          "The addenda record is incorrect or missing.",
                          "The receiving bank's regulatory supervisor has limited their participation.",
                          "The outbound international ACH transfer was incorrect.",
                          "Any other ACH return reason."
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Tranasaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "accepted_at",
                      "card_dispute_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "card_settlement_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "type": "card_refund"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "card_settlement_transaction_id": {
                        "type": "string",
                        "description": "The identifier for the Transaction this refunds, if any.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_refund"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "card_settlement_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_state": "NY",
                      "pending_transaction_id": null,
                      "type": "card_settlement"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_settlement"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_city",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "merchant_state",
                      "pending_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination."
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination."
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination."
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination."
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_return": {
                    "type": "object",
                    "title": "Check Transfer Return",
                    "description": "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "file_id": null,
                      "reason": "mail_delivery_failure"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the returned Check Transfer."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "If available, a document with additional information about the return.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "mail_delivery_failure",
                          "refused_by_recipient"
                        ],
                        "description": "The reason why the check was returned.",
                        "x-enum-descriptions": [
                          "Mail delivery failed and the check was returned to sender.",
                          "The check arrived and the recipient refused to deposit it."
                        ]
                      }
                    },
                    "required": [
                      "transfer_id",
                      "file_id",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Returns"
                  },
                  "check_transfer_rejection": {
                    "type": "object",
                    "title": "Check Transfer Rejection",
                    "description": "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Rejections"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The transaction ID of the corresponding credit transaction."
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "check_transfer_stop_payment_request"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": [
                      "transfer_id",
                      "transaction_id",
                      "requested_at",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution": {
                    "type": "object",
                    "title": "Dispute Resolution",
                    "description": "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "disputed_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was disputed."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "disputed_transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit": {
                    "type": "object",
                    "title": "Empyreal Cash Deposit",
                    "description": "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example": {
                      "amount": 100,
                      "bag_id": "12345",
                      "deposit_date": "2020-01-31T23:59:59Z"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "bag_id": {
                        "type": "string",
                        "description": ""
                      },
                      "deposit_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "bag_id",
                      "deposit_date"
                    ],
                    "nullable": true,
                    "x-title-plural": "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer",
                    "description": "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfers"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Confirmation",
                    "description": "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the transfer"
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-03-01T00:00:00Z",
                      "period_end": "2023-03-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "accrued_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "sample_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "bank_migration",
                          "cashback",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "Bank Migration",
                          "Cashback",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "card_route_refund": {
                    "type": "object",
                    "title": "Deprecated Card Refund",
                    "description": "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Refunds"
                  },
                  "card_route_settlement": {
                    "type": "object",
                    "title": "Deprecated Card Settlement",
                    "description": "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Settlements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": {
                      "originator": "dashboard"
                    },
                    "properties": {
                      "originator": {
                        "type": "string",
                        "description": "Where the sample funds came from."
                      }
                    },
                    "required": [
                      "originator"
                    ],
                    "nullable": true,
                    "x-title-plural": "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Intention",
                    "description": "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Rejection",
                    "description": "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_check_conversion_return",
                  "ach_check_conversion",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_intention",
                  "check_transfer_return",
                  "check_transfer_rejection",
                  "check_transfer_stop_payment_request",
                  "dispute_resolution",
                  "empyreal_cash_deposit",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "card_route_refund",
                  "card_route_settlement",
                  "sample_funds",
                  "wire_drawdown_payment_intention",
                  "wire_drawdown_payment_rejection",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "x-title-plural": "Transactions"
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_wire_transfer_simulation_result"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_wire_transfer_simulation_result`."
          }
        },
        "required": [
          "transaction",
          "type"
        ],
        "x-title-plural": "Inbound Wire Transfer Simulation Results"
      },
      "inbound_card_authorization_simulation_result": {
        "type": "object",
        "title": "Inbound Card Authorization Simulation Result",
        "description": "The results of a Card Authorization simulation.",
        "example": {
          "pending_transaction": {
            "account_id": "account_in71c4amph0vgo2qllky",
            "amount": 100,
            "currency": "USD",
            "created_at": "2020-01-31T23:59:59Z",
            "description": "Frederick S. Holmes",
            "id": "pending_transaction_k1sfetcau2qbvjbzgju4",
            "route_id": "card_route_jk5pd79u6ydmbf9qzu6i",
            "route_type": "transfer_instruction",
            "source": {
              "category": "card_authorization",
              "card_authorization": {
                "merchant_acceptor_id": "5665270011000168",
                "merchant_descriptor": "AMAZON.COM",
                "merchant_category_code": "5734",
                "merchant_city": "New York",
                "merchant_country": "US",
                "network": "visa",
                "network_details": {
                  "visa": {
                    "electronic_commerce_indicator": "secure_electronic_commerce",
                    "point_of_service_entry_mode": "manual"
                  }
                },
                "amount": 100,
                "currency": "USD",
                "real_time_decision_id": null,
                "digital_wallet_token_id": null
              }
            },
            "status": "pending",
            "type": "pending_transaction"
          },
          "declined_transaction": null,
          "type": "inbound_card_authorization_simulation_result"
        },
        "properties": {
          "pending_transaction": {
            "type": "object",
            "title": "Pending Transaction",
            "description": "If the authorization attempt succeeds, this will contain the resulting Pending Transaction object. The Pending Transaction's `source` will be of `category: card_authorization`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "pending_transaction_k1sfetcau2qbvjbzgju4",
              "route_id": "card_route_jk5pd79u6ydmbf9qzu6i",
              "route_type": "transfer_instruction",
              "source": {
                "category": "ach_transfer_instruction",
                "ach_transfer_instruction": {
                  "amount": 100,
                  "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
                }
              },
              "status": "pending",
              "type": "pending_transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the account this Pending Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Pending Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Pending Transaction's currency. This will match the currency on the Pending Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Pending Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "For a Pending Transaction related to a transfer, this is the description you provide. For a Pending Transaction related to a payment, this is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Pending Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Pending Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Pending Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Pending Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.",
                "example": {
                  "category": "ach_transfer_instruction",
                  "ach_transfer_instruction": {
                    "amount": 100,
                    "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_instruction",
                      "ach_transfer_instruction",
                      "card_authorization",
                      "check_deposit_instruction",
                      "check_transfer_instruction",
                      "inbound_funds_hold",
                      "card_route_authorization",
                      "real_time_payments_transfer_instruction",
                      "wire_drawdown_payment_instruction",
                      "wire_transfer_instruction",
                      "other"
                    ],
                    "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Pending Transaction was created by a Account Transfer Instruction object. Details will be under the `account_transfer_instruction` object.",
                      "The Pending Transaction was created by a ACH Transfer Instruction object. Details will be under the `ach_transfer_instruction` object.",
                      "The Pending Transaction was created by a Card Authorization object. Details will be under the `card_authorization` object.",
                      "The Pending Transaction was created by a Check Deposit Instruction object. Details will be under the `check_deposit_instruction` object.",
                      "The Pending Transaction was created by a Check Transfer Instruction object. Details will be under the `check_transfer_instruction` object.",
                      "The Pending Transaction was created by a Inbound Funds Hold object. Details will be under the `inbound_funds_hold` object.",
                      "The Pending Transaction was created by a Deprecated Card Authorization object. Details will be under the `card_route_authorization` object.",
                      "The Pending Transaction was created by a Real Time Payments Transfer Instruction object. Details will be under the `real_time_payments_transfer_instruction` object.",
                      "The Pending Transaction was created by a Wire Drawdown Payment Instruction object. Details will be under the `wire_drawdown_payment_instruction` object.",
                      "The Pending Transaction was created by a Wire Transfer Instruction object. Details will be under the `wire_transfer_instruction` object.",
                      "The Pending Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_instruction": {
                    "type": "object",
                    "title": "Account Transfer Instruction",
                    "description": "A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Instructions"
                  },
                  "ach_transfer_instruction": {
                    "type": "object",
                    "title": "ACH Transfer Instruction",
                    "description": "A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Instructions"
                  },
                  "card_authorization": {
                    "type": "object",
                    "title": "Card Authorization",
                    "description": "A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.",
                    "example": {
                      "merchant_acceptor_id": "5665270011000168",
                      "merchant_descriptor": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "network": "visa",
                      "network_details": {
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "amount": 100,
                      "currency": "USD",
                      "real_time_decision_id": null,
                      "digital_wallet_token_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "network": {
                        "type": "string",
                        "enum": [
                          "visa"
                        ],
                        "description": "The payment network used to process this card authorization",
                        "x-enum-descriptions": [
                          "Visa"
                        ]
                      },
                      "network_details": {
                        "type": "object",
                        "title": "Network Details",
                        "description": "Fields specific to the `network`",
                        "properties": {
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "type": "string",
                                "enum": [
                                  "manual",
                                  "magnetic_stripe_no_cvv",
                                  "optical_code",
                                  "integrated_circuit_card",
                                  "contactless",
                                  "credential_on_file",
                                  "magnetic_stripe",
                                  "contactless_magnetic_stripe",
                                  "integrated_circuit_card_no_cvv"
                                ],
                                "description": "The method used to enter the cardholder's primary account number and card expiration date",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Manual key entry",
                                  "Magnetic stripe read, without card verification value",
                                  "Optical code",
                                  "Contact chip card",
                                  "Contactless read of chip card",
                                  "Transaction iniated using a credential that has previously been stored on file",
                                  "Magnetic stripe read",
                                  "Contactless read of magnetic stripe data",
                                  "Contact chip card, without card verification value"
                                ]
                              }
                            },
                            "required": [
                              "electronic_commerce_indicator",
                              "point_of_service_entry_mode"
                            ],
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": [
                          "visa"
                        ],
                        "x-title-plural": "Network Detailss"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was made via a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "network",
                      "network_details",
                      "amount",
                      "currency",
                      "real_time_decision_id",
                      "digital_wallet_token_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Authorizations"
                  },
                  "check_deposit_instruction": {
                    "type": "object",
                    "title": "Check Deposit Instruction",
                    "description": "A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "back_image_file_id": "file_26khfk98mzfz90a11oqx",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "front_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the image of the front of the check that was deposited."
                      },
                      "back_image_file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing the image of the back of the check that was deposited.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "front_image_file_id",
                      "back_image_file_id",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Instructions"
                  },
                  "check_transfer_instruction": {
                    "type": "object",
                    "title": "Check Transfer Instruction",
                    "description": "A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Instructions"
                  },
                  "inbound_funds_hold": {
                    "type": "object",
                    "title": "Inbound Funds Hold",
                    "description": "A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "automatically_releases_at": "2020-01-31T23:59:59Z",
                      "released_at": null,
                      "status": "held",
                      "held_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The held amount in the minor unit of the account's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "automatically_releases_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the hold will be released automatically. Certain conditions may cause it to be released before this time."
                      },
                      "released_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the hold was released (if it has been released).",
                        "nullable": true
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "held",
                          "complete"
                        ],
                        "description": "The status of the hold.",
                        "x-enum-descriptions": [
                          "Funds are still being held.",
                          "Funds have been released."
                        ]
                      },
                      "held_transaction_id": {
                        "type": "string",
                        "description": "The ID of the Transaction for which funds were held.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "automatically_releases_at",
                      "released_at",
                      "status",
                      "held_transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Funds Holds"
                  },
                  "card_route_authorization": {
                    "type": "object",
                    "title": "Deprecated Card Authorization",
                    "description": "A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "merchant_acceptor_id": "6631945550173363",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "merchant_descriptor": "THUMP COFFEE",
                      "merchant_category_code": "5734",
                      "merchant_state": "NY"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_state"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Authorizations"
                  },
                  "wire_drawdown_payment_instruction": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Instruction",
                    "description": "A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Instructions"
                  },
                  "wire_transfer_instruction": {
                    "type": "object",
                    "title": "Wire Transfer Instruction",
                    "description": "A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Instructions"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_instruction",
                  "ach_transfer_instruction",
                  "card_authorization",
                  "check_deposit_instruction",
                  "check_transfer_instruction",
                  "inbound_funds_hold",
                  "card_route_authorization",
                  "wire_drawdown_payment_instruction",
                  "wire_transfer_instruction"
                ],
                "x-title-plural": "Pending Transaction Sources"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "complete"
                ],
                "description": "Whether the Pending Transaction has been confirmed and has an associated Transaction.",
                "x-enum-descriptions": [
                  "The Pending Transaction is still awaiting confirmation.",
                  "The Pending Transaction is confirmed. An associated Transaction exists for this object. The Pending Transaction will no longer count against your balance and can generally be hidden from UIs, etc."
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "pending_transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `pending_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "status",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Pending Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the authorization attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: card_decline`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 1750,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "declined_transaction_17jbn0yyhvkt4v4ooym8",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "ach_decline",
                "ach_decline": {
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "declined_transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Declined Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "ach_decline",
                  "ach_decline": {
                    "amount": 1750,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_id": "0987654321",
                    "reason": "insufficient_funds",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "card_route_decline",
                      "other"
                    ],
                    "description": "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.",
                      "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.",
                      "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.",
                      "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.",
                      "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "transaction_not_allowed",
                          "group_locked",
                          "insufficient_funds",
                          "no_ach_route",
                          "originator_request"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "A credit was refused.",
                          "Other.",
                          "The account's entity is not active.",
                          "The transaction is not allowed per Increase's terms",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "The account number that was debited does not exist.",
                          "Other."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "372909060886",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_category_code": "5998",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "network": "visa",
                      "network_details": {
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "amount": -1000,
                      "currency": "USD",
                      "reason": "insufficient_funds",
                      "merchant_state": "CA",
                      "real_time_decision_id": null,
                      "digital_wallet_token_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "network": {
                        "type": "string",
                        "enum": [
                          "visa"
                        ],
                        "description": "The payment network used to process this card authorization",
                        "x-enum-descriptions": [
                          "Visa"
                        ]
                      },
                      "network_details": {
                        "type": "object",
                        "title": "Network Details",
                        "description": "Fields specific to the `network`",
                        "properties": {
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "type": "string",
                                "enum": [
                                  "manual",
                                  "magnetic_stripe_no_cvv",
                                  "optical_code",
                                  "integrated_circuit_card",
                                  "contactless",
                                  "credential_on_file",
                                  "magnetic_stripe",
                                  "contactless_magnetic_stripe",
                                  "integrated_circuit_card_no_cvv"
                                ],
                                "description": "The method used to enter the cardholder's primary account number and card expiration date",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Manual key entry",
                                  "Magnetic stripe read, without card verification value",
                                  "Optical code",
                                  "Contact chip card",
                                  "Contactless read of chip card",
                                  "Transaction iniated using a credential that has previously been stored on file",
                                  "Magnetic stripe read",
                                  "Contactless read of magnetic stripe data",
                                  "Contact chip card, without card verification value"
                                ]
                              }
                            },
                            "required": [
                              "electronic_commerce_indicator",
                              "point_of_service_entry_mode"
                            ],
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": [
                          "visa"
                        ],
                        "x-title-plural": "Network Detailss"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing"
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "network",
                      "network_details",
                      "amount",
                      "currency",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id",
                      "digital_wallet_token_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "unable_to_locate_account",
                          "unable_to_process",
                          "refer_to_image",
                          "stop_payment_requested",
                          "returned"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Unable to locate account.",
                          "Unable to process.",
                          "Refer to image.",
                          "Stop payment requested for this check.",
                          "Check was returned to sender."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Decline",
                    "description": "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "card_route_decline": {
                    "type": "object",
                    "title": "Deprecated Card Decline",
                    "description": "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                    "example": {
                      "amount": -1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "card_route_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "declined_transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_card_authorization_simulation_result"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_card_authorization_simulation_result`."
          }
        },
        "required": [
          "pending_transaction",
          "declined_transaction",
          "type"
        ],
        "x-title-plural": "Inbound Card Authorization Simulation Results"
      },
      "inbound_digital_wallet_token_request_simulation_result": {
        "type": "object",
        "title": "Inbound Digital Wallet Token Request Simulation Result",
        "description": "The results of a Digital Wallet Token simulation.",
        "example": {
          "decline_reason": null,
          "digital_wallet_token_id": "digital_wallet_token_izi62go3h51p369jrie0",
          "type": "inbound_digital_wallet_token_request_simulation_result"
        },
        "properties": {
          "decline_reason": {
            "type": "string",
            "enum": [
              "card_not_active",
              "no_verification_method",
              "webhook_timed_out",
              "webhook_declined"
            ],
            "description": "If the simulated tokenization attempt was declined, this field contains details as to why.",
            "nullable": true,
            "x-enum-descriptions": [
              "The card is not active.",
              "The card does not have a two-factor authentication method.",
              "Your webhook timed out when evaluating the token provisioning attempt.",
              "Your webhook declined the token provisioning attempt."
            ]
          },
          "digital_wallet_token_id": {
            "type": "string",
            "description": "If the simulated tokenization attempt was accepted, this field contains the id of the Digital Wallet Token that was created.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_digital_wallet_token_request_simulation_result"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_digital_wallet_token_request_simulation_result`."
          }
        },
        "required": [
          "decline_reason",
          "digital_wallet_token_id",
          "type"
        ],
        "x-title-plural": "Inbound Digital Wallet Token Request Simulation Results"
      },
      "inbound_real_time_payments_transfer_simulation_result": {
        "type": "object",
        "title": "Inbound Real Time Payments Transfer Simulation Result",
        "description": "The results of an inbound Real Time Payments Transfer simulation.",
        "example": {
          "transaction": {
            "account_id": "account_in71c4amph0vgo2qllky",
            "amount": 100,
            "currency": "USD",
            "created_at": "2020-01-31T23:59:59Z",
            "description": "Frederick S. Holmes",
            "id": "transaction_uyrp7fld2ium70oa7oi",
            "route_id": "account_number_v18nkfqm6afpsrvy82b2",
            "route_type": "account_number",
            "source": {
              "category": "inbound_real_time_payments_transfer_confirmation",
              "inbound_real_time_payments_transfer_confirmation": {
                "amount": 100,
                "currency": "USD",
                "creditor_name": "Ian Crease",
                "debtor_name": "National Phonograph Company",
                "debtor_account_number": "987654321",
                "debtor_routing_number": "101050001",
                "transaction_identification": "20220501234567891T1BSLZO01745013025",
                "remittance_information": "Invoice 29582"
              }
            },
            "type": "transaction"
          },
          "declined_transaction": null,
          "type": "inbound_real_time_payments_transfer_simulation_result"
        },
        "properties": {
          "transaction": {
            "type": "object",
            "title": "Transaction",
            "description": "If the Real Time Payments Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_real_time_payments_transfer_confirmation`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 100,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "transaction_uyrp7fld2ium70oa7oi",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "inbound_ach_transfer",
                "inbound_ach_transfer": {
                  "amount": 100,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_entry_description": "RESERVE",
                  "originator_company_id": "0987654321",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "inbound_ach_transfer",
                  "inbound_ach_transfer": {
                    "amount": 100,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_entry_description": "RESERVE",
                    "originator_company_id": "0987654321",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "account_transfer_intention",
                      "ach_check_conversion_return",
                      "ach_check_conversion",
                      "ach_transfer_intention",
                      "ach_transfer_rejection",
                      "ach_transfer_return",
                      "card_dispute_acceptance",
                      "card_refund",
                      "card_settlement",
                      "check_deposit_acceptance",
                      "check_deposit_return",
                      "check_transfer_intention",
                      "check_transfer_return",
                      "check_transfer_rejection",
                      "check_transfer_stop_payment_request",
                      "dispute_resolution",
                      "empyreal_cash_deposit",
                      "inbound_ach_transfer",
                      "inbound_ach_transfer_return_intention",
                      "inbound_check",
                      "inbound_international_ach_transfer",
                      "inbound_real_time_payments_transfer_confirmation",
                      "inbound_wire_drawdown_payment_reversal",
                      "inbound_wire_drawdown_payment",
                      "inbound_wire_reversal",
                      "inbound_wire_transfer",
                      "interest_payment",
                      "internal_general_ledger_transaction",
                      "internal_source",
                      "card_route_refund",
                      "card_route_settlement",
                      "real_time_payments_transfer_acknowledgement",
                      "sample_funds",
                      "wire_drawdown_payment_intention",
                      "wire_drawdown_payment_rejection",
                      "wire_transfer_intention",
                      "wire_transfer_rejection",
                      "other"
                    ],
                    "description": "The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Transaction was created by a Account Transfer Intention object. Details will be under the `account_transfer_intention` object.",
                      "The Transaction was created by a ACH Check Conversion Return object. Details will be under the `ach_check_conversion_return` object.",
                      "The Transaction was created by a ACH Check Conversion object. Details will be under the `ach_check_conversion` object.",
                      "The Transaction was created by a ACH Transfer Intention object. Details will be under the `ach_transfer_intention` object.",
                      "The Transaction was created by a ACH Transfer Rejection object. Details will be under the `ach_transfer_rejection` object.",
                      "The Transaction was created by a ACH Transfer Return object. Details will be under the `ach_transfer_return` object.",
                      "The Transaction was created by a Card Dispute Acceptance object. Details will be under the `card_dispute_acceptance` object.",
                      "The Transaction was created by a Card Refund object. Details will be under the `card_refund` object.",
                      "The Transaction was created by a Card Settlement object. Details will be under the `card_settlement` object.",
                      "The Transaction was created by a Check Deposit Acceptance object. Details will be under the `check_deposit_acceptance` object.",
                      "The Transaction was created by a Check Deposit Return object. Details will be under the `check_deposit_return` object.",
                      "The Transaction was created by a Check Transfer Intention object. Details will be under the `check_transfer_intention` object.",
                      "The Transaction was created by a Check Transfer Return object. Details will be under the `check_transfer_return` object.",
                      "The Transaction was created by a Check Transfer Rejection object. Details will be under the `check_transfer_rejection` object.",
                      "The Transaction was created by a Check Transfer Stop Payment Request object. Details will be under the `check_transfer_stop_payment_request` object.",
                      "The Transaction was created by a Dispute Resolution object. Details will be under the `dispute_resolution` object.",
                      "The Transaction was created by a Empyreal Cash Deposit object. Details will be under the `empyreal_cash_deposit` object.",
                      "The Transaction was created by a Inbound ACH Transfer object. Details will be under the `inbound_ach_transfer` object.",
                      "The Transaction was created by a Inbound ACH Transfer Return Intention object. Details will be under the `inbound_ach_transfer_return_intention` object.",
                      "The Transaction was created by a Inbound Check object. Details will be under the `inbound_check` object.",
                      "The Transaction was created by a Inbound International ACH Transfer object. Details will be under the `inbound_international_ach_transfer` object.",
                      "The Transaction was created by a Inbound Real Time Payments Transfer Confirmation object. Details will be under the `inbound_real_time_payments_transfer_confirmation` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment Reversal object. Details will be under the `inbound_wire_drawdown_payment_reversal` object.",
                      "The Transaction was created by a Inbound Wire Drawdown Payment object. Details will be under the `inbound_wire_drawdown_payment` object.",
                      "The Transaction was created by a Inbound Wire Reversal object. Details will be under the `inbound_wire_reversal` object.",
                      "The Transaction was created by a Inbound Wire Transfer object. Details will be under the `inbound_wire_transfer` object.",
                      "The Transaction was created by a Interest Payment object. Details will be under the `interest_payment` object.",
                      "The Transaction was created by a Internal General Ledger Transaction object. Details will be under the `internal_general_ledger_transaction` object.",
                      "The Transaction was created by a Internal Source object. Details will be under the `internal_source` object.",
                      "The Transaction was created by a Deprecated Card Refund object. Details will be under the `card_route_refund` object.",
                      "The Transaction was created by a Deprecated Card Settlement object. Details will be under the `card_route_settlement` object.",
                      "The Transaction was created by a Real Time Payments Transfer Acknowledgement object. Details will be under the `real_time_payments_transfer_acknowledgement` object.",
                      "The Transaction was created by a Sample Funds object. Details will be under the `sample_funds` object.",
                      "The Transaction was created by a Wire Drawdown Payment Intention object. Details will be under the `wire_drawdown_payment_intention` object.",
                      "The Transaction was created by a Wire Drawdown Payment Rejection object. Details will be under the `wire_drawdown_payment_rejection` object.",
                      "The Transaction was created by a Wire Transfer Intention object. Details will be under the `wire_transfer_intention` object.",
                      "The Transaction was created by a Wire Transfer Rejection object. Details will be under the `wire_transfer_rejection` object.",
                      "The Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "account_transfer_intention": {
                    "type": "object",
                    "title": "Account Transfer Intention",
                    "description": "A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "description": "Frederick S. Holmes",
                      "destination_account_id": "account_uf16sut2ct5bevmq3eh",
                      "source_account_id": "account_in71c4amph0vgo2qllky",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "description": "The description you chose to give the transfer."
                      },
                      "destination_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account to where the Account Transfer was sent."
                      },
                      "source_account_id": {
                        "type": "string",
                        "description": "The identifier of the Account from where the Account Transfer was sent."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Account Transfer that led to this Pending Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "description",
                      "destination_account_id",
                      "source_account_id",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Account Transfer Intentions"
                  },
                  "ach_check_conversion_return": {
                    "type": "object",
                    "title": "ACH Check Conversion Return",
                    "description": "A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.",
                    "example": {
                      "amount": 100,
                      "return_reason_code": ""
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "description": "Why the transfer was returned."
                      }
                    },
                    "required": [
                      "amount",
                      "return_reason_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversion Returns"
                  },
                  "ach_check_conversion": {
                    "type": "object",
                    "title": "ACH Check Conversion",
                    "description": "A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.",
                    "example": {
                      "amount": 100,
                      "file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "The identifier of the File containing an image of the returned check."
                      }
                    },
                    "required": [
                      "amount",
                      "file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Check Conversions"
                  },
                  "ach_transfer_intention": {
                    "type": "object",
                    "title": "ACH Transfer Intention",
                    "description": "A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "statement_descriptor": "Frederick S. Holmes",
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "statement_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "statement_descriptor",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Intentions"
                  },
                  "ach_transfer_rejection": {
                    "type": "object",
                    "title": "ACH Transfer Rejection",
                    "description": "A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.",
                    "example": {
                      "transfer_id": "account_transfer_7k9qe1ysdgqztnt63l7n"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Rejections"
                  },
                  "ach_transfer_return": {
                    "type": "object",
                    "title": "ACH Transfer Return",
                    "description": "A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.",
                    "example": {
                      "created_at": "2020-01-31T23:59:59Z",
                      "return_reason_code": "insufficient_fund",
                      "transfer_id": "ach_transfer_uoxatyh3lt5evrsdvo7q",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created."
                      },
                      "return_reason_code": {
                        "type": "string",
                        "enum": [
                          "insufficient_fund",
                          "no_account",
                          "account_closed",
                          "invalid_account_number_structure",
                          "account_frozen_entry_returned_per_ofac_instruction",
                          "credit_entry_refused_by_receiver",
                          "unauthorized_debit_to_consumer_account_using_corporate_sec_code",
                          "corporate_customer_advised_not_authorized",
                          "payment_stopped",
                          "non_transaction_account",
                          "uncollected_funds",
                          "routing_number_check_digit_error",
                          "customer_advised_unauthorized_improper_ineligible_or_incomplete",
                          "amount_field_error",
                          "authorization_revoked_by_customer",
                          "invalid_ach_routing_number",
                          "file_record_edit_criteria",
                          "enr_invalid_individual_name",
                          "returned_per_odfi_request",
                          "addenda_error",
                          "limited_participation_dfi",
                          "incorrectly_coded_outbound_international_payment",
                          "other"
                        ],
                        "description": "Why the ACH Transfer was returned.",
                        "x-enum-descriptions": [
                          "Insufficient funds in the source account.",
                          "The account does not exist or the receiving bank was unable to locate it.",
                          "The account is closed.",
                          "The account number is invalid at the receiving bank.",
                          "The account was frozen per the Office of Foreign Assets Control.",
                          "The receiving bank account refused a credit transfer.",
                          "The receiving bank rejected because of an incorrect Standard Entry Class code.",
                          "The corporate customer reversed the transfer.",
                          "The receiving bank stopped payment on this transfer.",
                          "The receiving bank account does not perform transfers.",
                          "The receiving bank account does not have enough available balance for the transfer.",
                          "The routing number is incorrect.",
                          "The customer reversed the transfer.",
                          "The amount field is incorrect or too large.",
                          "The customer who initiated the transfer revoked authorization.",
                          "The routing number is invalid.",
                          "The receiving bank is unable to process a field in the transfer.",
                          "The individual name field was invalid.",
                          "The originating financial institution reversed the transfer.",
                          "The addenda record is incorrect or missing.",
                          "The receiving bank's regulatory supervisor has limited their participation.",
                          "The outbound international ACH transfer was incorrect.",
                          "Any other ACH return reason."
                        ]
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the ACH Transfer associated with this return."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Tranasaction associated with this return."
                      }
                    },
                    "required": [
                      "created_at",
                      "return_reason_code",
                      "transfer_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Transfer Returns"
                  },
                  "card_dispute_acceptance": {
                    "type": "object",
                    "title": "Card Dispute Acceptance",
                    "description": "A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.",
                    "example": {
                      "accepted_at": "2020-01-31T23:59:59Z",
                      "card_dispute_id": "card_dispute_h9sc95nbl1cgltpp7men",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted."
                      },
                      "card_dispute_id": {
                        "type": "string",
                        "description": "The identifier of the Card Dispute that was accepted."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was created to return the disputed funds to your account.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "accepted_at",
                      "card_dispute_id",
                      "transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Dispute Acceptances"
                  },
                  "card_refund": {
                    "type": "object",
                    "title": "Card Refund",
                    "description": "A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "card_settlement_transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "type": "card_refund"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "card_settlement_transaction_id": {
                        "type": "string",
                        "description": "The identifier for the Transaction this refunds, if any.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_refund"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_refund`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "card_settlement_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Refunds"
                  },
                  "card_settlement": {
                    "type": "object",
                    "title": "Card Settlement",
                    "description": "A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "presentment_amount": 100,
                      "presentment_currency": "USD",
                      "merchant_city": "New York",
                      "merchant_country": "US",
                      "merchant_name": "AMAZON.COM",
                      "merchant_category_code": "5734",
                      "merchant_state": "NY",
                      "pending_transaction_id": null,
                      "type": "card_settlement"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "presentment_amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's presentment currency."
                      },
                      "presentment_currency": {
                        "type": "string",
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency."
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "pending_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Pending Transaction associated with this Transaction.",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "card_settlement"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `card_settlement`."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "presentment_amount",
                      "presentment_currency",
                      "merchant_city",
                      "merchant_country",
                      "merchant_name",
                      "merchant_category_code",
                      "merchant_state",
                      "pending_transaction_id",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Settlements"
                  },
                  "check_deposit_acceptance": {
                    "type": "object",
                    "title": "Check Deposit Acceptance",
                    "description": "A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "auxiliary_on_us": "101",
                      "serial_number": null,
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The account number printed on the check."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The routing number printed on the check."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "An additional line of metadata printed on the check. This typically includes the check number for business checks.",
                        "nullable": true
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.",
                        "nullable": true
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The ID of the Check Deposit that was accepted."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "account_number",
                      "routing_number",
                      "auxiliary_on_us",
                      "serial_number",
                      "check_deposit_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Acceptances"
                  },
                  "check_deposit_return": {
                    "type": "object",
                    "title": "Check Deposit Return",
                    "description": "A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.",
                    "example": {
                      "amount": 100,
                      "returned_at": "2020-01-31T23:59:59Z",
                      "currency": "USD",
                      "check_deposit_id": "check_deposit_f06n9gpg7sxn8t19lfc1",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "return_reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_deposit_id": {
                        "type": "string",
                        "description": "The identifier of the Check Deposit that was returned."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The identifier of the transaction that reversed the original check deposit transaction."
                      },
                      "return_reason": {
                        "type": "string",
                        "enum": [
                          "ach_conversion_not_supported",
                          "closed_account",
                          "duplicate_submission",
                          "insufficient_funds",
                          "no_account",
                          "not_authorized",
                          "stale_dated",
                          "stop_payment",
                          "unknown_reason",
                          "unmatched_details",
                          "unreadable_image"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "The check doesn't allow ACH conversion.",
                          "The account is closed.",
                          "The check has already been deposited.",
                          "Insufficient funds",
                          "No account was found matching the check details.",
                          "The check was not authorized.",
                          "The check is too old.",
                          "The payment has been stopped by the account holder.",
                          "The reason for the return is unknown.",
                          "The image doesn't match the details submitted.",
                          "The image could not be read."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "returned_at",
                      "currency",
                      "check_deposit_id",
                      "transaction_id",
                      "return_reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Deposit Returns"
                  },
                  "check_transfer_intention": {
                    "type": "object",
                    "title": "Check Transfer Intention",
                    "description": "A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.",
                    "example": {
                      "address_line1": "33 Liberty Street",
                      "address_line2": null,
                      "address_city": "New York",
                      "address_state": "NY",
                      "address_zip": "10045",
                      "amount": 1000,
                      "currency": "USD",
                      "recipient_name": "Ian Crease",
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The street address of the check's destination."
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The second line of the address of the check's destination.",
                        "nullable": true
                      },
                      "address_city": {
                        "type": "string",
                        "description": "The city of the check's destination."
                      },
                      "address_state": {
                        "type": "string",
                        "description": "The state of the check's destination."
                      },
                      "address_zip": {
                        "type": "string",
                        "description": "The postal code of the check's destination."
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "recipient_name": {
                        "type": "string",
                        "description": "The name that will be printed on the check."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer with which this is associated."
                      }
                    },
                    "required": [
                      "address_line1",
                      "address_line2",
                      "address_city",
                      "address_state",
                      "address_zip",
                      "amount",
                      "currency",
                      "recipient_name",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Intentions"
                  },
                  "check_transfer_return": {
                    "type": "object",
                    "title": "Check Transfer Return",
                    "description": "A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "file_id": null,
                      "reason": "mail_delivery_failure"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the returned Check Transfer."
                      },
                      "file_id": {
                        "type": "string",
                        "description": "If available, a document with additional information about the return.",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "mail_delivery_failure",
                          "refused_by_recipient"
                        ],
                        "description": "The reason why the check was returned.",
                        "x-enum-descriptions": [
                          "Mail delivery failed and the check was returned to sender.",
                          "The check arrived and the recipient refused to deposit it."
                        ]
                      }
                    },
                    "required": [
                      "transfer_id",
                      "file_id",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Returns"
                  },
                  "check_transfer_rejection": {
                    "type": "object",
                    "title": "Check Transfer Rejection",
                    "description": "A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The identifier of the Check Transfer that led to this Transaction."
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Rejections"
                  },
                  "check_transfer_stop_payment_request": {
                    "type": "object",
                    "title": "Check Transfer Stop Payment Request",
                    "description": "A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.",
                    "example": {
                      "transfer_id": "check_transfer_30b43acfu9vw8fyc4f5",
                      "transaction_id": "transaction_uyrp7fld2ium70oa7oi",
                      "requested_at": "2020-01-31T23:59:59Z",
                      "type": "check_transfer_stop_payment_request"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": "The ID of the check transfer that was stopped."
                      },
                      "transaction_id": {
                        "type": "string",
                        "description": "The transaction ID of the corresponding credit transaction."
                      },
                      "requested_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time the stop-payment was requested."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "check_transfer_stop_payment_request"
                        ],
                        "description": "A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`."
                      }
                    },
                    "required": [
                      "transfer_id",
                      "transaction_id",
                      "requested_at",
                      "type"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Transfer Stop Payment Requests"
                  },
                  "dispute_resolution": {
                    "type": "object",
                    "title": "Dispute Resolution",
                    "description": "A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "disputed_transaction_id": "transaction_uyrp7fld2ium70oa7oi"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "disputed_transaction_id": {
                        "type": "string",
                        "description": "The identifier of the Transaction that was disputed."
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "disputed_transaction_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Dispute Resolutions"
                  },
                  "empyreal_cash_deposit": {
                    "type": "object",
                    "title": "Empyreal Cash Deposit",
                    "description": "A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.",
                    "example": {
                      "amount": 100,
                      "bag_id": "12345",
                      "deposit_date": "2020-01-31T23:59:59Z"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "bag_id": {
                        "type": "string",
                        "description": ""
                      },
                      "deposit_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "bag_id",
                      "deposit_date"
                    ],
                    "nullable": true,
                    "x-title-plural": "Empyreal Cash Deposits"
                  },
                  "inbound_ach_transfer": {
                    "type": "object",
                    "title": "Inbound ACH Transfer",
                    "description": "A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.",
                    "example": {
                      "amount": 100,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_entry_description": "RESERVE",
                      "originator_company_id": "0987654321",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_entry_description",
                      "originator_company_id",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound ACH Transfers"
                  },
                  "inbound_check": {
                    "type": "object",
                    "title": "Inbound Check",
                    "description": "A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "check_number": "       00000123",
                      "check_front_image_file_id": "file_makxrc67oh9l6sg7w9yc",
                      "check_rear_image_file_id": "file_makxrc67oh9l6sg7w9yc"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "check_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_front_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "check_rear_image_file_id": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "check_number",
                      "check_front_image_file_id",
                      "check_rear_image_file_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Checks"
                  },
                  "inbound_international_ach_transfer": {
                    "type": "object",
                    "title": "Inbound International ACH Transfer",
                    "description": "A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound International ACH Transfers"
                  },
                  "inbound_real_time_payments_transfer_confirmation": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Confirmation",
                    "description": "A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the transfer"
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Confirmations"
                  },
                  "inbound_wire_drawdown_payment_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment Reversal",
                    "description": "A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payment Reversals"
                  },
                  "inbound_wire_drawdown_payment": {
                    "type": "object",
                    "title": "Inbound Wire Drawdown Payment",
                    "description": "A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire drawdown payment",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Drawdown Payments"
                  },
                  "inbound_wire_reversal": {
                    "type": "object",
                    "title": "Inbound Wire Reversal",
                    "description": "A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.",
                    "example": {
                      "amount": 12345,
                      "description": "Inbound wire reversal 2022021100335128",
                      "input_cycle_date": "2022-02-11",
                      "input_sequence_number": "11023",
                      "input_source": "B6B7HU2R",
                      "input_message_accountability_data": "20220211B6B7HU2R011023",
                      "previous_message_input_message_accountability_data": "20220210MMQFMP0P000007",
                      "previous_message_input_cycle_date": "2022-02-10",
                      "previous_message_input_sequence_number": "3",
                      "previous_message_input_source": "MMQFMP0P",
                      "receiver_financial_institution_information": null,
                      "financial_institution_to_financial_institution_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount that was reversed."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description on the reversal message from Fedwire."
                      },
                      "input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire reversal."
                      },
                      "input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number."
                      },
                      "input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier."
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier."
                      },
                      "previous_message_input_message_accountability_data": {
                        "type": "string",
                        "description": "The Fedwire transaction identifier for the wire transfer that was reversed."
                      },
                      "previous_message_input_cycle_date": {
                        "type": "string",
                        "format": "date",
                        "description": "The Fedwire cycle date for the wire transfer that was reversed."
                      },
                      "previous_message_input_sequence_number": {
                        "type": "string",
                        "description": "The Fedwire sequence number for the wire transfer that was reversed."
                      },
                      "previous_message_input_source": {
                        "type": "string",
                        "description": "The Fedwire input source identifier for the wire transfer that was reversed."
                      },
                      "receiver_financial_institution_information": {
                        "type": "string",
                        "description": "Information included in the wire reversal for the receiving financial institution.",
                        "nullable": true
                      },
                      "financial_institution_to_financial_institution_information": {
                        "type": "string",
                        "description": "Additional financial institution information included in the wire reversal.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "description",
                      "input_cycle_date",
                      "input_sequence_number",
                      "input_source",
                      "input_message_accountability_data",
                      "previous_message_input_message_accountability_data",
                      "previous_message_input_cycle_date",
                      "previous_message_input_sequence_number",
                      "previous_message_input_source",
                      "receiver_financial_institution_information",
                      "financial_institution_to_financial_institution_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Reversals"
                  },
                  "inbound_wire_transfer": {
                    "type": "object",
                    "title": "Inbound Wire Transfer",
                    "description": "A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.",
                    "example": {
                      "amount": 100,
                      "beneficiary_address_line1": null,
                      "beneficiary_address_line2": null,
                      "beneficiary_address_line3": null,
                      "beneficiary_name": null,
                      "beneficiary_reference": null,
                      "description": "Inbound wire transfer",
                      "input_message_accountability_data": null,
                      "originator_address_line1": null,
                      "originator_address_line2": null,
                      "originator_address_line3": null,
                      "originator_name": null,
                      "originator_to_beneficiary_information_line1": null,
                      "originator_to_beneficiary_information_line2": null,
                      "originator_to_beneficiary_information_line3": null,
                      "originator_to_beneficiary_information_line4": null,
                      "originator_to_beneficiary_information": null
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "beneficiary_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "beneficiary_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "description": ""
                      },
                      "input_message_accountability_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_address_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line1": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line3": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information_line4": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_to_beneficiary_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "beneficiary_address_line1",
                      "beneficiary_address_line2",
                      "beneficiary_address_line3",
                      "beneficiary_name",
                      "beneficiary_reference",
                      "description",
                      "input_message_accountability_data",
                      "originator_address_line1",
                      "originator_address_line2",
                      "originator_address_line3",
                      "originator_name",
                      "originator_to_beneficiary_information_line1",
                      "originator_to_beneficiary_information_line2",
                      "originator_to_beneficiary_information_line3",
                      "originator_to_beneficiary_information_line4",
                      "originator_to_beneficiary_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Wire Transfers"
                  },
                  "interest_payment": {
                    "type": "object",
                    "title": "Interest Payment",
                    "description": "A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "period_start": "2023-03-01T00:00:00Z",
                      "period_end": "2023-03-31T23:59:59Z",
                      "accrued_on_account_id": "account_in71c4amph0vgo2qllky"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "period_start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The start of the period for which this transaction paid interest."
                      },
                      "period_end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end of the period for which this transaction paid interest."
                      },
                      "accrued_on_account_id": {
                        "type": "string",
                        "description": "The account on which the interest was accrued.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "period_start",
                      "period_end",
                      "accrued_on_account_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Interest Payments"
                  },
                  "internal_source": {
                    "type": "object",
                    "title": "Internal Source",
                    "description": "A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "sample_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "bank_migration",
                          "cashback",
                          "empyreal_adjustment",
                          "error",
                          "error_correction",
                          "fees",
                          "interest",
                          "sample_funds",
                          "sample_funds_return"
                        ],
                        "description": "",
                        "x-enum-descriptions": [
                          "Bank Migration",
                          "Cashback",
                          "Empyreal adjustment",
                          "Error",
                          "Error correction",
                          "Fees",
                          "Interest",
                          "Sample funds",
                          "Sample funds return"
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Internal Sources"
                  },
                  "card_route_refund": {
                    "type": "object",
                    "title": "Deprecated Card Refund",
                    "description": "A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Refunds"
                  },
                  "card_route_settlement": {
                    "type": "object",
                    "title": "Deprecated Card Settlement",
                    "description": "A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.",
                    "example": {
                      "amount": 1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Settlements"
                  },
                  "sample_funds": {
                    "type": "object",
                    "title": "Sample Funds",
                    "description": "A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.",
                    "example": {
                      "originator": "dashboard"
                    },
                    "properties": {
                      "originator": {
                        "type": "string",
                        "description": "Where the sample funds came from."
                      }
                    },
                    "required": [
                      "originator"
                    ],
                    "nullable": true,
                    "x-title-plural": "Sample Fundss"
                  },
                  "wire_drawdown_payment_intention": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Intention",
                    "description": "A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": ""
                      },
                      "routing_number": {
                        "type": "string",
                        "description": ""
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": ""
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Intentions"
                  },
                  "wire_drawdown_payment_rejection": {
                    "type": "object",
                    "title": "Wire Drawdown Payment Rejection",
                    "description": "A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Drawdown Payment Rejections"
                  },
                  "wire_transfer_intention": {
                    "type": "object",
                    "title": "Wire Transfer Intention",
                    "description": "A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.",
                    "example": {
                      "amount": 100,
                      "account_number": "987654321",
                      "routing_number": "101050001",
                      "message_to_recipient": "HELLO",
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The transfer amount in USD cents."
                      },
                      "account_number": {
                        "type": "string",
                        "description": "The destination account number."
                      },
                      "routing_number": {
                        "type": "string",
                        "description": "The American Bankers' Association (ABA) Routing Transit Number (RTN)."
                      },
                      "message_to_recipient": {
                        "type": "string",
                        "description": "The message that will show on the recipient's bank statement."
                      },
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "account_number",
                      "routing_number",
                      "message_to_recipient",
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Intentions"
                  },
                  "wire_transfer_rejection": {
                    "type": "object",
                    "title": "Wire Transfer Rejection",
                    "description": "A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.",
                    "example": {
                      "transfer_id": "wire_transfer_5akynk7dqsq25qwk9q2u"
                    },
                    "properties": {
                      "transfer_id": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "transfer_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Wire Transfer Rejections"
                  }
                },
                "required": [
                  "category",
                  "account_transfer_intention",
                  "ach_check_conversion_return",
                  "ach_check_conversion",
                  "ach_transfer_intention",
                  "ach_transfer_rejection",
                  "ach_transfer_return",
                  "card_dispute_acceptance",
                  "card_refund",
                  "card_settlement",
                  "check_deposit_acceptance",
                  "check_deposit_return",
                  "check_transfer_intention",
                  "check_transfer_return",
                  "check_transfer_rejection",
                  "check_transfer_stop_payment_request",
                  "dispute_resolution",
                  "empyreal_cash_deposit",
                  "inbound_ach_transfer",
                  "inbound_check",
                  "inbound_international_ach_transfer",
                  "inbound_real_time_payments_transfer_confirmation",
                  "inbound_wire_drawdown_payment_reversal",
                  "inbound_wire_drawdown_payment",
                  "inbound_wire_reversal",
                  "inbound_wire_transfer",
                  "interest_payment",
                  "internal_source",
                  "card_route_refund",
                  "card_route_settlement",
                  "sample_funds",
                  "wire_drawdown_payment_intention",
                  "wire_drawdown_payment_rejection",
                  "wire_transfer_intention",
                  "wire_transfer_rejection"
                ],
                "x-title-plural": "Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Transactions"
          },
          "declined_transaction": {
            "type": "object",
            "title": "Declined Transaction",
            "description": "If the Real Time Payments Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_real_time_payments_transfer_decline`.",
            "example": {
              "account_id": "account_in71c4amph0vgo2qllky",
              "amount": 1750,
              "currency": "USD",
              "created_at": "2020-01-31T23:59:59Z",
              "description": "Frederick S. Holmes",
              "id": "declined_transaction_17jbn0yyhvkt4v4ooym8",
              "route_id": "account_number_v18nkfqm6afpsrvy82b2",
              "route_type": "account_number",
              "source": {
                "category": "ach_decline",
                "ach_decline": {
                  "amount": 1750,
                  "originator_company_name": "BIG BANK",
                  "originator_company_descriptive_date": null,
                  "originator_company_discretionary_data": null,
                  "originator_company_id": "0987654321",
                  "reason": "insufficient_funds",
                  "receiver_id_number": "12345678900",
                  "receiver_name": "IAN CREASE",
                  "trace_number": "021000038461022"
                }
              },
              "type": "declined_transaction"
            },
            "properties": {
              "account_id": {
                "type": "string",
                "description": "The identifier for the Account the Declined Transaction belongs to."
              },
              "amount": {
                "type": "integer",
                "description": "The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents."
              },
              "currency": {
                "type": "string",
                "enum": [
                  "CAD",
                  "CHF",
                  "EUR",
                  "GBP",
                  "JPY",
                  "USD"
                ],
                "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.",
                "x-enum-descriptions": [
                  "Canadian Dollar (CAD)",
                  "Swiss Franc (CHF)",
                  "Euro (EUR)",
                  "British Pound (GBP)",
                  "Japanese Yen (JPY)",
                  "US Dollar (USD)"
                ]
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured."
              },
              "description": {
                "type": "string",
                "description": "This is the description the vendor provides."
              },
              "id": {
                "type": "string",
                "description": "The Declined Transaction identifier."
              },
              "route_id": {
                "type": "string",
                "description": "The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.",
                "nullable": true
              },
              "route_type": {
                "type": "string",
                "description": "The type of the route this Declined Transaction came through.",
                "nullable": true
              },
              "source": {
                "type": "object",
                "title": "Declined Transaction Source",
                "description": "This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.",
                "example": {
                  "category": "ach_decline",
                  "ach_decline": {
                    "amount": 1750,
                    "originator_company_name": "BIG BANK",
                    "originator_company_descriptive_date": null,
                    "originator_company_discretionary_data": null,
                    "originator_company_id": "0987654321",
                    "reason": "insufficient_funds",
                    "receiver_id_number": "12345678900",
                    "receiver_name": "IAN CREASE",
                    "trace_number": "021000038461022"
                  }
                },
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "ach_decline",
                      "card_decline",
                      "check_decline",
                      "inbound_real_time_payments_transfer_decline",
                      "international_ach_decline",
                      "card_route_decline",
                      "other"
                    ],
                    "description": "The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.",
                    "x-enum-descriptions": [
                      "The Declined Transaction was created by a ACH Decline object. Details will be under the `ach_decline` object.",
                      "The Declined Transaction was created by a Card Decline object. Details will be under the `card_decline` object.",
                      "The Declined Transaction was created by a Check Decline object. Details will be under the `check_decline` object.",
                      "The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the `inbound_real_time_payments_transfer_decline` object.",
                      "The Declined Transaction was created by a International ACH Decline object. Details will be under the `international_ach_decline` object.",
                      "The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the `card_route_decline` object.",
                      "The Declined Transaction was made for an undocumented or deprecated reason."
                    ]
                  },
                  "ach_decline": {
                    "type": "object",
                    "title": "ACH Decline",
                    "description": "A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.",
                    "example": {
                      "amount": 1750,
                      "originator_company_name": "BIG BANK",
                      "originator_company_descriptive_date": null,
                      "originator_company_discretionary_data": null,
                      "originator_company_id": "0987654321",
                      "reason": "insufficient_funds",
                      "receiver_id_number": "12345678900",
                      "receiver_name": "IAN CREASE",
                      "trace_number": "021000038461022"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "originator_company_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_descriptive_date": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_discretionary_data": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_company_id": {
                        "type": "string",
                        "description": ""
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "credit_entry_refused_by_receiver",
                          "duplicate_return",
                          "entity_not_active",
                          "transaction_not_allowed",
                          "group_locked",
                          "insufficient_funds",
                          "no_ach_route",
                          "originator_request"
                        ],
                        "description": "Why the ACH transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "A credit was refused.",
                          "Other.",
                          "The account's entity is not active.",
                          "The transaction is not allowed per Increase's terms",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "The account number that was debited does not exist.",
                          "Other."
                        ]
                      },
                      "receiver_id_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_name": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "originator_company_name",
                      "originator_company_descriptive_date",
                      "originator_company_discretionary_data",
                      "originator_company_id",
                      "reason",
                      "receiver_id_number",
                      "receiver_name",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "ACH Declines"
                  },
                  "card_decline": {
                    "type": "object",
                    "title": "Card Decline",
                    "description": "A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.",
                    "example": {
                      "merchant_acceptor_id": "372909060886",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_category_code": "5998",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "network": "visa",
                      "network_details": {
                        "visa": {
                          "electronic_commerce_indicator": "secure_electronic_commerce",
                          "point_of_service_entry_mode": "manual"
                        }
                      },
                      "amount": -1000,
                      "currency": "USD",
                      "reason": "insufficient_funds",
                      "merchant_state": "CA",
                      "real_time_decision_id": null,
                      "digital_wallet_token_id": null
                    },
                    "properties": {
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": "The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with."
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": "The merchant descriptor of the merchant the card is transacting with."
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.",
                        "nullable": true
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "The city the merchant resides in.",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": "The country the merchant resides in.",
                        "nullable": true
                      },
                      "network": {
                        "type": "string",
                        "enum": [
                          "visa"
                        ],
                        "description": "The payment network used to process this card authorization",
                        "x-enum-descriptions": [
                          "Visa"
                        ]
                      },
                      "network_details": {
                        "type": "object",
                        "title": "Network Details",
                        "description": "Fields specific to the `network`",
                        "properties": {
                          "visa": {
                            "type": "object",
                            "title": "Visa",
                            "description": "Fields specific to the `visa` network",
                            "properties": {
                              "electronic_commerce_indicator": {
                                "type": "string",
                                "enum": [
                                  "mail_phone_order",
                                  "recurring",
                                  "installment",
                                  "unknown_mail_phone_order",
                                  "secure_electronic_commerce",
                                  "non_authenticated_security_transaction_at_3ds_capable_merchant",
                                  "non_authenticated_security_transaction",
                                  "non_secure_transaction"
                                ],
                                "description": "For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Single transaction of a mail/phone order: Use to indicate that the transaction is a mail/phone order purchase, not a recurring transaction or installment payment. For domestic transactions in the US region, this value may also indicate one bill payment transaction in the card-present or card-absent environments.",
                                  "Recurring transaction: Payment indicator used to indicate a recurring transaction that originates from an acquirer in the US region.",
                                  "Installment payment: Payment indicator used to indicate one purchase of goods or services that is billed to the account in multiple charges over a period of time agreed upon by the cardholder and merchant from transactions that originate from an acquirer in the US region.",
                                  "Unknown classification: other mail order: Use to indicate that the type of mail/telephone order is unknown.",
                                  "Secure electronic commerce transaction: Use to indicate that the electronic commerce transaction has been authenticated using e.g., 3-D Secure",
                                  "Non-authenticated security transaction at a 3-D Secure-capable merchant, and merchant attempted to authenticate the cardholder using 3-D Secure: Use to identify an electronic commerce transaction where the merchant attempted to authenticate the cardholder using 3-D Secure, but was unable to complete the authentication because the issuer or cardholder does not participate in the 3-D Secure program.",
                                  "Non-authenticated security transaction: Use to identify an electronic commerce transaction that uses data encryption for security however , cardholder authentication is not performed using 3-D Secure.",
                                  "Non-secure transaction: Use to identify an electronic commerce transaction that has no data protection."
                                ]
                              },
                              "point_of_service_entry_mode": {
                                "type": "string",
                                "enum": [
                                  "manual",
                                  "magnetic_stripe_no_cvv",
                                  "optical_code",
                                  "integrated_circuit_card",
                                  "contactless",
                                  "credential_on_file",
                                  "magnetic_stripe",
                                  "contactless_magnetic_stripe",
                                  "integrated_circuit_card_no_cvv"
                                ],
                                "description": "The method used to enter the cardholder's primary account number and card expiration date",
                                "nullable": true,
                                "x-enum-descriptions": [
                                  "Manual key entry",
                                  "Magnetic stripe read, without card verification value",
                                  "Optical code",
                                  "Contact chip card",
                                  "Contactless read of chip card",
                                  "Transaction iniated using a credential that has previously been stored on file",
                                  "Magnetic stripe read",
                                  "Contactless read of magnetic stripe data",
                                  "Contact chip card, without card verification value"
                                ]
                              }
                            },
                            "required": [
                              "electronic_commerce_indicator",
                              "point_of_service_entry_mode"
                            ],
                            "x-title-plural": "Visas"
                          }
                        },
                        "required": [
                          "visa"
                        ],
                        "x-title-plural": "Network Detailss"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "card_not_active",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "cvv2_mismatch",
                          "transaction_not_allowed",
                          "breaches_limit",
                          "webhook_declined",
                          "webhook_timed_out",
                          "declined_by_stand_in_processing"
                        ],
                        "description": "Why the transaction was declined.",
                        "x-enum-descriptions": [
                          "The Card was not active.",
                          "The account's entity was not active.",
                          "The account was inactive.",
                          "The Card's Account did not have a sufficient available balance.",
                          "The given CVV2 did not match the card's value.",
                          "The attempted card transaction is not allowed per Increase's terms.",
                          "The transaction was blocked by a Limit.",
                          "Your application declined the transaction via webhook.",
                          "Your application webhook did not respond without the required timeout.",
                          "Declined by stand-in processing"
                        ]
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "The state the merchant resides in.",
                        "nullable": true
                      },
                      "real_time_decision_id": {
                        "type": "string",
                        "description": "The identifier of the Real-Time Decision sent to approve or decline this transaction.",
                        "nullable": true
                      },
                      "digital_wallet_token_id": {
                        "type": "string",
                        "description": "If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "merchant_acceptor_id",
                      "merchant_descriptor",
                      "merchant_category_code",
                      "merchant_city",
                      "merchant_country",
                      "network",
                      "network_details",
                      "amount",
                      "currency",
                      "reason",
                      "merchant_state",
                      "real_time_decision_id",
                      "digital_wallet_token_id"
                    ],
                    "nullable": true,
                    "x-title-plural": "Card Declines"
                  },
                  "check_decline": {
                    "type": "object",
                    "title": "Check Decline",
                    "description": "A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.",
                    "example": {
                      "amount": -1000,
                      "auxiliary_on_us": "99999",
                      "reason": "insufficient_funds"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "auxiliary_on_us": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "ach_route_canceled",
                          "ach_route_disabled",
                          "breaches_limit",
                          "entity_not_active",
                          "group_locked",
                          "insufficient_funds",
                          "unable_to_locate_account",
                          "unable_to_process",
                          "refer_to_image",
                          "stop_payment_requested",
                          "returned"
                        ],
                        "description": "Why the check was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "The transaction would cause a limit to be exceeded.",
                          "The account's entity is not active.",
                          "Your account is inactive.",
                          "Your account contains insufficient funds.",
                          "Unable to locate account.",
                          "Unable to process.",
                          "Refer to image.",
                          "Stop payment requested for this check.",
                          "Check was returned to sender."
                        ]
                      }
                    },
                    "required": [
                      "amount",
                      "auxiliary_on_us",
                      "reason"
                    ],
                    "nullable": true,
                    "x-title-plural": "Check Declines"
                  },
                  "inbound_real_time_payments_transfer_decline": {
                    "type": "object",
                    "title": "Inbound Real Time Payments Transfer Decline",
                    "description": "A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.",
                    "example": {
                      "amount": 100,
                      "currency": "USD",
                      "reason": "account_number_disabled",
                      "creditor_name": "Ian Crease",
                      "debtor_name": "National Phonograph Company",
                      "debtor_account_number": "987654321",
                      "debtor_routing_number": "101050001",
                      "transaction_identification": "20220501234567891T1BSLZO01745013025",
                      "remittance_information": "Invoice 29582"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be \"USD\" for a Real Time Payments transfer.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "enum": [
                          "account_number_canceled",
                          "account_number_disabled",
                          "group_locked",
                          "entity_not_active",
                          "real_time_payments_not_enabled"
                        ],
                        "description": "Why the transfer was declined.",
                        "x-enum-descriptions": [
                          "The account number is canceled.",
                          "The account number is disabled.",
                          "Your account is inactive.",
                          "The account's entity is not active.",
                          "Your account is not enabled to receive Real Time Payments transfers."
                        ]
                      },
                      "creditor_name": {
                        "type": "string",
                        "description": "The name the sender of the transfer specified as the recipient of the transfer."
                      },
                      "debtor_name": {
                        "type": "string",
                        "description": "The name provided by the sender of the transfer."
                      },
                      "debtor_account_number": {
                        "type": "string",
                        "description": "The account number of the account that sent the transfer."
                      },
                      "debtor_routing_number": {
                        "type": "string",
                        "description": "The routing number of the account that sent the transfer."
                      },
                      "transaction_identification": {
                        "type": "string",
                        "description": "The Real Time Payments network identification of the declined transfer."
                      },
                      "remittance_information": {
                        "type": "string",
                        "description": "Additional information included with the transfer.",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "reason",
                      "creditor_name",
                      "debtor_name",
                      "debtor_account_number",
                      "debtor_routing_number",
                      "transaction_identification",
                      "remittance_information"
                    ],
                    "nullable": true,
                    "x-title-plural": "Inbound Real Time Payments Transfer Declines"
                  },
                  "international_ach_decline": {
                    "type": "object",
                    "title": "International ACH Decline",
                    "description": "A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.",
                    "example": {
                      "amount": -1000,
                      "foreign_exchange_indicator": "fixed_to_fixed",
                      "foreign_exchange_reference_indicator": "blank",
                      "foreign_exchange_reference": null,
                      "destination_country_code": "US",
                      "destination_currency_code": "USD",
                      "foreign_payment_amount": 199,
                      "foreign_trace_number": null,
                      "international_transaction_type_code": "internet_initiated",
                      "originating_currency_code": "USD",
                      "originating_depository_financial_institution_name": "WELLS FARGO BANK",
                      "originating_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "originating_depository_financial_institution_id": "091000019",
                      "originating_depository_financial_institution_branch_country": "US",
                      "originator_city": "BERLIN",
                      "originator_company_entry_description": "RETRY PYMT",
                      "originator_country": "DE",
                      "originator_identification": "770510487A",
                      "originator_name": "BERGHAIN",
                      "originator_postal_code": "50825",
                      "originator_street_address": "Ruedersdorferstr. 7",
                      "originator_state_or_province": null,
                      "payment_related_information": null,
                      "payment_related_information2": null,
                      "receiver_identification_number": "1018790279274",
                      "receiver_street_address": "123 FAKE ST",
                      "receiver_city": "BEVERLY HILLS",
                      "receiver_state_or_province": "CA",
                      "receiver_country": "US",
                      "receiver_postal_code": "90210",
                      "receiving_company_or_individual_name": "IAN CREASE",
                      "receiving_depository_financial_institution_name": "BLUE RIDGE BANK, NATIONAL ASSOCIATI",
                      "receiving_depository_financial_institution_id_qualifier": "national_clearing_system_number",
                      "receiving_depository_financial_institution_id": "101050001",
                      "receiving_depository_financial_institution_country": "US",
                      "trace_number": "010202909100090"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "foreign_exchange_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference_indicator": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_exchange_reference": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "destination_country_code": {
                        "type": "string",
                        "description": ""
                      },
                      "destination_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "foreign_payment_amount": {
                        "type": "integer",
                        "description": ""
                      },
                      "foreign_trace_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "international_transaction_type_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_currency_code": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "originating_depository_financial_institution_branch_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_city": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_company_entry_description": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_country": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_identification": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_name": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "originator_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "originator_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "payment_related_information2": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_identification_number": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_street_address": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_city": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_state_or_province": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiver_country": {
                        "type": "string",
                        "description": ""
                      },
                      "receiver_postal_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "receiving_company_or_individual_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_name": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id_qualifier": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_id": {
                        "type": "string",
                        "description": ""
                      },
                      "receiving_depository_financial_institution_country": {
                        "type": "string",
                        "description": ""
                      },
                      "trace_number": {
                        "type": "string",
                        "description": ""
                      }
                    },
                    "required": [
                      "amount",
                      "foreign_exchange_indicator",
                      "foreign_exchange_reference_indicator",
                      "foreign_exchange_reference",
                      "destination_country_code",
                      "destination_currency_code",
                      "foreign_payment_amount",
                      "foreign_trace_number",
                      "international_transaction_type_code",
                      "originating_currency_code",
                      "originating_depository_financial_institution_name",
                      "originating_depository_financial_institution_id_qualifier",
                      "originating_depository_financial_institution_id",
                      "originating_depository_financial_institution_branch_country",
                      "originator_city",
                      "originator_company_entry_description",
                      "originator_country",
                      "originator_identification",
                      "originator_name",
                      "originator_postal_code",
                      "originator_street_address",
                      "originator_state_or_province",
                      "payment_related_information",
                      "payment_related_information2",
                      "receiver_identification_number",
                      "receiver_street_address",
                      "receiver_city",
                      "receiver_state_or_province",
                      "receiver_country",
                      "receiver_postal_code",
                      "receiving_company_or_individual_name",
                      "receiving_depository_financial_institution_name",
                      "receiving_depository_financial_institution_id_qualifier",
                      "receiving_depository_financial_institution_id",
                      "receiving_depository_financial_institution_country",
                      "trace_number"
                    ],
                    "nullable": true,
                    "x-title-plural": "International ACH Declines"
                  },
                  "card_route_decline": {
                    "type": "object",
                    "title": "Deprecated Card Decline",
                    "description": "A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.",
                    "example": {
                      "amount": -1000,
                      "currency": "USD",
                      "merchant_acceptor_id": "372909060886",
                      "merchant_city": "5364086000",
                      "merchant_country": "USA",
                      "merchant_descriptor": "TENTS R US",
                      "merchant_state": "CA",
                      "merchant_category_code": "5998"
                    },
                    "properties": {
                      "amount": {
                        "type": "integer",
                        "description": "The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents."
                      },
                      "currency": {
                        "type": "string",
                        "enum": [
                          "CAD",
                          "CHF",
                          "EUR",
                          "GBP",
                          "JPY",
                          "USD"
                        ],
                        "description": "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.",
                        "x-enum-descriptions": [
                          "Canadian Dollar (CAD)",
                          "Swiss Franc (CHF)",
                          "Euro (EUR)",
                          "British Pound (GBP)",
                          "Japanese Yen (JPY)",
                          "US Dollar (USD)"
                        ]
                      },
                      "merchant_acceptor_id": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_city": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_country": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_descriptor": {
                        "type": "string",
                        "description": ""
                      },
                      "merchant_state": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      },
                      "merchant_category_code": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "amount",
                      "currency",
                      "merchant_acceptor_id",
                      "merchant_city",
                      "merchant_country",
                      "merchant_descriptor",
                      "merchant_state",
                      "merchant_category_code"
                    ],
                    "nullable": true,
                    "x-title-plural": "Deprecated Card Declines"
                  }
                },
                "required": [
                  "category",
                  "ach_decline",
                  "card_decline",
                  "check_decline",
                  "inbound_real_time_payments_transfer_decline",
                  "international_ach_decline",
                  "card_route_decline"
                ],
                "x-title-plural": "Declined Transaction Sources"
              },
              "type": {
                "type": "string",
                "enum": [
                  "declined_transaction"
                ],
                "description": "A constant representing the object's type. For this resource it will always be `declined_transaction`."
              }
            },
            "required": [
              "account_id",
              "amount",
              "currency",
              "created_at",
              "description",
              "id",
              "route_id",
              "route_type",
              "source",
              "type"
            ],
            "nullable": true,
            "x-title-plural": "Declined Transactions"
          },
          "type": {
            "type": "string",
            "enum": [
              "inbound_real_time_payments_transfer_simulation_result"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`."
          }
        },
        "required": [
          "transaction",
          "declined_transaction",
          "type"
        ],
        "x-title-plural": "Inbound Real Time Payments Transfer Simulation Results"
      },
      "routing_number": {
        "type": "object",
        "title": "Routing Number",
        "description": "Routing numbers are used to identify your bank in a financial transaction.",
        "example": {
          "name": "Chase",
          "routing_number": "021000021",
          "type": "routing_number",
          "ach_transfers": "supported",
          "real_time_payments_transfers": "supported",
          "wire_transfers": "supported"
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the financial institution belonging to a routing number."
          },
          "routing_number": {
            "type": "string",
            "description": "The nine digit routing number identifier."
          },
          "type": {
            "type": "string",
            "enum": [
              "routing_number"
            ],
            "description": "A constant representing the object's type. For this resource it will always be `routing_number`."
          },
          "ach_transfers": {
            "type": "string",
            "enum": [
              "supported",
              "not_supported"
            ],
            "description": "This routing number's support for ACH Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          },
          "real_time_payments_transfers": {
            "type": "string",
            "enum": [
              "supported",
              "not_supported"
            ],
            "description": "This routing number's support for Real Time Payments Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          },
          "wire_transfers": {
            "type": "string",
            "enum": [
              "supported",
              "not_supported"
            ],
            "description": "This routing number's support for Wire Transfers.",
            "x-enum-descriptions": [
              "The routing number can receive this transfer type.",
              "The routing number cannot receive this transfer type."
            ]
          }
        },
        "required": [
          "name",
          "routing_number",
          "type",
          "ach_transfers",
          "real_time_payments_transfers",
          "wire_transfers"
        ],
        "x-title-plural": "Routing Numbers",
        "x-tag": "Routing Numbers"
      },
      "error": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "api_method_not_found_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  404
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "environment_mismatch_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  403
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "idempotency_conflict_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  409
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "idempotency_unprocessable_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  422
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "insufficient_permissions_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  403
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "internal_server_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  500
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "invalid_api_key_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  401
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "invalid_operation_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  409
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "invalid_parameters_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  400
                ]
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Errors Element",
                  "properties": {
                  },
                  "required": [

                  ],
                  "x-title-plural": "Errors Elements"
                },
                "description": "All errors related to parsing the request parameters."
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status",
              "errors"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "malformed_request_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  400
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "object_not_found_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  404
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "private_feature_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  403
                ]
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "rate_limited_error"
                ]
              },
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "nullable": true
              },
              "status": {
                "type": "integer",
                "enum": [
                  429
                ]
              },
              "retry_after": {
                "type": "integer",
                "description": "",
                "nullable": true
              }
            },
            "required": [
              "type",
              "title",
              "detail",
              "status"
            ]
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}